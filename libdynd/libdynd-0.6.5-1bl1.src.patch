--- origsrc/libdynd-0.6.5/CMakeLists.txt	2014-08-29 09:23:05.000000000 +0900
+++ src/libdynd-0.6.5/CMakeLists.txt	2014-11-11 21:17:16.003028500 +0900
@@ -88,7 +88,7 @@ if(WIN32)
         endif ()
     endif()
 else()
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -fomit-frame-pointer -fstrict-aliasing -fPIC -Wall -Wextra -Werror -Wno-missing-field-initializers")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -fomit-frame-pointer -fstrict-aliasing -Wall -Wextra -Wno-missing-field-initializers")
     if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
         # The '-fmax-errors' flag was first supported in gcc 4.6
         if (NOT "${CMAKE_CXX_COMPILER_VERSION}" VERSION_LESS "4.6")
@@ -97,7 +97,7 @@ else()
         # Enable C++11 features for gcc >= 4.7 when CUDA support is disabled
         if (NOT "${CMAKE_CXX_COMPILER_VERSION}" VERSION_LESS "4.7" AND
                 NOT ${DYND_CUDA})
-            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
+            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")
         endif()
     elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
         set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ferror-limit=20")
@@ -120,10 +120,7 @@ else()
 endif()
 
 # Get the git revision
-include(GetGitRevisionDescriptionDyND)
-get_git_head_revision("${CMAKE_CURRENT_SOURCE_DIR}" GIT_REFSPEC DYND_GIT_SHA1)
-git_describe("${CMAKE_CURRENT_SOURCE_DIR}" DYND_VERSION_STRING
-             --dirty --always --match "v*")
+SET(DYND_VERSION_STRING "0.6.5")
 message(STATUS "DyND version: ${DYND_VERSION_STRING}")
 configure_file(
     "${CMAKE_CURRENT_SOURCE_DIR}/src/dynd/git_version.cpp.in"
@@ -584,8 +581,9 @@ if (DYND_SHARED_LIB)
         PROPERTIES
         # For now, during development, embed the full version string
         # to reduce the chance of accidentally linking the wrong one.
-        OUTPUT_NAME "dynd_${DYND_VERSION_STRING}"
+        OUTPUT_NAME "dynd"
         PREFIX "${CMAKE_SHARED_LIBRARY_PREFIX}"
+        SOVERSION 0
         )
 else()
     if (DYND_CUDA)
@@ -695,9 +693,8 @@ endif()
 if (DYND_INSTALL_LIB)
     # Install the libdynd binary
     install(TARGETS libdynd
-        RUNTIME DESTINATION lib${LIB_SUFFIX}
-        LIBRARY DESTINATION lib${LIB_SUFFIX}
-        ARCHIVE DESTINATION lib${LIB_SUFFIX}/static)
+        RUNTIME DESTINATION bin
+        ARCHIVE DESTINATION lib${LIB_SUFFIX})
     # Install the libdynd headers
     install(DIRECTORY "include/dynd"
             DESTINATION "${CMAKE_INSTALL_PREFIX}/include")
--- origsrc/libdynd-0.6.5/include/dynd/platform_definitions.hpp	2014-08-29 09:23:05.000000000 +0900
+++ src/libdynd-0.6.5/include/dynd/platform_definitions.hpp	2014-11-11 21:17:59.184669100 +0900
@@ -17,7 +17,7 @@
 ////////////////////////////////////////////////////////////////////////////////
 #   define DYND_OS_WINDOWS
 
-#elif defined(__linux__)
+#elif defined(__linux__) || defined(__CYGWIN__)
 // platform is a Linux
 #   define DYND_OS_LINUX
 #elif defined(__APPLE__) && defined(__MACH__)
--- origsrc/libdynd-0.6.5/tests/CMakeLists.txt	2014-08-29 09:23:05.000000000 +0900
+++ src/libdynd-0.6.5/tests/CMakeLists.txt	2014-11-11 21:19:11.695411300 +0900
@@ -97,12 +97,9 @@ set(tests_SRC
     test_fft.cpp
     test_shape_tools.cpp
     test_platform.cpp
-    ../thirdparty/gtest/gtest-all.cc
-    ../thirdparty/gtest/gtest_main.cc
     )
 
 include_directories(
-    ../thirdparty
     .
     )
 
@@ -130,13 +127,13 @@ elseif(APPLE)
                 $<TARGET_FILE:test_libdynd>)
     endif()
 else()
-    set_target_properties(test_libdynd PROPERTIES
-        COMPILE_FLAGS "-pthread")
+    #set_target_properties(test_libdynd PROPERTIES
+    #    COMPILE_FLAGS "-pthread")
     #-Wno-unnamed-type-template-args 
 
     target_link_libraries(test_libdynd
         libdynd
-        pthread
+        pthread gtest gtest_main
         )
 endif()
 
