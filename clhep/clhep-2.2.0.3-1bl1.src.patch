--- origsrc/2.2.0.3/CLHEP/cmake/Modules/ClhepBuildLibrary.cmake	2014-08-19 10:21:58.000000000 +0900
+++ src/2.2.0.3/CLHEP/cmake/Modules/ClhepBuildLibrary.cmake	2014-09-20 21:15:39.789286800 +0900
@@ -45,7 +45,7 @@ macro(clhep_build_library package)
   target_link_libraries(${package}S ${package_library_list} )
 
   # Install the libraries
-  INSTALL (TARGETS ${package} ${package}S
+  INSTALL (TARGETS ${package}
       RUNTIME DESTINATION bin
       LIBRARY DESTINATION lib${LIB_SUFFIX}
       ARCHIVE DESTINATION lib${LIB_SUFFIX}
@@ -75,7 +75,7 @@ macro(clhep_build_libclhep )
       )
 
   # export creates library dependency files for CLHEPConfig.cmake
-  INSTALL(TARGETS CLHEP CLHEPS
+  INSTALL(TARGETS CLHEP
       EXPORT CLHEPLibraryDepends
       RUNTIME DESTINATION bin
       LIBRARY DESTINATION lib${LIB_SUFFIX}
@@ -96,7 +96,9 @@ macro(clhep_build_libclhep )
         	 "execute_process(COMMAND \"${CMAKE_COMMAND}\" -E create_symlink ${CMAKE_SHARED_LIBRARY_PREFIX}CLHEP-${VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX} ${CMAKE_SHARED_LIBRARY_PREFIX}CLHEP${CMAKE_SHARED_LIBRARY_SUFFIX} WORKING_DIRECTORY \"\$ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX}\" )" )
   endif()
 
+  if (NOT CYGWIN)
   INSTALL(SCRIPT ${CMAKE_CURRENT_BINARY_DIR}/clhep_static_symlink )
   INSTALL(SCRIPT ${CMAKE_CURRENT_BINARY_DIR}/clhep_shared_symlink )
+  endif (NOT CYGWIN)
 
 endmacro(clhep_build_libclhep )
--- origsrc/2.2.0.3/CLHEP/cmake/Modules/ClhepVariables.cmake	2014-08-19 10:21:58.000000000 +0900
+++ src/2.2.0.3/CLHEP/cmake/Modules/ClhepVariables.cmake	2014-09-20 14:48:00.794699700 +0900
@@ -152,12 +152,12 @@ macro( clhep_set_compiler_flags )
   if( ${clhep_c_compiler} STREQUAL "clang" )
     set(CMAKE_C_FLAGS "-O -pedantic -Wall ${CMAKE_C_FLAGS}")
   elseif( CMAKE_COMPILER_IS_GNUCC )
-    set(CMAKE_C_FLAGS "-O -ansi -pedantic -Wall -D_GNU_SOURCE ${CMAKE_C_FLAGS}")
+    set(CMAKE_C_FLAGS "-O -pedantic -Wall -D_GNU_SOURCE ${CMAKE_C_FLAGS}")
   endif()
   if( ${clhep_cxx_compiler} STREQUAL "clang++" )
     set(CMAKE_CXX_FLAGS "-O -pedantic -Wall ${CMAKE_CXX_FLAGS}")
   elseif(CMAKE_COMPILER_IS_GNUCXX)
-    set(CMAKE_CXX_FLAGS "-O -ansi -pedantic -Wall -D_GNU_SOURCE ${CMAKE_CXX_FLAGS}")
+    set(CMAKE_CXX_FLAGS "-O -pedantic -Wall -D_GNU_SOURCE ${CMAKE_CXX_FLAGS}")
   endif()
   if( ${CMAKE_SYSTEM_NAME} MATCHES "Windows" )
     ##message( STATUS "system is Windows" )
