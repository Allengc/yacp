--- origsrc/gearmand-1.1.14/Makefile.am	2016-11-17 01:47:11.000000000 +0900
+++ src/gearmand-1.1.14/Makefile.am	2016-12-13 21:31:33.105495400 +0900
@@ -10,8 +10,10 @@
 
 ACLOCAL_AMFLAGS= -I m4
 
+AM_LDFLAGS = -no-undefined
+
 bin_PROGRAMS=
-sbin_PROGRAMS= 
+sbin_PROGRAMS=
 check_PROGRAMS=
 noinst_PROGRAMS=
 lib_LTLIBRARIES=
@@ -42,7 +44,7 @@ include libtest/include.am
 include libhostile/include.am
 include libhashkit-1.0/include.am
 
-include docs/include.am
+# include docs/include.am
 include man/include.am
 include libgearmancore/include.am
 include libhashkit/include.am
@@ -107,7 +109,7 @@ maintainer-clean-local:
 	-rm build-aux/install-sh
 	-rm build-aux/ltmain.sh
 	-rm build-aux/missing
-	-rm build-aux/test-driver 
+	-rm build-aux/test-driver
 	-rm gear_config.in
 	-rm config.log
 	-rm config.status
--- origsrc/gearmand-1.1.14/configure.ac	2016-11-17 01:47:11.000000000 +0900
+++ src/gearmand-1.1.14/configure.ac	2016-12-13 21:37:07.667897900 +0900
@@ -11,7 +11,7 @@
 m4_include([version.m4])
 AC_REVISION([m4_esyscmd_s([git describe --always])])
 AC_PREREQ([2.63])
-AC_INIT([gearmand],VERSION_NUMBER,[https://github.com/gearman/gearmand/issues],[gearmand],[http://gearman.info/])
+AC_INIT([gearmand],[1.1.14],[https://github.com/gearman/gearmand/issues],[gearmand],[http://gearman.info/])
 
 AC_CONFIG_AUX_DIR([build-aux])
 
@@ -60,7 +60,7 @@ AS_IF([test "x${ac_cv_prog_cc_c99}" == "
 AC_DEFUN([CHECK_CXX0X],[
           AC_LANG_PUSH([C++])
           AX_CHECK_COMPILE_FLAG([-std=c++0x],[
-                                 CXXFLAGS="$CXXFLAGS -std=c++0x"])
+                                 CXXFLAGS="$CXXFLAGS -std=gnu++0x"])
           AC_LANG_POP([C++])
           ])
 CHECK_CXX0X
@@ -249,11 +249,11 @@ AC_CHECK_LIB([rt],[clock_gettime],
 # Check for OPENSSL
 AX_CHECK_OPENSSL([have_openssl=yes
                   AC_DEFINE([HAVE_OPENSSL],[1],[Enable openssl Support])],
-                  [have_openssl=no]) 
+                  [have_openssl=no])
 AM_CONDITIONAL([ENABLE_OPENSSL],[test "x${have_openssl}" = "xyes"])
 
 # Check for CyaSSL
-AX_CHECK_CYASSL([have_cyassl=yes],[have_cyassl=no]) 
+AX_CHECK_CYASSL([have_cyassl=yes],[have_cyassl=no])
 AM_CONDITIONAL([ENABLE_CYASSL],[test "x${have_cyassl}" = "xyes"])
 
 AC_DEFUN([AX_ENABLE_SSL],
@@ -373,4 +373,3 @@ case "$host_os" in
     echo "*****"
   ;;
 esac
-
--- origsrc/gearmand-1.1.14/gearmand/include.am	2016-09-29 07:53:26.000000000 +0900
+++ src/gearmand-1.1.14/gearmand/include.am	2016-12-13 21:32:05.371168400 +0900
@@ -18,6 +18,7 @@ sbin_PROGRAMS+= gearmand/gearmand
 
 BUILT_SOURCES+= configmake.h
 
+gearmand_gearmand_CPPFLAGS= -I$(top_builddir)
 gearmand_gearmand_LDADD=
 gearmand_gearmand_CXXFLAGS=
 EXTRA_gearmand_gearmand_DEPENDENCIES=
--- origsrc/gearmand-1.1.14/libgearman/include.am	2016-09-29 07:53:26.000000000 +0900
+++ src/gearmand-1.1.14/libgearman/include.am	2016-12-13 21:32:41.890609700 +0900
@@ -1,8 +1,8 @@
 # vim:ft=automake
-# Gearman server and library 
+# Gearman server and library
 # Copyright (C) 2011 - 2013 Data Differential, http://datadifferential.com/
 # Copyright (C) 2009-2010 Brian Aker, Eric Day, Monty Taylor All rights
-# Copyright (C) 2008 Brian Aker, Eric Day 
+# Copyright (C) 2008 Brian Aker, Eric Day
 #
 # Use and distribution licensed under the BSD license.  See
 # the COPYING file in the parent directory for full text.
@@ -139,7 +139,7 @@ libgearman_libgearman_la_SOURCES+= libge
 
 libgearman_libgearman_la_CXXFLAGS+= -DBUILDING_LIBGEARMAN
 
-libgearman_libgearman_la_LDFLAGS+= -version-info $(GEARMAN_LIBRARY_VERSION)
+libgearman_libgearman_la_LDFLAGS+= -no-undefined -version-info $(GEARMAN_LIBRARY_VERSION)
 
 if ENABLE_SSL
 if ENABLE_CYASSL
@@ -163,7 +163,7 @@ endif
 
 DISTCLEANFILES+= config/top.h
 
-# Hostile version 
+# Hostile version
 
 noinst_LTLIBRARIES+= libgearman/libgearman-hostile.la
 
--- origsrc/gearmand-1.1.14/libtest/cmdline.cc	2016-09-29 07:53:26.000000000 +0900
+++ src/gearmand-1.1.14/libtest/cmdline.cc	2016-12-13 21:33:26.046868700 +0900
@@ -61,7 +61,7 @@ using namespace libtest;
 #include <algorithm>
 #include <stdexcept>
 
-#ifndef __USE_GNU
+#if !defined(__USE_GNU) && !defined(__CYGWIN__)
 static char **environ= NULL;
 #endif
 
@@ -137,7 +137,7 @@ Application::Application(const std::stri
   _pid(-1),
   _status(0),
   _app_exit_state(UNINITIALIZED)
-  { 
+  {
     if (_use_libtool)
     {
       if (libtool() == NULL)
@@ -210,7 +210,7 @@ Application::error_t Application::run(co
   fatal_assert(posix_spawnattr_setpgroup(&spawnattr, 0) == 0);
 
   fatal_assert(posix_spawnattr_setflags(&spawnattr, flags) == 0);
-  
+
   create_argv(args);
 
   int spawn_ret;
@@ -221,7 +221,7 @@ Application::error_t Application::run(co
     file_stream.open(gdb_run_file.c_str(), std::fstream::out | std::fstream::trunc);
 
     _gdb_filename= create_tmpfile(_exectuble_name);
-    file_stream 
+    file_stream
       << "set logging redirect on" << std::endl
       << "set logging file " << _gdb_filename << std::endl
       << "set logging overwrite on" << std::endl
@@ -244,8 +244,8 @@ Application::error_t Application::run(co
         const_cast<char *>("-batch"),
         const_cast<char *>("-f"),
         const_cast<char *>("-x"),
-        const_cast<char *>(gdb_run_file.c_str()), 
-        const_cast<char *>(_exectuble_with_path.c_str()), 
+        const_cast<char *>(gdb_run_file.c_str()),
+        const_cast<char *>(_exectuble_with_path.c_str()),
         0};
 
       spawn_ret= posix_spawnp(&_pid, libtool(), &file_actions, &spawnattr, argv, environ);
@@ -258,8 +258,8 @@ Application::error_t Application::run(co
         const_cast<char *>("-batch"),
         const_cast<char *>("-f"),
         const_cast<char *>("-x"),
-        const_cast<char *>(gdb_run_file.c_str()), 
-        const_cast<char *>(_exectuble_with_path.c_str()), 
+        const_cast<char *>(gdb_run_file.c_str()),
+        const_cast<char *>(_exectuble_with_path.c_str()),
         0};
       spawn_ret= posix_spawnp(&_pid, "gdb", &file_actions, &spawnattr, argv, environ);
     }
@@ -464,7 +464,7 @@ Application::error_t Application::join()
     /*
       What we are looking for here is how the exit status happened.
       - 127 means that posix_spawn() itself had an error.
-      - If WEXITSTATUS is positive we need to see if it is a signal that we sent to kill the process. If not something bad happened in the process itself. 
+      - If WEXITSTATUS is positive we need to see if it is a signal that we sent to kill the process. If not something bad happened in the process itself.
       - Finally something has happened that we don't currently understand.
     */
     if (WEXITSTATUS(_status) == 127)
@@ -511,7 +511,7 @@ Application::error_t Application::join()
       if (DEBUG)
       {
         Out << "waitpid() application terminated at request"
-          << " pid:" << _pid 
+          << " pid:" << _pid
           << " name:" << built_argv[0];
       }
 #endif
@@ -519,7 +519,7 @@ Application::error_t Application::join()
     else
     {
       _app_exit_state= Application::UNKNOWN;
-      Error << "Unknown logic state at exit:" << WEXITSTATUS(_status) 
+      Error << "Unknown logic state at exit:" << WEXITSTATUS(_status)
         << " pid:" << _pid
         << " name:" << built_argv[0];
     }
@@ -639,7 +639,7 @@ bool Application::Pipe::read(libtest::vc
 void Application::Pipe::nonblock()
 {
   int flags;
-  do 
+  do
   {
     flags= fcntl(_pipe_fd[READ], F_GETFL, 0);
   } while (flags == -1 and (errno == EINTR or errno == EAGAIN));
@@ -689,10 +689,10 @@ void Application::Pipe::cloexec()
 {
   //if (SOCK_CLOEXEC == 0)
   {
-    if (FD_CLOEXEC) 
+    if (FD_CLOEXEC)
     {
       int flags;
-      do 
+      do
       {
         flags= fcntl(_pipe_fd[WRITE], F_GETFD, 0);
       } while (flags == -1 and (errno == EINTR or errno == EAGAIN));
@@ -705,7 +705,7 @@ void Application::Pipe::cloexec()
 
       int rval;
       do
-      { 
+      {
         rval= fcntl(_pipe_fd[WRITE], F_SETFD, flags | FD_CLOEXEC);
       } while (rval == -1 && (errno == EINTR or errno == EAGAIN));
 
@@ -813,7 +813,7 @@ void Application::create_argv(const char
   else if (_use_ptrcheck)
   {
     /*
-      valgrind --error-exitcode=1 --tool=exp-ptrcheck --log-file= 
+      valgrind --error-exitcode=1 --tool=exp-ptrcheck --log-file=
     */
     vchar::append(built_argv, "valgrind");
     vchar::append(built_argv, "--error-exitcode=1");
--- origsrc/gearmand-1.1.14/libtest/include.am	2016-09-29 07:53:26.000000000 +0900
+++ src/gearmand-1.1.14/libtest/include.am	2016-12-13 21:34:25.214810100 +0900
@@ -174,7 +174,7 @@ libtest_libtest_la_LIBADD+= $(CURL_LIBS)
 libtest_libtest_la_LIBADD+= @RT_LIB@
 
 EXTRA_libtest_libtest_la_DEPENDENCIES+= libtest/abort
-EXTRA_libtest_libtest_la_DEPENDENCIES+= libtest/wait
+EXTRA_libtest_libtest_la_DEPENDENCIES+= libtest/wait$(EXEEXT)
 
 # We are either building in tree, or with
 libtest_libtest_la_SOURCES+= libtest/memcached.cc
@@ -264,4 +264,3 @@ test-backtrace: libtest/backtrace
 
 gdb-backtrace: libtest/backtrace
 	@$(GDB_COMMAND) libtest/backtrace
-
--- origsrc/gearmand-1.1.14/support/gearmand.init	2016-11-17 02:24:30.000000000 +0900
+++ src/gearmand-1.1.14/support/gearmand.init	2016-12-13 23:04:04.385417000 +0900
@@ -18,7 +18,7 @@
 # Description: Gearman is a distributed job system.
 ### END INIT INFO
 
-sysconf=${prefix}/etc/sysconfig/gearmand
+sysconf=/etc/sysconfig/gearmand
 gearmand=${exec_prefix}/sbin/gearmand
 prog=gearmand
 
@@ -29,8 +29,8 @@ if [ -f @sysconf@ ]; then
         . @sysconf@
 fi
 
-[ -z "${PIDFILE}" ] && pidfile="${prefix}/var/run/gearmand/gearmand.pid"
-[ -z "${LOCKFILE}" ] && lockfile="${prefix}/var/lock/subsys/gearmand"
+[ -z "${PIDFILE}" ] && pidfile="/var/run/gearmand/gearmand.pid"
+[ -z "${LOCKFILE}" ] && lockfile="/var/lock/subsys/gearmand"
 
 RETVAL=0
 
--- origsrc/gearmand-1.1.14/tests/include.am	2016-09-29 07:53:26.000000000 +0900
+++ src/gearmand-1.1.14/tests/include.am	2016-12-13 21:35:32.359322100 +0900
@@ -34,7 +34,7 @@ t_cycle_SOURCES=
 t_cycle_LDADD=
 EXTRA_t_cycle_DEPENDENCIES=
 
-EXTRA_t_cycle_DEPENDENCIES+= gearmand/gearmand
+EXTRA_t_cycle_DEPENDENCIES+= gearmand/gearmand$(EXEEXT)
 t_cycle_SOURCES+= tests/cycle.cc
 t_cycle_LDADD+= ${CLIENT_LDADD}
 check_PROGRAMS+=t/cycle
@@ -87,7 +87,7 @@ t_cli_LDADD=
 t_cli_SOURCES+= tests/cli.cc
 EXTRA_t_cli_DEPENDENCIES+= bin/gearman
 EXTRA_t_cli_DEPENDENCIES+= bin/gearadmin
-EXTRA_t_cli_DEPENDENCIES+= gearmand/gearmand
+EXTRA_t_cli_DEPENDENCIES+= gearmand/gearmand$(EXEEXT)
 t_cli_LDADD+= ${CLIENT_LDADD}
 check_PROGRAMS+= t/cli
 noinst_PROGRAMS+= t/cli
@@ -98,7 +98,7 @@ t_gearmand_SOURCES=
 
 t_gearmand_SOURCES+= tests/gearmand.cc
 t_gearmand_LDADD+= ${CLIENT_LDADD}
-EXTRA_t_gearmand_DEPENDENCIES+= gearmand/gearmand
+EXTRA_t_gearmand_DEPENDENCIES+= gearmand/gearmand$(EXEEXT)
 check_PROGRAMS+= t/gearmand
 noinst_PROGRAMS+= t/gearmand
 
@@ -218,4 +218,3 @@ include tests/httpd.am
 include tests/perl/include.am
 
 bogus:
-
