--- origsrc/libbitcoin-consensus-3.5.0/Makefile.am	2018-01-02 15:50:06.000000000 +0900
+++ src/libbitcoin-consensus-3.5.0/Makefile.am	2018-04-05 14:13:57.842000000 +0900
@@ -34,6 +34,7 @@ doc_DATA = \
 lib_LTLIBRARIES = src/libbitcoin-consensus.la
 src_libbitcoin_consensus_la_CPPFLAGS = -I${srcdir}/include -I${srcdir}/src -I${srcdir}/src/clone ${secp256k1_CPPFLAGS}
 src_libbitcoin_consensus_la_LIBADD = ${secp256k1_LIBS}
+src_libbitcoin_consensus_la_LDFLAGS = -no-undefined
 src_libbitcoin_consensus_la_SOURCES = \
     src/clone/amount.h \
     src/clone/hash.cpp \
@@ -153,7 +154,7 @@ if WITH_PYTHON
 
 pkgpyexec_LTLIBRARIES = bindings/python/wrap/_bitcoin-consensus.la
 bindings_python_wrap__bitcoin_consensus_la_CPPFLAGS = -I${srcdir}/include ${python_CPPFLAGS} ${secp256k1_CPPFLAGS}
-bindings_python_wrap__bitcoin_consensus_la_LDFLAGS = -module
+bindings_python_wrap__bitcoin_consensus_la_LDFLAGS = -avoid-version -module -no-undefined ${PYTHON_LDFLAGS}
 bindings_python_wrap__bitcoin_consensus_la_LIBADD = src/libbitcoin-consensus.la ${secp256k1_LIBS}
 bindings_python_wrap__bitcoin_consensus_la_SOURCES = \
     bindings/python/wrap/consensus.cpp
--- origsrc/libbitcoin-consensus-3.5.0/configure.ac	2018-01-02 15:50:06.000000000 +0900
+++ src/libbitcoin-consensus-3.5.0/configure.ac	2018-04-05 14:12:58.229000000 +0900
@@ -449,18 +449,19 @@ AS_CASE([${CC}], [*],
     [AX_CHECK_LINK_FLAG([-fstack-protector-all],
         [LDFLAGS="$LDFLAGS -fstack-protector-all"])])
 
-# Hide internal functions from external libs. Enabled in gcc only.
-#------------------------------------------------------------------------------
-AS_CASE([${CC}], [*gcc*],
-    [AX_CHECK_COMPILE_FLAG([-fvisibility-hidden],
-        [CXXFLAGS="$CXXFLAGS -fvisibility-hidden"])])
-
-# Hide inlines from external libs. Enabled in gcc only.
-#------------------------------------------------------------------------------
-AS_CASE([${CC}], [*gcc*],
-    [AX_CHECK_COMPILE_FLAG([-fvisibility-inlines-hidden],
-        [CXXFLAGS="$CXXFLAGS -fvisibility-inlines-hidden"])])
+if test "$host_os" != "cygwin"; then
+    # Hide internal functions from external libs. Enabled in gcc only.
+    #------------------------------------------------------------------------------
+    AS_CASE([${CC}], [*gcc*],
+        [AX_CHECK_COMPILE_FLAG([-fvisibility-hidden],
+            [CXXFLAGS="$CXXFLAGS -fvisibility-hidden"])])
 
+    # Hide inlines from external libs. Enabled in gcc only.
+    #------------------------------------------------------------------------------
+    AS_CASE([${CC}], [*gcc*],
+        [AX_CHECK_COMPILE_FLAG([-fvisibility-inlines-hidden],
+            [CXXFLAGS="$CXXFLAGS -fvisibility-inlines-hidden"])])
+fi
 
 # Process outputs into templates.
 #==============================================================================
