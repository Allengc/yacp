--- origsrc/vmime/CMakeLists.txt	2014-07-23 00:09:07.000000000 +0900
+++ src/vmime/CMakeLists.txt	2014-07-23 01:22:12.091672600 +0900
@@ -193,7 +193,7 @@ ENDIF()
 SET(CMAKE_INSTALL_LIBDIR lib CACHE PATH "Output directory for libraries")
 
 # Automatically set lib suffix
-IF(UNIX AND NOT APPLE AND NOT CMAKE_CROSSCOMPILING AND NOT EXISTS "/etc/debian_version")
+IF(UNIX AND NOT APPLE AND NOT CMAKE_CROSSCOMPILING AND NOT EXISTS "/etc/debian_version" AND NOT CYGWIN)
 	IF(CMAKE_SIZEOF_VOID_P EQUAL 8 AND NOT LIB_SUFFIX)
 		# ...only if LIB_SUFFIX is not defined...
 		IF(NOT DEFINED LIB_SUFFIX)
@@ -231,6 +231,7 @@ ENDIF()
 IF(VMIME_BUILD_SHARED_LIBRARY)
 	INSTALL(
 		TARGETS ${VMIME_LIBRARY_NAME}
+		RUNTIME DESTINATION bin COMPONENT sharedlibs
 		LIBRARY DESTINATION "${VMIME_INSTALL_LIBDIR}" COMPONENT sharedlibs
 		ARCHIVE DESTINATION "${VMIME_INSTALL_LIBDIR}" COMPONENT sharedlibs
 	)
--- origsrc/vmime/src/vmime/platforms/posix/posixHandler.cpp	2014-07-23 00:09:08.000000000 +0900
+++ src/vmime/src/vmime/platforms/posix/posixHandler.cpp	2014-07-23 00:55:31.071521400 +0900
@@ -237,6 +237,8 @@ unsigned int posixHandler::getThreadId()
 	return static_cast <unsigned int>(::gettid());
 #elif VMIME_HAVE_SYSCALL && VMIME_HAVE_SYSCALL_GETTID
 	return static_cast <unsigned int>(::syscall(SYS_gettid));
+#elif defined(__CYGWIN__)
+	return getProcessId();
 #else
 	#error We have no implementation of getThreadId() for this platform!
 #endif
--- origsrc/vmime/src/vmime/platforms/posix/posixSocket.cpp	2014-07-23 00:09:08.000000000 +0900
+++ src/vmime/src/vmime/platforms/posix/posixSocket.cpp	2014-07-23 00:56:45.634021400 +0900
@@ -466,7 +466,11 @@ const string posixSocket::getPeerName()
 
 		struct hostent *hp;
 
+#if defined(__CYGWIN__)
+		if ((hp = gethostbyaddr(reinterpret_cast <const char *>(&peer),
+#else
 		if ((hp = gethostbyaddr(reinterpret_cast <const void *>(&peer),
+#endif
 				sizeof(peer), peer.sa_family)) != NULL)
 		{
 			return string(hp->h_name);
