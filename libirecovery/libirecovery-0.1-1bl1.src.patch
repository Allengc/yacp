--- origsrc/libirecovery-0.1/Makefile.am	1970-01-01 09:00:00.000000000 +0900
+++ src/libirecovery-0.1/Makefile.am	2012-04-28 18:12:54.859699500 +0900
@@ -0,0 +1,16 @@
+
+INCLUDES = -I$(top_srcdir)/include
+
+bin_PROGRAMS = irecovery
+irecovery_LDADD = libirecovery.la
+irecovery_SOURCES = irecovery.c
+
+include_HEADERS = include/libirecovery.h
+
+lib_LTLIBRARIES = libirecovery.la
+libirecovery_la_LDFLAGS = -no-undefined
+libirecovery_la_LIBADD = -lreadline $(LIBUSB10_LIBS)
+libirecovery_la_SOURCES = libirecovery.c
+
+pkgdata_DATA = scripts/boot.irs scripts/test.irs
+
--- origsrc/libirecovery-0.1/configure.ac	1970-01-01 09:00:00.000000000 +0900
+++ src/libirecovery-0.1/configure.ac	2012-04-28 17:59:46.514147500 +0900
@@ -0,0 +1,41 @@
+#                                               -*- Autoconf -*-
+# Process this file with autoconf to produce a configure script.
+
+AC_PREREQ([2.68])
+AC_INIT([libirecovery], [0.1])
+AC_CONFIG_SRCDIR([irecovery.c])
+AC_CONFIG_HEADERS([config.h])
+AM_INIT_AUTOMAKE
+
+# Checks for programs.
+AC_PROG_CXX
+AC_PROG_CC
+LT_INIT
+
+# Checks for libraries.
+# FIXME: Replace `main' with a function in `-lreadline':
+AC_CHECK_LIB([readline], [main])
+PKG_CHECK_MODULES([LIBUSB10], [libusb-1.0])
+
+# Checks for header files.
+AC_CHECK_HEADERS([fcntl.h inttypes.h limits.h stddef.h stdint.h stdlib.h string.h sys/ioctl.h sys/time.h unistd.h])
+
+# Checks for typedefs, structures, and compiler characteristics.
+AC_HEADER_STDBOOL
+AC_C_INLINE
+AC_TYPE_INT8_T
+AC_TYPE_OFF_T
+AC_TYPE_SIZE_T
+AC_TYPE_SSIZE_T
+AC_TYPE_UINT16_T
+AC_TYPE_UINT32_T
+AC_TYPE_UINT64_T
+AC_TYPE_UINT8_T
+
+# Checks for library functions.
+AC_FUNC_ERROR_AT_LINE
+AC_FUNC_MALLOC
+AC_CHECK_FUNCS([bzero clock_gettime memmove memset strchr strdup strstr strtol uname])
+
+AC_CONFIG_FILES([Makefile])
+AC_OUTPUT
--- origsrc/libirecovery-0.1/libirecovery.c	2011-03-05 05:19:32.000000000 +0900
+++ src/libirecovery-0.1/libirecovery.c	2012-04-28 18:08:21.967272500 +0900
@@ -25,6 +25,7 @@
 
 #ifndef WIN32
 #include <libusb-1.0/libusb.h>
+#undef WIN32
 #else
 #define WIN32_LEAN_AND_MEAN
 #include <windows.h>
