--- origsrc/string_theory-2.0/CMakeLists.txt	2018-01-09 03:01:24.000000000 +0900
+++ src/string_theory-2.0/CMakeLists.txt	2018-03-03 01:51:23.349000000 +0900
@@ -35,22 +35,24 @@ set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PAT
 if(CMAKE_COMPILER_IS_GNUCXX OR "${CMAKE_CXX_COMPILER_ID}" MATCHES ".*Clang")
     set(CMAKE_CXX_FLAGS "-Wall -Wextra ${CMAKE_CXX_FLAGS}")
 
-    include(CheckCXXCompilerFlag)
-    check_cxx_compiler_flag("-std=c++17" HAVE_STD_CXX17)
-    check_cxx_compiler_flag("-std=c++14" HAVE_STD_CXX14)
-    check_cxx_compiler_flag("-std=c++11" HAVE_STD_CXX11)
-    check_cxx_compiler_flag("-std=c++0x" HAVE_STD_CXX0X)
-    if(HAVE_STD_CXX17)
-        set(HAVE_STD_CXX14 1)
-        set(HAVE_STD_CXX11 1)
-        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
-    elseif(HAVE_STD_CXX14)
-        set(HAVE_STD_CXX11 1)
-        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")
-    elseif(HAVE_STD_CXX11)
-        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
-    elseif(HAVE_STD_CXX0X)
-        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
+    if(NOT CYGWIN)
+        include(CheckCXXCompilerFlag)
+        check_cxx_compiler_flag("-std=c++17" HAVE_STD_CXX17)
+        check_cxx_compiler_flag("-std=c++14" HAVE_STD_CXX14)
+        check_cxx_compiler_flag("-std=c++11" HAVE_STD_CXX11)
+        check_cxx_compiler_flag("-std=c++0x" HAVE_STD_CXX0X)
+        if(HAVE_STD_CXX17)
+            set(HAVE_STD_CXX14 1)
+            set(HAVE_STD_CXX11 1)
+            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")
+        elseif(HAVE_STD_CXX14)
+            set(HAVE_STD_CXX11 1)
+            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")
+        elseif(HAVE_STD_CXX11)
+            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
+        elseif(HAVE_STD_CXX0X)
+            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
+        endif()
     endif()
 
     if(APPLE AND (HAVE_STD_CXX11 OR HAVE_STD_CXX0X))
@@ -260,3 +262,10 @@ if(ST_BUILD_TESTS)
     enable_testing()
     add_subdirectory(test)
 endif()
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/string_theory.pc.in ${CMAKE_BINARY_DIR}/string_theory.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/string_theory.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/string_theory-2.0/string_theory.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/string_theory-2.0/string_theory.pc.in	2018-03-03 01:52:36.065000000 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: string_theory
+Description: Flexible C++11 string library with type-safe formatting
+Version: @ST_VERSION@
+Libs: -L${libdir} -lstring_theory
+Cflags: -I${includedir}/
--- origsrc/string_theory-2.0/test/CMakeLists.txt	2018-01-09 03:01:24.000000000 +0900
+++ src/string_theory-2.0/test/CMakeLists.txt	2018-03-03 01:36:36.191000000 +0900
@@ -35,7 +35,9 @@ else()
     set(BUILD_SHARED_LIBS ON  CACHE INTERNAL "Override gtest default")
 endif()
 
-add_subdirectory(gtest-1.8.0 EXCLUDE_FROM_ALL)
+if(NOT CYGWIN)
+    add_subdirectory(gtest-1.8.0 EXCLUDE_FROM_ALL)
+endif()
 
 include_directories(${GTEST_INCLUDE_DIR})
 include_directories(${gtest_SOURCE_DIR}/include ${gtest_SOURCE_DIR})
