--- origsrc/gloox-1.0.13/configure.ac	2015-02-01 08:02:29.000000000 +0900
+++ src/gloox-1.0.13/configure.ac	2015-02-11 01:42:29.731578100 +0900
@@ -20,8 +20,6 @@ dnl Checks for programs.
 AC_PROG_INSTALL
 AC_PROG_CC
 AC_PROG_CXX
-AC_PROG_RANLIB
-AM_PROG_LIBTOOL
 AC_PROG_LIBTOOL
 
 dnl
@@ -94,7 +92,7 @@ AC_MSG_RESULT($libidn)
 
 dnl extra win32 libs
 case "$host_os" in
-  *mingw*|*cygwin*)
+  *mingw*)
       LIBS="${LIBS} -lwsock32 -lgdi32 -ldnsapi";;
   *)
       CXXFLAGS="$CXXFLAGS -ansi";;
@@ -109,13 +107,13 @@ AC_ARG_WITH(schannel, AC_HELP_STRING([--
       schannel=yes, schannel=no)
 if test "$schannel" = "yes"; then
   case "$host_os" in
-    *mingw*|*cygwin*)
+    *mingw*)
         ssl=yes
         LIBS="${LIBS} -lcrypt32 -lsecur32";;
     *)
         schannel=no
         echo "*"
-        echo "* You provided the '--with-schannel' switch. SChannel is only available in MinGW/cygwin. Ignoring."
+        echo "* You provided the '--with-schannel' switch. SChannel is only available in MinGW. Ignoring."
         echo "*";;
   esac
   AC_MSG_CHECKING([if SChannel should be used])
--- origsrc/gloox-1.0.13/src/examples/linklocal_example.cpp	2015-02-01 08:02:13.000000000 +0900
+++ src/gloox-1.0.13/src/examples/linklocal_example.cpp	2015-02-11 02:06:01.152476500 +0900
@@ -111,15 +111,15 @@ class LinkLocalExample : public LinkLoca
       for( ; it != services.end(); ++it )
       {
         printf( "%s:\t%s.%s%s on interface %d\n", (*it).flag == LinkLocal::AddService ? "Added" : "Removed", (*it).service.c_str(), (*it).regtype.c_str(),
-                (*it).domain.c_str(), (*it).interface );
+                (*it).domain.c_str(), (*it).iface );
         if( !m_fClient /*&& (*it)->flag == LinkLocal::AddService && (*it)->service != "js@pitufo"*/ )
         {
           printf( "setting up new local client and connecting to %s.%s%s on interface %d\n",
-                  (*it).service.c_str(), (*it).regtype.c_str(), (*it).domain.c_str(), (*it).interface );
+                  (*it).service.c_str(), (*it).regtype.c_str(), (*it).domain.c_str(), (*it).iface );
           m_fClient = new LinkLocal::Client( JID( "js@pitufo" ) );
           m_fClient->logInstance().registerLogHandler( LogLevelDebug, LogAreaAll, this );
           m_fClient->registerConnectionListener( this );
-          if( !m_fClient->connect( (*it).service, (*it).regtype, (*it).domain, (*it).interface ) )
+          if( !m_fClient->connect( (*it).service, (*it).regtype, (*it).domain, (*it).iface ) )
           {
             printf( "m_fClient->connect() failed\n" );
           }
--- origsrc/gloox-1.0.13/src/linklocalclient.cpp	2015-02-01 08:02:28.000000000 +0900
+++ src/gloox-1.0.13/src/linklocalclient.cpp	2015-02-11 01:51:53.761851500 +0900
@@ -20,6 +20,7 @@
 #include "connectiontcpclient.h"
 
 #include <cstdio>
+#include <sys/time.h>
 
 #if ( !defined( _WIN32 ) && !defined( _WIN32_WCE ) ) || defined( __SYMBIAN32__ )
 # include <arpa/inet.h>
@@ -55,7 +56,7 @@ namespace gloox
     bool Client::connect( const std::string& service, const std::string& type,
                           const std::string& domain, int iface )
     {
-      m_interface = interface;
+      m_interface = iface;
       return resolve( service, type, domain );
     }
 
--- origsrc/gloox-1.0.13/src/linklocalmanager.cpp	2015-02-01 08:02:28.000000000 +0900
+++ src/gloox-1.0.13/src/linklocalmanager.cpp	2015-02-11 01:51:01.136851500 +0900
@@ -20,6 +20,7 @@
 #include "util.h"
 
 #include <cstdio>
+#include <sys/time.h>
 
 #if ( !defined( _WIN32 ) && !defined( _WIN32_WCE ) ) || defined( __SYMBIAN32__ )
 # include <unistd.h>
@@ -197,7 +198,7 @@ namespace gloox
 
     void Manager::handleBrowse( Flag flag, const std::string& service, const std::string& regtype, const std::string& domain, int iface, bool moreComing )
     {
-      Service s( flag, service, regtype, domain, interface );
+      Service s( flag, service, regtype, domain, iface );
       m_tmpServices.push_back( s );
 
 //       switch( flag )
