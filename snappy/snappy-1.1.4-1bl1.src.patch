--- origsrc/snappy-1.1.4/Makefile.am	1980-01-01 17:00:00.000000000 +0900
+++ src/snappy-1.1.4/Makefile.am	2017-01-30 22:08:42.300224400 +0900
@@ -3,7 +3,7 @@ ACLOCAL_AMFLAGS = -I m4
 # Library.
 lib_LTLIBRARIES = libsnappy.la
 libsnappy_la_SOURCES = snappy.cc snappy-sinksource.cc snappy-stubs-internal.cc snappy-c.cc
-libsnappy_la_LDFLAGS = -version-info $(SNAPPY_LTVERSION)
+libsnappy_la_LDFLAGS = -no-undefined -version-info $(SNAPPY_LTVERSION)
 
 include_HEADERS = snappy.h snappy-sinksource.h snappy-stubs-public.h snappy-c.h
 noinst_HEADERS = snappy-internal.h snappy-stubs-internal.h snappy-test.h
@@ -17,7 +17,7 @@ TESTS = snappy_unittest
 noinst_PROGRAMS = $(TESTS)
 
 EXTRA_DIST = autogen.sh testdata/alice29.txt testdata/asyoulik.txt testdata/baddata1.snappy testdata/baddata2.snappy testdata/baddata3.snappy testdata/geo.protodata testdata/fireworks.jpeg testdata/html testdata/html_x_4 testdata/kppkn.gtb testdata/lcet10.txt testdata/paper-100k.pdf testdata/plrabn12.txt testdata/urls.10K
-dist_doc_DATA = ChangeLog COPYING INSTALL NEWS README format_description.txt framing_format.txt
+dist_doc_DATA = ChangeLog COPYING NEWS README format_description.txt framing_format.txt
 
 pkgconfigdir = $(libdir)/pkgconfig
 nodist_pkgconfig_DATA = snappy.pc
--- origsrc/snappy-1.1.4/configure.ac	1980-01-01 17:00:00.000000000 +0900
+++ src/snappy-1.1.4/configure.ac	2017-01-30 22:09:31.482005500 +0900
@@ -21,7 +21,10 @@ AC_LANG([C++])
 AC_C_BIGENDIAN
 AC_TYPE_SIZE_T
 AC_TYPE_SSIZE_T
-AC_CHECK_HEADERS([stdint.h stddef.h sys/mman.h sys/resource.h windows.h byteswap.h sys/byteswap.h sys/endian.h sys/time.h])
+AC_CHECK_HEADERS([stdint.h stddef.h sys/mman.h sys/resource.h byteswap.h sys/byteswap.h sys/endian.h sys/time.h])
+if test "$host_os" != "cygwin"; then
+  AC_CHECK_HEADERS([windows.h])
+fi
 
 # Don't use AC_FUNC_MMAP, as it checks for mappings of already-mapped memory,
 # which we don't need (and does not exist on Windows).
@@ -49,7 +52,7 @@ fi
 # See if we have __builtin_expect.
 # TODO: Use AC_CACHE.
 AC_MSG_CHECKING([if the compiler supports __builtin_expect])
- 
+
 AC_TRY_COMPILE(, [
     return __builtin_expect(1, 1) ? 1 : 0
 ], [
@@ -83,23 +86,6 @@ fi
 # Other compression libraries; the unit test can use these for comparison
 # if they are available. If they are not found, just ignore.
 UNITTEST_LIBS=""
-AC_DEFUN([CHECK_EXT_COMPRESSION_LIB], [
-  AH_CHECK_LIB([$1])
-  AC_CHECK_LIB(
-    [$1],
-    [$2],
-    [
-      AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_LIB$1))
-      UNITTEST_LIBS="-l$1 $UNITTEST_LIBS"
-    ],
-    [true]
-  )
-])
-CHECK_EXT_COMPRESSION_LIB([z], [zlibVersion])
-CHECK_EXT_COMPRESSION_LIB([lzo2], [lzo1x_1_15_compress])
-CHECK_EXT_COMPRESSION_LIB([lzf], [lzf_compress])
-CHECK_EXT_COMPRESSION_LIB([fastlz], [fastlz_compress])
-CHECK_EXT_COMPRESSION_LIB([quicklz], [qlz_compress])
 AC_SUBST([UNITTEST_LIBS])
 
 # These are used by snappy-stubs-public.h.in.
