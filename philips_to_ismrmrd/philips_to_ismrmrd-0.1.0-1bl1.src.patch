diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/philips_to_ismrmrd-0.1.0/CMakeLists.txt src/philips_to_ismrmrd-0.1.0/CMakeLists.txt
--- origsrc/philips_to_ismrmrd-0.1.0/CMakeLists.txt	2015-10-23 12:20:29.000000000 +0900
+++ src/philips_to_ismrmrd-0.1.0/CMakeLists.txt	2016-02-06 11:34:48.224238500 +0900
@@ -21,11 +21,11 @@ if (WIN32)
     #ADD_DEFINITIONS(-D__BUILD_CONVERTER_TINYXML__)
 else (WIN32)
   if (UNIX)
-    if (APPLE)
+    if (APPLE OR CYGWIN)
       SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
-    else (APPLE)
+  else (APPLE OR CYGWIN)
       SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -std=c++11")
-    endif (APPLE)
+  endif (APPLE OR CYGWIN)
   endif (UNIX)
 endif (WIN32)
 
@@ -33,6 +33,7 @@ endif (WIN32)
 find_path(ISMRMRD_CMAKE_MODULES FindIsmrmrd.cmake HINTS
   $ENV{ISMRMRD_HOME}/share/ismrmrd/cmake
   ${CMAKE_INSTALL_PREFIX}/share/ismrmrd/cmake
+  /usr/lib/cmake/ismrmrd
   /usr/local/share/ismrmrd/cmake)
 
 if (NOT ISMRMRD_CMAKE_MODULES)
@@ -46,7 +47,7 @@ set(CMAKE_MODULE_PATH ${ISMRMRD_CMAKE_MO
 ###############################################################
 
 # Added for static linking!!!
-set(Boost_USE_STATIC_LIBS ON)
+set(Boost_USE_STATIC_LIBS OFF)
 find_package(Boost COMPONENTS thread system program_options filesystem REQUIRED)
 
 find_package(LibXml2 REQUIRED)
@@ -57,9 +58,8 @@ find_package(Ismrmrd REQUIRED)
 INCLUDE_DIRECTORIES( ${ISMRMRD_INCLUDE_DIR} )
 
 add_executable(philips_to_ismrmrd 
-               main.cpp
-	       pugixml.cpp)
+               main.cpp)
 
-target_link_libraries(philips_to_ismrmrd ${LIBXSLT_LIBRARIES} ${LIBXML2_LIBRARIES} ${ISMRMRD_LIBRARIES} ${Boost_LIBRARIES})
+target_link_libraries(philips_to_ismrmrd ${LIBXSLT_LIBRARIES} ${LIBXML2_LIBRARIES} ${ISMRMRD_LIBRARIES} ${Boost_LIBRARIES} pugixml)
 
 install(TARGETS philips_to_ismrmrd DESTINATION bin)
