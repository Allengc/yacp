--- origsrc/fastbit-ibis1.3.8/src/Makefile.am	2013-01-09 16:45:10.000000000 +0900
+++ src/fastbit-ibis1.3.8/src/Makefile.am	2013-11-25 08:58:22.237161500 +0900
@@ -13,7 +13,7 @@ libfastbit_la_SOURCES = part.cpp bordm.c
  ikeywords.cpp selectClause.cpp dictionary.cpp whereClause.cpp idbak.cpp \
  icmoins.cpp resource.cpp fromClause.cpp rids.cpp fromLexer.cc whereParser.cc \
  selectLexer.cc whereLexer.cc fromParser.cc selectParser.cc
-libfastbit_la_LDFLAGS = -version-info $(LIB_VERSION_INFO)
+libfastbit_la_LDFLAGS = -version-info $(LIB_VERSION_INFO) -no-undefined
 
 include_HEADERS = array_t.h bitvector.h bitvector64.h blob.h bord.h bundle.h capi.h category.h colValues.h column.h const.h countQuery.h dictionary.h fileManager.h horometer.h ibin.h ibis.h idirekte.h ikeywords.h index.h irelic.h iroster.h quaere.h mensa.h meshQuery.h part.h filter.h jnatural.h jrange.h whereClause.h whereLexer.h whereParser.hh qExpr.h query.h resource.h rids.h tab.h table.h tafel.h twister.h util.h utilidor.h location.hh position.hh stack.hh selectClause.h selectLexer.h selectParser.hh fromClause.h fromLexer.h fromParser.hh fastbit-config.h
 
--- origsrc/fastbit-ibis1.3.8/tests/Makefile.am	2013-07-11 05:45:19.000000000 +0900
+++ src/fastbit-ibis1.3.8/tests/Makefile.am	2013-11-25 08:58:22.252786500 +0900
@@ -19,7 +19,7 @@ jrf_CPPFLAGS = -I../src
 jrf_DEPENDENCIES = ../src/libfastbit.la
 jrf_LDADD = ../src/libfastbit.la
 #
-EXDIR=../examples
+EXDIR=$(top_builddir)/examples
 TESTDIR=$(PWD)/tmp
 #
 IBISEXE=$(EXDIR)/ibis$(EXEEXT)
@@ -224,31 +224,31 @@ check-labeling: $(IBISEXE) $(TESTDIR)/m0
 	@echo
 #
 $(TESTDIR)/t0/-part.txt: $(ARDEAEXE) test0.csv TESTDIR
-	@test -f $(TESTDIR)/t0/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/t0 -m "a:key, b:text, c:ulong" -t test0.csv >> $(TESTDIR)/std.log 2>&1
+	@test -f $(TESTDIR)/t0/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/t0 -m "a:key, b:text, c:ulong" -t $(srcdir)/test0.csv >> $(TESTDIR)/std.log 2>&1
 $(TESTDIR)/t1/-part.txt: $(ARDEAEXE) test0.csv TESTDIR
 	@if [ ! -f $(TESTDIR)/t1/-part.txt ] ; then \
-	$(ARDEAEXE) -d $(TESTDIR)/t1 -m "a:byte, b:float, c:ushort" -t test0.csv >> $(TESTDIR)/std.log 2>&1; \
-	$(ARDEAEXE) -d $(TESTDIR)/t1 -m "a:byte, b:float, c:ushort" -t test0.csv >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t1 -m "a:byte, b:float, c:ushort" -t $(srcdir)/test0.csv >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t1 -m "a:byte, b:float, c:ushort" -t $(srcdir)/test0.csv >> $(TESTDIR)/std.log 2>&1; \
 	fi
 $(TESTDIR)/rowlist: $(TESTDIR)/t1/-part.txt TESTDIR
 	@test -f $(TESTDIR)/rowlist || (echo 0 > $(TESTDIR)/rowlist; echo 99 >> $(TESTDIR)/rowlist;)
 $(TESTDIR)/t2/t2a/-part.txt: $(ARDEAEXE) test0.csv TESTDIR
-	@test -f $(TESTDIR)/t2/t2a/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/t2/t2a -m "a:byte, b:float, c:ubyte" -t test0.csv -tag "OA=1" >> $(TESTDIR)/std.log 2>&1
+	@test -f $(TESTDIR)/t2/t2a/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/t2/t2a -m "a:byte, b:float, c:ubyte" -t $(srcdir)/test0.csv -tag "OA=1" >> $(TESTDIR)/std.log 2>&1
 $(TESTDIR)/t2/t2b/-part.txt: $(ARDEAEXE) test0.csv TESTDIR
 	@if [ ! -f $(TESTDIR)/t2/t2b/-part.txt ] ; then \
-	$(ARDEAEXE) -d $(TESTDIR)/t2/t2b -m "a:byte, b:float, c:ubyte" -t test0.csv >> $(TESTDIR)/std.log 2>&1; \
-	$(ARDEAEXE) -d $(TESTDIR)/t2/t2b -m "a:byte, b:float, c:ubyte" -t test0.csv -tag "OA=2" >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t2/t2b -m "a:byte, b:float, c:ubyte" -t $(srcdir)/test0.csv >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t2/t2b -m "a:byte, b:float, c:ubyte" -t $(srcdir)/test0.csv -tag "OA=2" >> $(TESTDIR)/std.log 2>&1; \
 	fi
 $(TESTDIR)/t2/t2c/-part.txt: $(ARDEAEXE) test0.csv TESTDIR
 	@if [ ! -f $(TESTDIR)/t2/t2c/-part.txt ] ; then \
-	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t test0.csv >> $(TESTDIR)/std.log 2>&1; \
-	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t test0.csv >> $(TESTDIR)/std.log 2>&1; \
-	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t test0.csv >> $(TESTDIR)/std.log 2>&1; \
-	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t test0.csv -tag "OA=3" >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t $(srcdir)/test0.csv >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t $(srcdir)/test0.csv >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t $(srcdir)/test0.csv >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t $(srcdir)/test0.csv -tag "OA=3" >> $(TESTDIR)/std.log 2>&1; \
 	fi
 $(TESTDIR)/acmpub/-part.txt: $(ARDEAEXE) $(IBISEXE) acmpub.csv TESTDIR
 	@rm -rf $(TESTDIR)/acmpub
-	@$(ARDEAEXE) -d $(TESTDIR)/acmpub -m "id:u, t:t, a:t, v:k, y:u" -t acmpub.csv >> $(TESTDIR)/std.log 2>&1
+	@$(ARDEAEXE) -d $(TESTDIR)/acmpub -m "id:u, t:t, a:t, v:k, y:u" -t $(srcdir)/acmpub.csv >> $(TESTDIR)/std.log 2>&1
 	@$(IBISEXE) -d $(TESTDIR)/acmpub -b "a:keywords delimiters=','" -b "id:noindex" -b "<binning none>" -v >> $(TESTDIR)/std.log 2>&1
 # a simple internal sanity check
 sanity-check: TESTDIR $(IBISEXE) $(TESTDIR)/append.log
@@ -399,9 +399,9 @@ $(TESTDIR)/1: $(TESTDIR)
 $(TESTDIR)/2: $(TESTDIR)
 	@test -d $(TESTDIR)/2 || mkdir $(TESTDIR)/2
 $(TESTDIR)/marksdb/-part.txt: readcsv$(EXEEXT) marksdb.csv TESTDIR
-	@test -f $(TESTDIR)/marksdb/-part.txt || ./readcsv marksdb.csv $(TESTDIR)/marksdb >> $(TESTDIR)/std.log 2>&1
+	@test -f $(TESTDIR)/marksdb/-part.txt || ./readcsv $(srcdir)/marksdb.csv $(TESTDIR)/marksdb >> $(TESTDIR)/std.log 2>&1
 $(TESTDIR)/maurel/-part.txt: $(ARDEAEXE) maurel.csv TESTDIR
-	@test -f $(TESTDIR)/maurel/-part.txt || $(ARDEAEXE) -t maurel.csv -d $(TESTDIR)/maurel -m "b:k, r:s, c:s, f:s, e:s, y:s, g:k, t:s, n:k, a:k, v:s, i:k, h:s, d:k, p:s, q:k, s:s, m:s, j:k" >> $(TESTDIR)/std.log 2>&1
+	@test -f $(TESTDIR)/maurel/-part.txt || $(ARDEAEXE) -t $(srcdir)/maurel.csv -d $(TESTDIR)/maurel -m "b:k, r:s, c:s, f:s, e:s, y:s, g:k, t:s, n:k, a:k, v:s, i:k, h:s, d:k, p:s, q:k, s:s, m:s, j:k" >> $(TESTDIR)/std.log 2>&1
 $(TESTDIR)/jrf/-part.txt: jrf$(EXEEXT) TESTDIR
 	@test -f $(TESTDIR)/jrf/-part.txt || ./jrf$(EXEEXT) $(TESTDIR)/jrf 1e5 >> $(TESTDIR)/std.log 2>&1
 $(TESTDIR)/0/test0/-part.txt: $(TESTDIR)/0 test0.csv $(ARDEAEXE) TESTDIR
@@ -409,9 +409,9 @@ $(TESTDIR)/0/test0/-part.txt: $(TESTDIR)
 $(TESTDIR)/0/test1/-part.txt: $(TESTDIR)/0 test1.csv readcsv$(EXEEXT) TESTDIR
 	@test -f $(TESTDIR)/0/test1/-part.txt || ./readcsv test1.csv $(TESTDIR)/0/test1 >> $(TESTDIR)/std.log 2>&1
 $(TESTDIR)/m0/-part.txt: $(ARDEAEXE) test0.csv TESTDIR
-	@test -f $(TESTDIR)/m0/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/m0 -m "a:b, b:f, c:s" -t test0.csv -tag "meshShape=(20,5)" >> $(TESTDIR)/std.log 2>&1
+	@test -f $(TESTDIR)/m0/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/m0 -m "a:b, b:f, c:s" -t $(srcdir)/test0.csv -tag "meshShape=(20,5)" >> $(TESTDIR)/std.log 2>&1
 $(TESTDIR)/m1/-part.txt: $(ARDEAEXE) test1.csv TESTDIR
-	@test -f $(TESTDIR)/m1/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/m1 -m "a0:d, a1:b, a2:b, b0:f, b1:s, b2:s, c0:f, c1:i, c2:i" -t test1.csv -tag "meshShape=(10, 10, 10)" >> $(TESTDIR)/std.log 2>&1
+	@test -f $(TESTDIR)/m1/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/m1 -m "a0:d, a1:b, a2:b, b0:f, b1:s, b2:s, c0:f, c1:i, c2:i" -t $(srcdir)/test1.csv -tag "meshShape=(10, 10, 10)" >> $(TESTDIR)/std.log 2>&1
 # really small data partitions (wee == very small)
 $(TESTDIR)/w1/-part.txt: $(ARDEAEXE) TESTDIR
 	@test -f $@ || $(ARDEAEXE) -d $(TESTDIR)/w1 -m "c_1:s, c_2:d, c_3:k" -r "105, 1.1," >> $(TESTDIR)/std.log 2>&1
