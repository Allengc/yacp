diff -wuprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x aclocal.m4 -x configure -x config.h -x '*.h.in' -x COPYING -x INSTALL -x ansi2knr.c -x ar-lib -x config-ml.in -x elisp-comp -x mdate-sh -x mkinstalldirs -x py-compile -x symlink-tree -x test-driver -x texinfo.tex -x ylwrap -x Makefile.in -x GNUmakefile.in -x makefile.in -x libtool.m4 -x ltoptions.m4 -x ltsugar.m4 -x ltversion.m4 -x lt~obsolete.m4 -x ltmain.sh -x compile -x depcomp -x install-sh -x missing -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 -x fastbit-config.h origsrc/fastbit-2.0.1/Makefile.am src/fastbit-2.0.1/Makefile.am
--- origsrc/fastbit-2.0.1/Makefile.am	2014-10-24 15:39:49.000000000 +0900
+++ src/fastbit-2.0.1/Makefile.am	2015-05-30 18:36:35.382430700 +0900
@@ -43,3 +43,6 @@ maintainer-clean: maintainer-clean-am
 #	-rm -rf `find $(distdir) \( -name CVS -o \name .svn \)`
 
 .PHONY: docs more-check full-check
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = fastbit.pc
diff -wuprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x aclocal.m4 -x configure -x config.h -x '*.h.in' -x COPYING -x INSTALL -x ansi2knr.c -x ar-lib -x config-ml.in -x elisp-comp -x mdate-sh -x mkinstalldirs -x py-compile -x symlink-tree -x test-driver -x texinfo.tex -x ylwrap -x Makefile.in -x GNUmakefile.in -x makefile.in -x libtool.m4 -x ltoptions.m4 -x ltsugar.m4 -x ltversion.m4 -x lt~obsolete.m4 -x ltmain.sh -x compile -x depcomp -x install-sh -x missing -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 -x fastbit-config.h origsrc/fastbit-2.0.1/configure.ac src/fastbit-2.0.1/configure.ac
--- origsrc/fastbit-2.0.1/configure.ac	2014-12-14 16:44:20.000000000 +0900
+++ src/fastbit-2.0.1/configure.ac	2015-05-30 18:36:01.220947600 +0900
@@ -181,9 +181,9 @@ AC_COMPILE_IFELSE([
 	    ac_save_CFLAGS="$CFLAGS"
 	    ac_save_CXXFLAGS="$CXXFLAGS"
 	    ac_save_XCXXFLAGS="$EXTRA_CXXFLAGS"
-	    CFLAGS="$CFLAGS -std=c99";
-	    EXTRA_CXXFLAGS="-std=c++11";
-	    CXXFLAGS="$CXXFLAGS -std=c++11";
+	    CFLAGS="$CFLAGS -std=gnu99";
+	    EXTRA_CXXFLAGS="-std=gnu++11";
+	    CXXFLAGS="$CXXFLAGS -std=gnu++11";
 	    AC_COMPILE_IFELSE([
 	    AC_LANG_PROGRAM([[
 		#include <unordered_map>
@@ -535,6 +535,7 @@ CXXFLAGS="$CXXFLAGS $PTHREAD_CFLAGS"
 
 # make sure FlexLexer.h defines yywrap
 #AC_CHECK_HEADER([FlexLexer.h], [], [AC_MSG_ERROR([unable to find FlexLexer.h])])
+if test "$host_os" != "cygwin"; then
 AC_MSG_CHECKING([if the default FlexLexer.h defines yywrap])
 if AC_TRY_COMMAND($CXX $CXXFLAGS -c src/whereLexer.cc) && test -s whereLexer.o; then
   AC_MSG_RESULT([yes])
@@ -563,7 +564,7 @@ else
   fi
 fi
 rm -f whereLexer.o
-
+fi
 
 # check for java include directory
 AC_DEFUN([AC_JNI_INCLUDE_DIR],[
@@ -847,7 +848,7 @@ AC_SUBST(CFLAGS)
 AC_SUBST(OBJDIR)
 #end stuff not generated by autoscan
 
-AC_CONFIG_FILES([Makefile src/Makefile examples/Makefile tests/Makefile
+AC_CONFIG_FILES([fastbit.pc Makefile src/Makefile examples/Makefile tests/Makefile
 	         java/Makefile contrib/Makefile contrib/fbmerge/Makefile])
 AC_CONFIG_FILES([tests/scripts/fastbit-config],
 		[chmod a+x tests/scripts/fastbit-config])
diff -wuprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x aclocal.m4 -x configure -x config.h -x '*.h.in' -x COPYING -x INSTALL -x ansi2knr.c -x ar-lib -x config-ml.in -x elisp-comp -x mdate-sh -x mkinstalldirs -x py-compile -x symlink-tree -x test-driver -x texinfo.tex -x ylwrap -x Makefile.in -x GNUmakefile.in -x makefile.in -x libtool.m4 -x ltoptions.m4 -x ltsugar.m4 -x ltversion.m4 -x lt~obsolete.m4 -x ltmain.sh -x compile -x depcomp -x install-sh -x missing -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 -x fastbit-config.h origsrc/fastbit-2.0.1/contrib/fbmerge/Makefile.am src/fastbit-2.0.1/contrib/fbmerge/Makefile.am
--- origsrc/fastbit-2.0.1/contrib/fbmerge/Makefile.am	2014-01-07 21:38:23.000000000 +0900
+++ src/fastbit-2.0.1/contrib/fbmerge/Makefile.am	2015-05-30 17:45:39.470843200 +0900
@@ -3,11 +3,10 @@ EXTRA_DIST = fbmerge.sln fbmerge.vcproj
 
 bin_PROGRAMS = fbmerge
 fbmerge_SOURCES = fbmerge.cpp
+fbmerge_CPPFLAGS = -I$(top_srcdir)/src
 fbmerge_DEPENDENCIES = ../../src/libfastbit.la
 fbmerge_LDADD = ../../src/libfastbit.la
 #
-../../src/libfastbit.la::
-	cd ../../src && $(MAKE) libfastbit.la
 
 distclean-local:
 	-rm -rf .ibis
diff -wuprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x aclocal.m4 -x configure -x config.h -x '*.h.in' -x COPYING -x INSTALL -x ansi2knr.c -x ar-lib -x config-ml.in -x elisp-comp -x mdate-sh -x mkinstalldirs -x py-compile -x symlink-tree -x test-driver -x texinfo.tex -x ylwrap -x Makefile.in -x GNUmakefile.in -x makefile.in -x libtool.m4 -x ltoptions.m4 -x ltsugar.m4 -x ltversion.m4 -x lt~obsolete.m4 -x ltmain.sh -x compile -x depcomp -x install-sh -x missing -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 -x fastbit-config.h origsrc/fastbit-2.0.1/examples/Makefile.am src/fastbit-2.0.1/examples/Makefile.am
--- origsrc/fastbit-2.0.1/examples/Makefile.am	2014-02-20 04:36:42.000000000 +0900
+++ src/fastbit-2.0.1/examples/Makefile.am	2015-05-30 17:45:39.470843200 +0900
@@ -2,31 +2,29 @@ AUTOMAKE_OPTIONS=gnu
 bin_PROGRAMS = ibis tcapi thula ardea rara tiapi
 #EXTRA_PROGRAMS =
 ibis_SOURCES = ibis.cpp
+ibis_CPPFLAGS = -I$(top_srcdir)/src
 ibis_DEPENDENCIES = ../src/libfastbit.la
 ibis_LDADD = ../src/libfastbit.la
 rara_SOURCES = rara.cpp
+rara_CPPFLAGS = -I$(top_srcdir)/src
 rara_DEPENDENCIES = ../src/libfastbit.la
 rara_LDADD = ../src/libfastbit.la
 thula_SOURCES = thula.cpp
+thula_CPPFLAGS = -I$(top_srcdir)/src
 thula_DEPENDENCIES = ../src/libfastbit.la
 thula_LDADD = ../src/libfastbit.la
 ardea_SOURCES = ardea.cpp
+ardea_CPPFLAGS = -I$(top_srcdir)/src
 ardea_DEPENDENCIES = ../src/libfastbit.la
 ardea_LDADD = ../src/libfastbit.la
 tcapi_SOURCES = tcapi.c
+tcapi_CPPFLAGS = -I$(top_srcdir)/src
 tcapi_DEPENDENCIES = ../src/libfastbit.la
 tcapi_LDADD = ../src/libfastbit.la
 tiapi_SOURCES = tiapi.c
+tiapi_CPPFLAGS = -I$(top_srcdir)/src
 tiapi_DEPENDENCIES = ../src/libfastbit.la
 tiapi_LDADD = ../src/libfastbit.la
-#
-../src/libfastbit.la::
-	cd ../src && $(MAKE) libfastbit.la
-# has to be linked with $(CXXLINK)
-tcapi$(EXEEXT): tcapi.$(OBJEXT) $(tcapi_LDADD)
-	$(CXXLINK) tcapi.$(OBJEXT) $(tcapi_LDADD) $(LIBS)
-tiapi$(EXEEXT): tiapi.$(OBJEXT) $(tiapi_LDADD)
-	$(CXXLINK) tiapi.$(OBJEXT) $(tiapi_LDADD) $(LIBS)
 
 clean-local:
 	-rm -rf *.dSYM .ibis
diff -wuprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x aclocal.m4 -x configure -x config.h -x '*.h.in' -x COPYING -x INSTALL -x ansi2knr.c -x ar-lib -x config-ml.in -x elisp-comp -x mdate-sh -x mkinstalldirs -x py-compile -x symlink-tree -x test-driver -x texinfo.tex -x ylwrap -x Makefile.in -x GNUmakefile.in -x makefile.in -x libtool.m4 -x ltoptions.m4 -x ltsugar.m4 -x ltversion.m4 -x lt~obsolete.m4 -x ltmain.sh -x compile -x depcomp -x install-sh -x missing -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 -x fastbit-config.h origsrc/fastbit-2.0.1/fastbit.pc.in src/fastbit-2.0.1/fastbit.pc.in
--- origsrc/fastbit-2.0.1/fastbit.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/fastbit-2.0.1/fastbit.pc.in	2015-05-30 18:36:46.233974900 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: fastbit
+Description: Minimalistic data warehousing engine designed to test ideas on bitmap indexes
+Version: @VERSION@
+Libs: -L${libdir} -lfastbit
+Cflags: -I${includedir}
diff -wuprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x aclocal.m4 -x configure -x config.h -x '*.h.in' -x COPYING -x INSTALL -x ansi2knr.c -x ar-lib -x config-ml.in -x elisp-comp -x mdate-sh -x mkinstalldirs -x py-compile -x symlink-tree -x test-driver -x texinfo.tex -x ylwrap -x Makefile.in -x GNUmakefile.in -x makefile.in -x libtool.m4 -x ltoptions.m4 -x ltsugar.m4 -x ltversion.m4 -x lt~obsolete.m4 -x ltmain.sh -x compile -x depcomp -x install-sh -x missing -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 -x fastbit-config.h origsrc/fastbit-2.0.1/src/Makefile.am src/fastbit-2.0.1/src/Makefile.am
--- origsrc/fastbit-2.0.1/src/Makefile.am	2014-07-20 02:47:56.000000000 +0900
+++ src/fastbit-2.0.1/src/Makefile.am	2015-05-30 17:45:39.470843200 +0900
@@ -13,7 +13,7 @@ libfastbit_la_SOURCES = part.cpp bordm.c
  imesa.cpp ikeywords.cpp selectClause.cpp dictionary.cpp whereClause.cpp \
  idbak.cpp icmoins.cpp resource.cpp fromClause.cpp rids.cpp selectParser.cc \
  fromLexer.cc whereParser.cc selectLexer.cc whereLexer.cc fromParser.cc
-libfastbit_la_LDFLAGS = -version-info $(LIB_VERSION_INFO)
+libfastbit_la_LDFLAGS = -no-undefined -version-info $(LIB_VERSION_INFO)
 
 include_HEADERS = array_t.h bitvector.h bitvector64.h blob.h bord.h bundle.h capi.h category.h colValues.h column.h const.h countQuery.h dictionary.h fileManager.h horometer.h iapi.h ibin.h ibis.h idirekte.h ikeywords.h index.h irelic.h iroster.h quaere.h mensa.h meshQuery.h part.h filter.h jnatural.h jrange.h whereClause.h whereLexer.h whereParser.hh qExpr.h query.h resource.h rids.h tab.h table.h tafel.h twister.h util.h utilidor.h location.hh position.hh stack.hh selectClause.h selectLexer.h selectParser.hh fromClause.h fromLexer.h fromParser.hh fastbit-config.h
 
diff -wuprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x aclocal.m4 -x configure -x config.h -x '*.h.in' -x COPYING -x INSTALL -x ansi2knr.c -x ar-lib -x config-ml.in -x elisp-comp -x mdate-sh -x mkinstalldirs -x py-compile -x symlink-tree -x test-driver -x texinfo.tex -x ylwrap -x Makefile.in -x GNUmakefile.in -x makefile.in -x libtool.m4 -x ltoptions.m4 -x ltsugar.m4 -x ltversion.m4 -x lt~obsolete.m4 -x ltmain.sh -x compile -x depcomp -x install-sh -x missing -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 -x fastbit-config.h origsrc/fastbit-2.0.1/tests/Makefile.am src/fastbit-2.0.1/tests/Makefile.am
--- origsrc/fastbit-2.0.1/tests/Makefile.am	2014-11-27 04:28:04.000000000 +0900
+++ src/fastbit-2.0.1/tests/Makefile.am	2015-05-30 17:45:39.489093000 +0900
@@ -3,24 +3,24 @@ EXTRA_PROGRAMS = readcsv smatch inRange
 check_SCRIPTS = scripts/matchCounts.pl scripts/printWarning.pl scripts/query-count.list scripts/star2002.sh
 readcsv_SOURCES = readcsv.cpp
 smatch_SOURCES = smatch.cpp
-smatch_CPPFLAGS = -I../src
+smatch_CPPFLAGS = -I$(top_srcdir)/src
 smatch_DEPENDENCIES = ../src/libfastbit.la
 smatch_LDADD = ../src/libfastbit.la
 inRange_SOURCES = inRange.cpp
-inRange_CPPFLAGS = -I../src
+inRange_CPPFLAGS = -I$(top_srcdir)/src
 inRange_DEPENDENCIES = ../src/libfastbit.la
 inRange_LDADD = ../src/libfastbit.la
 setqgen_SOURCES = setqgen.cpp
-setqgen_CPPFLAGS = -I../src
+setqgen_CPPFLAGS = -I$(top_srcdir)/src
 setqgen_DEPENDENCIES = ../src/libfastbit.la
 setqgen_LDADD = ../src/libfastbit.la
 jrf_SOURCES = jrf.cpp
-jrf_CPPFLAGS = -I../src
+jrf_CPPFLAGS = -I$(top_srcdir)/src
 jrf_DEPENDENCIES = ../src/libfastbit.la
 jrf_LDADD = ../src/libfastbit.la
 #
-EXDIR=../examples
-TESTDIR=$(PWD)/tmp
+EXDIR=$(top_builddir)/examples
+TESTDIR=/tmp
 #
 IBISEXE=$(EXDIR)/ibis$(EXEEXT)
 ARDEAEXE=$(EXDIR)/ardea$(EXEEXT)
@@ -64,14 +64,14 @@ check-thula: $(THULAEXE) $(TESTDIR)/t1/-
 	@rm -f $(TESTDIR)/thula-0 $(TESTDIR)/thula-1
 	@$(THULAEXE) -d $(TESTDIR)/t1/ -w "a = 0" 2>&1 | if [ `fgrep " produced 2 hits out of 200 records" - | wc -l` -eq 1 ] ; then echo Passed $@ case 1; else echo Did NOT pass $@ case 1; fi
 	@$(THULAEXE) -d $(TESTDIR)/t1 -w "a = b and -1 < c < 10" 2>&1 | if [ `fgrep " produced 18 hits out of 200 records" - | wc -l` -eq 1 ] ; then echo Passed $@ case 2; else echo Did NOT pass $@ case 2; fi
-	@$(THULAEXE) -d $(TESTDIR)/t1 -w "-2 <= c < 10" -s "min(a/b), max(a/b), avg(a/b)" -x $(TESTDIR)/thula-0 >> $(TESTDIR)/std.log 2>&1 && if [ `diff -w vault/thula-0 $(TESTDIR)/thula-0 | wc -l` -eq 0 ] ; then echo Passed $@ case 3; else echo Did NOT pass $@ case 3; fi
-	@$(THULAEXE) -d $(TESTDIR)/t1 -w "a < c and b > 30" -s "b, min(b/c*c), max(sqrt(a/c)^2*c), countdistinct(a)/count(*)" -x $(TESTDIR)/thula-1 >> $(TESTDIR)/std.log 2>&1 && if [ `diff -w vault/thula-1 $(TESTDIR)/thula-1 | wc -l` -eq 0 ] ; then echo Passed $@ case 4; else echo Did NOT pass $@ case 4; fi
+	@$(THULAEXE) -d $(TESTDIR)/t1 -w "-2 <= c < 10" -s "min(a/b), max(a/b), avg(a/b)" -x $(TESTDIR)/thula-0 >> $(TESTDIR)/std.log 2>&1 && if [ `diff -w $(srcdir)/vault/thula-0 $(TESTDIR)/thula-0 | wc -l` -eq 0 ] ; then echo Passed $@ case 3; else echo Did NOT pass $@ case 3; fi
+	@$(THULAEXE) -d $(TESTDIR)/t1 -w "a < c and b > 30" -s "b, min(b/c*c), max(sqrt(a/c)^2*c), countdistinct(a)/count(*)" -x $(TESTDIR)/thula-1 >> $(TESTDIR)/std.log 2>&1 && if [ `diff -w $(srcdir)/vault/thula-1 $(TESTDIR)/thula-1 | wc -l` -eq 0 ] ; then echo Passed $@ case 4; else echo Did NOT pass $@ case 4; fi
 	@$(THULAEXE) -d $(TESTDIR)/t2 -w "a between -1 and 1" 2>&1 | if [ `fgrep "t2) contains 14 rows but no column" - | wc -l` -eq 1 ] ; then echo Passed $@ case 5; else echo Did NOT pass $@ case 5; fi
 	@echo
 check-tcapi: $(TCAPIEXE) $(TESTDIR)/t1/-part.txt $(TESTDIR)/t0/-part.txt
 	@$(TCAPIEXE) $(TESTDIR)/t1/ "a = 0" 2>&1 | if [ `fgrep " produced 2 hits" - | wc -l` -eq 1 ] ; then echo Passed $@ case 1; else echo Did NOT pass $@ case 1; fi
 	@$(TCAPIEXE) $(TESTDIR)/t1 "a = b and -2 <= c < 10" 2>&1 | if [ `fgrep " produced 18 hits" - | wc -l` -eq 1 ] ; then echo Passed $@ case 2; else echo Did NOT pass $@ case 2; fi
-	@$(TCAPIEXE) $(TESTDIR)/t0 "c < 10" a l 2>&1 | tail -1 > $(TESTDIR)/tcapi-3 ; if [ `diff -w vault/tcapi-3 $(TESTDIR)/tcapi-3 | wc -l` -eq 0 ] ; then echo Passed $@ case 3; else echo Did NOT pass $@ case 3; fi
+	@$(TCAPIEXE) $(TESTDIR)/t0 "c < 10" a l 2>&1 | tail -1 > $(TESTDIR)/tcapi-3 ; if [ `diff -w $(srcdir)/vault/tcapi-3 $(TESTDIR)/tcapi-3 | wc -l` -eq 0 ] ; then echo Passed $@ case 3; else echo Did NOT pass $@ case 3; fi
 	@echo
 check-ibis: $(IBISEXE) $(TESTDIR)/t1/-part.txt $(TESTDIR)/rowlist $(TESTDIR)/t2/t2a/-part.txt $(TESTDIR)/t2/t2b/-part.txt $(TESTDIR)/t2/t2c/-part.txt
 	@rm -f $(TESTDIR)/hist0 $(TESTDIR)/hist1 $(TESTDIR)/hist2
@@ -81,19 +81,19 @@ check-ibis: $(IBISEXE) $(TESTDIR)/t1/-pa
 	@$(IBISEXE) -d $(TESTDIR)/t1 -q "where -1 < c < 10" 2>&1 | if [ `fgrep " produced 19 hits" - | wc -l` -eq 1 ] ; then echo Passed $@ case 4; else echo Did NOT pass $@ case 4; fi
 	@$(IBISEXE) -d $(TESTDIR)/t1 -k "a < 2 || c < 3" -q "where a=0" 2>&1 | if [ `fgrep " produced 2 hits" - | wc -l` -eq 1 ] ; then echo Passed $@ case 5; else echo Did NOT pass $@ case 5; fi
 	@$(IBISEXE) -d $(TESTDIR)/t1 -q "where c < 2" 2>&1 | if [ `fgrep " produced 4 hits" - | wc -l` -eq 1 ] ; then echo Passed $@ case 6; else echo Did NOT pass $@ case 6; fi
-	@$(IBISEXE) -d $(TESTDIR)/t1 -p "c : c>80" 2>&1 | perl -p -e 's/ in Partition .*//' | if [ `diff -w vault/hist0 - | wc -l` -eq 0 ] ; then echo Passed $@ case 7; else echo Did NOT pass $@ case 7; fi
-	@$(IBISEXE) -d $(TESTDIR)/t1 -p "joint a b : c>50" > $(TESTDIR)/hist1 2>&1 && if [ `diff -w vault/hist1 $(TESTDIR)/hist1 | wc -l` -eq 0 ] ; then echo Passed $@ case 8; else echo Did NOT pass $@ case 8; fi
-	@$(IBISEXE) -d $(TESTDIR)/t1 -p "joint c a b : c>50" > $(TESTDIR)/hist2 2>&1 && if [ `diff -w vault/hist2 $(TESTDIR)/hist2 | wc -l` -eq 0 ] ; then echo Passed $@ case 9; else echo Did NOT pass $@ case 9; fi
-	@$(IBISEXE) -d $(TESTDIR)/t1 -p "weighted a b : c>80" > $(TESTDIR)/hist3 2>&1 && if [ `diff -w vault/hist3 $(TESTDIR)/hist3 | wc -l` -eq 0 ] ; then echo Passed $@ case 10; else echo Did NOT pass $@ case 10; fi
+	@$(IBISEXE) -d $(TESTDIR)/t1 -p "c : c>80" 2>&1 | perl -p -e 's/ in Partition .*//' | if [ `diff -w $(srcdir)/vault/hist0 - | wc -l` -eq 0 ] ; then echo Passed $@ case 7; else echo Did NOT pass $@ case 7; fi
+	@$(IBISEXE) -d $(TESTDIR)/t1 -p "joint a b : c>50" > $(TESTDIR)/hist1 2>&1 && if [ `diff -w $(srcdir)/vault/hist1 $(TESTDIR)/hist1 | wc -l` -eq 0 ] ; then echo Passed $@ case 8; else echo Did NOT pass $@ case 8; fi
+	@$(IBISEXE) -d $(TESTDIR)/t1 -p "joint c a b : c>50" > $(TESTDIR)/hist2 2>&1 && if [ `diff -w $(srcdir)/vault/hist2 $(TESTDIR)/hist2 | wc -l` -eq 0 ] ; then echo Passed $@ case 9; else echo Did NOT pass $@ case 9; fi
+	@$(IBISEXE) -d $(TESTDIR)/t1 -p "weighted a b : c>80" > $(TESTDIR)/hist3 2>&1 && if [ `diff -w $(srcdir)/vault/hist3 $(TESTDIR)/hist3 | wc -l` -eq 0 ] ; then echo Passed $@ case 10; else echo Did NOT pass $@ case 10; fi
 	@$(IBISEXE) -d $(TESTDIR)/t1 -q "select c where b > 90 order by c" -r -v 2 2>&1 | if [ `fgrep "Successfully verified 16 hits" - | wc -l` -gt 0 ] ; then echo Passed $@ case 11; else echo Did NOT pass $@ case 11; fi
 	@$(IBISEXE) -d $(TESTDIR)/t1 -v -t >| $(TESTDIR)/check-ibis-12.log 2>&1 && if [ `fgrep "found no error" $(TESTDIR)/check-ibis-12.log | wc -l` -eq 1 ] ; then echo Passed $@ case 12; else echo Did NOT pass $@ case 12; fi
 	@$(IBISEXE) -r $(TESTDIR)/t2/t2c -v 2 2>&1 | if [ `fgrep 'reorder' - | fgrep 'completed successfully' - | wc -l` -eq 1 ] ; then echo Passed $@ case 13; else  echo Did NOT pass $@ case 13; fi
-	@$(IBISEXE) -d $(TESTDIR)/t2 -q "select floor(b/10) as sb, avg(c), count(*)/countdistinct(c) where a < 25" -o $(TESTDIR)/hist4 2>&1 | if [ `scripts/printWarning.pl - | wc -l` -eq 0 ] ; then echo Passed $@ case 14; else echo Did NOT pass $@ case 14; fi
-	@if [ ` diff -w vault/hist4 $(TESTDIR)/hist4 | wc -l ` -eq 0 ] ; then echo Passed $@ case 15; else echo Did NOT pass $@ case 15; fi
-	@$(IBISEXE) -d $(TESTDIR)/t2 -q "select count(*), avg(c), countdistinct(c), floor(b/10) as sb where a < 25" -o $(TESTDIR)/hist5 2>&1 | if [ `scripts/printWarning.pl - | wc -l` -eq 0 ] ; then echo Passed $@ case 16; else echo Did NOT pass $@ case 16; fi
-	@if [ ` diff -w vault/hist5 $(TESTDIR)/hist5 | wc -l ` -eq 0 ] ; then echo Passed $@ case 17; else echo Did NOT pass $@ case 17; fi
-	@$(IBISEXE) -d $(TESTDIR)/t2 -q "select ceil(c/7), sum(a), count(*), avg(b), floor(b/4) where c > 90" -o $(TESTDIR)/hist6 2>&1 | if [ `scripts/printWarning.pl - | wc -l` -eq 0 ] ; then echo Passed $@ case 18; else echo Did NOT pass $@ case 18; fi
-	@if [ ` diff -w vault/hist6 $(TESTDIR)/hist6 | wc -l ` -eq 0 ] ; then echo Passed $@ case 19; else echo Did NOT pass $@ case 19; fi
+	@$(IBISEXE) -d $(TESTDIR)/t2 -q "select floor(b/10) as sb, avg(c), count(*)/countdistinct(c) where a < 25" -o $(TESTDIR)/hist4 2>&1 | if [ `$(srcdir)/scripts/printWarning.pl - | wc -l` -eq 0 ] ; then echo Passed $@ case 14; else echo Did NOT pass $@ case 14; fi
+	@if [ ` diff -w $(srcdir)/vault/hist4 $(TESTDIR)/hist4 | wc -l ` -eq 0 ] ; then echo Passed $@ case 15; else echo Did NOT pass $@ case 15; fi
+	@$(IBISEXE) -d $(TESTDIR)/t2 -q "select count(*), avg(c), countdistinct(c), floor(b/10) as sb where a < 25" -o $(TESTDIR)/hist5 2>&1 | if [ `$(srcdir)/scripts/printWarning.pl - | wc -l` -eq 0 ] ; then echo Passed $@ case 16; else echo Did NOT pass $@ case 16; fi
+	@if [ ` diff -w $(srcdir)/vault/hist5 $(TESTDIR)/hist5 | wc -l ` -eq 0 ] ; then echo Passed $@ case 17; else echo Did NOT pass $@ case 17; fi
+	@$(IBISEXE) -d $(TESTDIR)/t2 -q "select ceil(c/7), sum(a), count(*), avg(b), floor(b/4) where c > 90" -o $(TESTDIR)/hist6 2>&1 | if [ `$(srcdir)/scripts/printWarning.pl - | wc -l` -eq 0 ] ; then echo Passed $@ case 18; else echo Did NOT pass $@ case 18; fi
+	@if [ ` diff -w $(srcdir)/vault/hist6 $(TESTDIR)/hist6 | wc -l ` -eq 0 ] ; then echo Passed $@ case 19; else echo Did NOT pass $@ case 19; fi
 	@echo
 check-text: $(IBISEXE) smatch${EXEEXT} inRange${EXEEXT} $(TESTDIR)/t0/-part.txt $(TESTDIR)/acmpub1/-part.txt $(TESTDIR)/acmpub2/-part.txt
 	@$(IBISEXE) -d $(TESTDIR)/t0/ -b -v -v > $(TESTDIR)/check-text.log 2>&1
@@ -111,40 +111,40 @@ check-text: $(IBISEXE) smatch${EXEEXT} i
 	@fgrep -v 'a, b' $(TESTDIR)/t0-3 | cut -d',' -f1 - > $(TESTDIR)/t0-5
 	@if [ `diff $(TESTDIR)/t0-4 $(TESTDIR)/t0-5 | fgrep '>' | wc -l` -eq 1 ] ; then echo Passed $@ case 4; else echo Did NOT pass $@ case 4; fi
 	@$(IBISEXE) -d $(TESTDIR)/t0 -q "select count(*), floor(c/10), 10-floor(c/7) as b, max(c) as mx, avg(c) as av where a in ('1', '11', '21') or c < 29 order by b, av desc" -o $(TESTDIR)/text-0 >> $(TESTDIR)/check-text.log 2>&1
-	@if [ `diff -w vault/text-0 $(TESTDIR)/text-0 | wc -l` -eq 0 ] ; then echo Passed $@ case 5; else echo Did NOT pass $@ case 5; fi
+	@if [ `diff -w $(srcdir)/vault/text-0 $(TESTDIR)/text-0 | wc -l` -eq 0 ] ; then echo Passed $@ case 5; else echo Did NOT pass $@ case 5; fi
 	@if [ `$(IBISEXE) -d $(TESTDIR)/t0 -yank "c < 10" -z -v 2>&1 | fgrep 'doDeletion purgeInactive(t0) returned 90' | wc -l` -eq 1 ] ; then echo Passed $@ case 6; else echo Did NOT pass $@ case 6; fi
 	@if [ "`$(IBISEXE) -d $(TESTDIR)/t0 -q "select AVG(c) where -3 < c < 20 || a = '79'" 2>&1 | fgrep 15`" == "15" ] ; then echo Passed $@ case 7; else echo Did NOT pass $@ case 7; fi
-	@if [ `./smatch${EXEEXT} $(TESTDIR)/smatch 2>&1 | fgrep -v std::exception | diff - vault/smatch-1 | wc -l` -eq 0 ] ; then echo Passed $@ case 8; else echo Did NOT pass $@ case 8; fi
-	@if [ `./inRange${EXEEXT} $(TESTDIR)/inRange 2>&1 | fgrep -v std::exception | diff -w - vault/inRange-1 | wc -l` -eq 0 ] ; then echo Passed $@ case 9; else echo Did NOT pass $@ case 9; fi
+	@if [ `./smatch${EXEEXT} $(TESTDIR)/smatch 2>&1 | fgrep -v std::exception | diff - $(srcdir)/vault/smatch-1 | wc -l` -eq 0 ] ; then echo Passed $@ case 8; else echo Did NOT pass $@ case 8; fi
+	@if [ `./inRange${EXEEXT} $(TESTDIR)/inRange 2>&1 | fgrep -v std::exception | diff -w - $(srcdir)/vault/inRange-1 | wc -l` -eq 0 ] ; then echo Passed $@ case 9; else echo Did NOT pass $@ case 9; fi
 	@$(IBISEXE) -d $(TESTDIR)/acmpub1 -v -o $(TESTDIR)/acmpub-0 -q "select v, count(*) where v in (VLDB, SIGMOD)" >> $(TESTDIR)/check-text.log 2>&1
-	@if [ `diff $(TESTDIR)/acmpub-0 vault/acmpub-0 | wc -l` -eq 0 ] ; then echo Passed $@ case 10; else echo Did NOT pass $@ case 10; fi
+	@if [ `diff $(TESTDIR)/acmpub-0 $(srcdir)/vault/acmpub-0 | wc -l` -eq 0 ] ; then echo Passed $@ case 10; else echo Did NOT pass $@ case 10; fi
 	@$(IBISEXE) -d $(TESTDIR)/acmpub1 -v -o $(TESTDIR)/acmpub-1 -q "select v where a contains ('Jim Gray', 'J. Ullman')" >> $(TESTDIR)/check-text.log 2>&1
-	@if [ `diff $(TESTDIR)/acmpub-1 vault/acmpub-1 | wc -l` -eq 0 ] ; then echo Passed $@ case 11; else echo Did NOT pass $@ case 11; fi
+	@if [ `diff $(TESTDIR)/acmpub-1 $(srcdir)/vault/acmpub-1 | wc -l` -eq 0 ] ; then echo Passed $@ case 11; else echo Did NOT pass $@ case 11; fi
 	@$(IBISEXE) -d $(TESTDIR)/acmpub1 -v -q "select count(*) as c where t contains 'aggregation' and a contains 'Joseph M. Hellerstein'" -ouput-with-header $(TESTDIR)/acmpub-2 >> $(TESTDIR)/check-text.log 2>&1
-	@if [ `diff $(TESTDIR)/acmpub-2 vault/acmpub-2 | wc -l` -eq 0 ] ; then echo Passed $@ case 12; else echo Did NOT pass $@ case 12; fi
+	@if [ `diff $(TESTDIR)/acmpub-2 $(srcdir)/vault/acmpub-2 | wc -l` -eq 0 ] ; then echo Passed $@ case 12; else echo Did NOT pass $@ case 12; fi
 	@$(IBISEXE) -d $(TESTDIR)/acmpub2 -v -o $(TESTDIR)/acmpub-3 -q "select v, count(*) where v in (VLDB, SIGMOD)" >> $(TESTDIR)/check-text.log 2>&1
-	@if [ `diff $(TESTDIR)/acmpub-3 vault/acmpub-0 | wc -l` -eq 0 ] ; then echo Passed $@ case 13; else echo Did NOT pass $@ case 13; fi
+	@if [ `diff $(TESTDIR)/acmpub-3 $(srcdir)/vault/acmpub-0 | wc -l` -eq 0 ] ; then echo Passed $@ case 13; else echo Did NOT pass $@ case 13; fi
 	@$(IBISEXE) -d $(TESTDIR)/acmpub2 -v -o $(TESTDIR)/acmpub-4 -q "select v where a contains ('Jim Gray', 'J. Ullman')" >> $(TESTDIR)/check-text.log 2>&1
-	@if [ `diff $(TESTDIR)/acmpub-4 vault/acmpub-1 | wc -l` -eq 0 ] ; then echo Passed $@ case 14; else echo Did NOT pass $@ case 14; fi
+	@if [ `diff $(TESTDIR)/acmpub-4 $(srcdir)/vault/acmpub-1 | wc -l` -eq 0 ] ; then echo Passed $@ case 14; else echo Did NOT pass $@ case 14; fi
 	@$(IBISEXE) -d $(TESTDIR)/acmpub2 -v -q "select count(*) as c where t contains 'aggregation' and a contains 'Joseph M. Hellerstein'" -ouput-with-header $(TESTDIR)/acmpub-5 >> $(TESTDIR)/check-text.log 2>&1
-	@if [ `diff $(TESTDIR)/acmpub-5 vault/acmpub-2 | wc -l` -eq 0 ] ; then echo Passed $@ case 15; else echo Did NOT pass $@ case 15; fi
-	@if [ `scripts/printWarning.pl $(TESTDIR)/check-text.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/check-text.log; fi
+	@if [ `diff $(TESTDIR)/acmpub-5 $(srcdir)/vault/acmpub-2 | wc -l` -eq 0 ] ; then echo Passed $@ case 15; else echo Did NOT pass $@ case 15; fi
+	@if [ `$(srcdir)/scripts/printWarning.pl $(TESTDIR)/check-text.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/check-text.log; fi
 	@echo
 check-jrf: $(IBISEXE) $(TESTDIR)/jrf/-part.txt
-	@scripts/jrf-check.pl $(IBISEXE) $(TESTDIR)/jrf | tee $(TESTDIR)/check-jrf.log
+	@$(srcdir)/scripts/jrf-check.pl $(IBISEXE) $(TESTDIR)/jrf | tee $(TESTDIR)/check-jrf.log
 	@if [ `fgrep Success $(TESTDIR)/check-jrf.log | wc -l` -eq 3 ] ; then echo Passed $@; else echo Did NOT pass $@; fi
 	@echo
 check-marksdb: $(TESTDIR)/marksdb/-part.txt $(IBISEXE)
 	@$(IBISEXE) -d $(TESTDIR)/marksdb -b -v -v > $(TESTDIR)/check-marksdb.log 2>&1
 	@$(IBISEXE) -d $(TESTDIR)/marksdb -q "select lat,lon,3956 * 2 * asin(sqrt(pow(sin((fabs(-10) - fabs(lat)) * 0.0174/2), 2) + cos(fabs(-10) * 0.0174) * cos(fabs(lat) * 0.0174) * pow(sin((112 - lon) * 0.0174/2), 2))) as d where time = 77328 order by d, lon limit 0, 120" -o $(TESTDIR)/marksdb-1 >> $(TESTDIR)/check-marksdb.log 2>&1
-	@if [ `scripts/hcompare.pl vault/marksdb-1 $(TESTDIR)/marksdb-1 | fgrep 'acceptable' | wc -l` -eq 1 ] ; then echo Passed $@ case 1; else echo Did NOT pass $@ case 1; fi
+	@if [ `$(srcdir)/scripts/hcompare.pl $(srcdir)/vault/marksdb-1 $(TESTDIR)/marksdb-1 | fgrep 'acceptable' | wc -l` -eq 1 ] ; then echo Passed $@ case 1; else echo Did NOT pass $@ case 1; fi
 	@$(IBISEXE) -d $(TESTDIR)/marksdb -q "select lat,lon,3956 * 2 * asin(sqrt(pow(sin((fabs(-10) - fabs(lat)) * 0.0174/2), 2) + cos(fabs(-10) * 0.0174) * cos(fabs(lat) * 0.0174) * pow(sin((112 - lon) * 0.0174/2), 2))) as d where (time < 0 || time = 77328) and d <= 12 order by d, lon limit 150" -o $(TESTDIR)/marksdb-2 >> $(TESTDIR)/check-marksdb.log 2>&1
-	@if [ `scripts/hcompare.pl $(TESTDIR)/marksdb-1 $(TESTDIR)/marksdb-2 | fgrep acceptable | wc -l` -eq 1 ] ; then echo Passed $@ case 2; else echo Did NOT pass $@ case 2; fi
+	@if [ `$(srcdir)/scripts/hcompare.pl $(TESTDIR)/marksdb-1 $(TESTDIR)/marksdb-2 | fgrep acceptable | wc -l` -eq 1 ] ; then echo Passed $@ case 2; else echo Did NOT pass $@ case 2; fi
 	@$(IBISEXE) -d $(TESTDIR)/marksdb -q "select lat,lon where time = 77328 and 3956 * 2 * asin(sqrt(pow(sin((fabs(-10) - fabs(lat)) * 0.0174/2), 2) + cos(fabs(-10) * 0.0174) * cos(fabs(lat) * 0.0174) * pow(sin((112 - lon) * 0.0174/2), 2))) <= 15 order by lat DESC, lon DESC" -o $(TESTDIR)/marksdb-3 >> $(TESTDIR)/check-marksdb.log 2>&1
-	@if [ `diff -w vault/marksdb-3 $(TESTDIR)/marksdb-3 | wc -l` -eq 0 ] ; then echo Passed $@ case 3; else echo Did NOT pass $@ case 3; fi
+	@if [ `diff -w $(srcdir)/vault/marksdb-3 $(TESTDIR)/marksdb-3 | wc -l` -eq 0 ] ; then echo Passed $@ case 3; else echo Did NOT pass $@ case 3; fi
 	@$(IBISEXE) -d $(TESTDIR)/marksdb -q "select floor(lat), floor(lon), avg(3956 * 2 * asin(sqrt(pow(sin((fabs(-10) - fabs(lat)) * 0.0174/2), 2) + cos(fabs(-10) * 0.0174) * cos(fabs(lat) * 0.0174) * pow(sin((112 - lon) * 0.0174/2), 2)))), count(*) where time = 77328" -o $(TESTDIR)/marksdb-4 >> $(TESTDIR)/check-marksdb.log 2>&1
-	@if [ `scripts/hcompare.pl vault/marksdb-4 $(TESTDIR)/marksdb-4 cnt | fgrep acceptable | wc -l` -eq 1 ] ; then echo Passed $@ case 4; else echo Did NOT pass $@ case 4; fi
-	@if [ `scripts/printWarning.pl $(TESTDIR)/check-marksdb.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/check-marksdb.log; fi
+	@if [ `$(srcdir)/scripts/hcompare.pl $(srcdir)/vault/marksdb-4 $(TESTDIR)/marksdb-4 cnt | fgrep acceptable | wc -l` -eq 1 ] ; then echo Passed $@ case 4; else echo Did NOT pass $@ case 4; fi
+	@if [ `$(srcdir)/scripts/printWarning.pl $(TESTDIR)/check-marksdb.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/check-marksdb.log; fi
 	@echo
 check-maurel: $(TESTDIR)/maurel/-part.txt $(IBISEXE)
 	@echo "Output from tests and data contributed by Alexandre Maurel started on `/bin/date`" > $(TESTDIR)/check-maurel.log
@@ -160,7 +160,7 @@ check-maurel: $(TESTDIR)/maurel/-part.tx
 	@$(IBISEXE) -d $(TESTDIR)/maurel -q "select b, avg(y) where b='xx2' and q not null" -o $(TESTDIR)/maurel-4a -v 2 >> $(TESTDIR)/check-maurel.log 2>&1
 	@$(IBISEXE) -d $(TESTDIR)/maurel -q "select b, avg(y) where g like 'xx2%' and q not null" -o $(TESTDIR)/maurel-4b -v 2 >> $(TESTDIR)/check-maurel.log 2>&1
 	@if [ -f $(TESTDIR)/maurel-4a -a -f $(TESTDIR)/maurel-4b -a `diff -w $(TESTDIR)/maurel-4a $(TESTDIR)/maurel-4b | wc -l` -eq 0 ]; then echo Passed $@ case 4; else echo Did NOT pass $@ case 4; fi
-	@if [ `scripts/printWarning.pl $(TESTDIR)/check-maurel.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/check-maurel.log; fi
+	@if [ `$(srcdir)/scripts/printWarning.pl $(TESTDIR)/check-maurel.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/check-maurel.log; fi
 	@echo
 #
 really-small: $(IBISEXE) $(TCAPIEXE) $(TESTDIR)/w1/-part.txt $(TESTDIR)/w2/-part.txt $(TESTDIR)/w3/-part.txt $(TESTDIR)/w4/-part.txt $(TESTDIR)/w5/-part.txt $(TESTDIR)/w6/-part.txt $(TESTDIR)/w7/-part.txt
@@ -175,18 +175,18 @@ really-small: $(IBISEXE) $(TCAPIEXE) $(T
 	@$(IBISEXE) -d $(TESTDIR)/w3 -d $(TESTDIR)/w2 -v -q "select avg(w2.c_1), w3.c_2, count(*) where w2.c_1 = w3.c_1 and w3.c_1 > 0" -output $(TESTDIR)/small-10 >> $(TESTDIR)/really-small.log 2>&1
 	@$(IBISEXE) -d $(TESTDIR)/w5 -v -q "select a.c_2, sum(a.c_3)/count(*), avg(a.c_3) from w5 as a, w5 as b where a.c_1 = b.c_1" -output $(TESTDIR)/small-11 >> $(TESTDIR)/really-small.log 2>&1
 	@$(IBISEXE) -d $(TESTDIR)/w3 -d $(TESTDIR)/w5 -v -q "select b.c_2, ceil(1000*stdev(a.c_2)), avg(a.c_3)/median(a.c_3), count(*) from w5 as a, w3 as b where a.c_1 = w3.c_1 and a.c_3 > 1" -output $(TESTDIR)/small-12 >> $(TESTDIR)/really-small.log 2>&1
-	@if [ -f $(TESTDIR)/small-1 -a -f vault/small-1 -a `diff -w $(TESTDIR)/small-1 vault/small-1 | wc -l` -eq 0 ]; then echo Passed $@ case 1; else echo Did NOT pass $@ case 1; fi
-	@if [ -f $(TESTDIR)/small-2 -a -f vault/small-2 -a `diff -w $(TESTDIR)/small-2 vault/small-2 | wc -l` -eq 0 ]; then echo Passed $@ case 2; else echo Did NOT pass $@ case 2; fi
-	@if [ -f $(TESTDIR)/small-3 -a -f vault/small-3 -a `diff -w $(TESTDIR)/small-3 vault/small-3 | wc -l` -eq 0 ]; then echo Passed $@ case 3; else echo Did NOT pass $@ case 3; fi
-	@if [ -f $(TESTDIR)/small-4 -a -f vault/small-4 -a `diff -w $(TESTDIR)/small-4 vault/small-4 | wc -l` -eq 0 ]; then echo Passed $@ case 4; else echo Did NOT pass $@ case 4; fi
-	@if [ -f $(TESTDIR)/small-5 -a -f vault/small-5 -a `diff -w $(TESTDIR)/small-5 vault/small-5 | wc -l` -eq 0 ]; then echo Passed $@ case 5; else echo Did NOT pass $@ case 5; fi
-	@if [ -f $(TESTDIR)/small-6 -a -f vault/small-6 -a `diff -w $(TESTDIR)/small-6 vault/small-6 | wc -l` -eq 0 ]; then echo Passed $@ case 6; else echo Did NOT pass $@ case 6; fi
-	@if [ -f $(TESTDIR)/small-7 -a -f vault/small-7 -a `diff -w $(TESTDIR)/small-7 vault/small-7 | wc -l` -eq 0 ]; then echo Passed $@ case 7; else echo Did NOT pass $@ case 7; fi
+	@if [ -f $(TESTDIR)/small-1 -a -f $(srcdir)/vault/small-1 -a `diff -w $(TESTDIR)/small-1 $(srcdir)/vault/small-1 | wc -l` -eq 0 ]; then echo Passed $@ case 1; else echo Did NOT pass $@ case 1; fi
+	@if [ -f $(TESTDIR)/small-2 -a -f $(srcdir)/vault/small-2 -a `diff -w $(TESTDIR)/small-2 $(srcdir)/vault/small-2 | wc -l` -eq 0 ]; then echo Passed $@ case 2; else echo Did NOT pass $@ case 2; fi
+	@if [ -f $(TESTDIR)/small-3 -a -f $(srcdir)/vault/small-3 -a `diff -w $(TESTDIR)/small-3 $(srcdir)/vault/small-3 | wc -l` -eq 0 ]; then echo Passed $@ case 3; else echo Did NOT pass $@ case 3; fi
+	@if [ -f $(TESTDIR)/small-4 -a -f $(srcdir)/vault/small-4 -a `diff -w $(TESTDIR)/small-4 $(srcdir)/vault/small-4 | wc -l` -eq 0 ]; then echo Passed $@ case 4; else echo Did NOT pass $@ case 4; fi
+	@if [ -f $(TESTDIR)/small-5 -a -f $(srcdir)/vault/small-5 -a `diff -w $(TESTDIR)/small-5 $(srcdir)/vault/small-5 | wc -l` -eq 0 ]; then echo Passed $@ case 5; else echo Did NOT pass $@ case 5; fi
+	@if [ -f $(TESTDIR)/small-6 -a -f $(srcdir)/vault/small-6 -a `diff -w $(TESTDIR)/small-6 $(srcdir)/vault/small-6 | wc -l` -eq 0 ]; then echo Passed $@ case 6; else echo Did NOT pass $@ case 6; fi
+	@if [ -f $(TESTDIR)/small-7 -a -f $(srcdir)/vault/small-7 -a `diff -w $(TESTDIR)/small-7 $(srcdir)/vault/small-7 | wc -l` -eq 0 ]; then echo Passed $@ case 7; else echo Did NOT pass $@ case 7; fi
 	@$(IBISEXE) -d $(TESTDIR)/w4 -v -q "where b contains 'USA'" 2>&1 | fgrep 'produced 1 hit' | if [ `wc -l` -eq 1 ] ; then echo Passed $@ case 8; else echo Did NOT pass $@ case 8; fi
 	@$(IBISEXE) -d $(TESTDIR)/w4 -v -q "where b contains (Berkeley, California, USA)" 2>&1 | fgrep 'produced 1 hit' | if [ `wc -l` -eq 1 ] ; then echo Passed $@ case 9; else echo Did NOT pass $@ case 9; fi
-	@if [ -f $(TESTDIR)/small-10 -a -f vault/small-10 -a `diff -w $(TESTDIR)/small-10 vault/small-10 | wc -l` -eq 0 ]; then echo Passed $@ case 10; else echo Did NOT pass $@ case 10; fi
-	@if [ -f $(TESTDIR)/small-11 -a -f vault/small-11 -a `diff -w $(TESTDIR)/small-11 vault/small-11 | wc -l` -eq 0 ]; then echo Passed $@ case 11; else echo Did NOT pass $@ case 11; fi
-	@if [ -f $(TESTDIR)/small-12 -a -f vault/small-12 -a `diff -w $(TESTDIR)/small-12 vault/small-12 | wc -l` -eq 0 ]; then echo Passed $@ case 12; else echo Did NOT pass $@ case 12; fi
+	@if [ -f $(TESTDIR)/small-10 -a -f $(srcdir)/vault/small-10 -a `diff -w $(TESTDIR)/small-10 $(srcdir)/vault/small-10 | wc -l` -eq 0 ]; then echo Passed $@ case 10; else echo Did NOT pass $@ case 10; fi
+	@if [ -f $(TESTDIR)/small-11 -a -f $(srcdir)/vault/small-11 -a `diff -w $(TESTDIR)/small-11 $(srcdir)/vault/small-11 | wc -l` -eq 0 ]; then echo Passed $@ case 11; else echo Did NOT pass $@ case 11; fi
+	@if [ -f $(TESTDIR)/small-12 -a -f $(srcdir)/vault/small-12 -a `diff -w $(TESTDIR)/small-12 $(srcdir)/vault/small-12 | wc -l` -eq 0 ]; then echo Passed $@ case 12; else echo Did NOT pass $@ case 12; fi
 	@if [ `$(IBISEXE) -d $(TESTDIR)/w6 -v -q "where M = 144115188075857871ULL OR M = 144115188075857872ULL" 2>&1 | fgrep 'produced 2 hits' | wc -l` -eq 1 ]; then echo Passed $@ case 13; else echo Did NOT pass $@ case 13; fi
 	@$(TCAPIEXE) $(TESTDIR)/w7 "c=\"'twas\"" 2>&1 | if [ `fgrep 'w7 produced 1 hit' | wc -l` -eq 1 ]; then echo Passed $@ case 14; else echo Did NOT pass $@ case 14; fi
 	@$(TCAPIEXE) $(TESTDIR)/w7 "c='' and c not null" >> $(TESTDIR)/really-small.log 2>&1
@@ -194,29 +194,29 @@ really-small: $(IBISEXE) $(TCAPIEXE) $(T
 	@$(TCAPIEXE) $(TESTDIR)/w7 "b like '%\\\\%'" >> $(TESTDIR)/really-small.log 2>&1
 	@$(TCAPIEXE) $(TESTDIR)/w7 "b like '%\\\\%'" 2>&1 | if [ `fgrep ' produced 2 hits' | wc -l` -eq 1 ]; then echo Passed $@ case 16; else echo Did NOT pass $@ case 16; fi
 	@$(TCAPIEXE) $(TESTDIR)/w7 "b like '.%'" 2>&1 | if [ `fgrep ' produced 5 hits' | wc -l` -eq 1 ]; then echo Passed $@ case 17; else echo Did NOT pass $@ case 17; fi
-	@if [ `scripts/printWarning.pl $(TESTDIR)/really-small.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/really-small.log; fi
+	@if [ `$(srcdir)/scripts/printWarning.pl $(TESTDIR)/really-small.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/really-small.log; fi
 	@echo
 check-join: $(IBISEXE) $(TESTDIR)/t2/t2a/-part.txt $(TESTDIR)/t2/t2b/-part.txt $(TESTDIR)/t2/t2c/-part.txt
 	@/bin/date >| $(TESTDIR)/check-join.log
 	@$(IBISEXE) -d $(TESTDIR)/t2/t2a -d $(TESTDIR)/t2/t2b -q "from t2a join t2b using a where t2a.a < 10 and t2b.b > 10" 2>&1 | if [ `fgrep ' a table with 0 row and 0 column' - | wc -l` -eq 1 ] ; then echo Passed $@ case 1; else echo Did NOT pass $@ case 1; fi
 	@$(IBISEXE) -d $(TESTDIR)/t2/t2a -q "from t2a as s where s.a = t2a.a and s.a < 10 and t2a.b > 5" 2>&1 | if [ `fgrep ' table with 4 rows and 0 column' - | wc -l` -eq 1 ] ; then echo Passed $@ case 2; else echo Did NOT pass $@ case 2; fi
 	@$(IBISEXE) -d $(TESTDIR)/t2/t2a -q "select s.a from t2a as s where s.a = t2a.a and s.a < 10 and t2a.b > 5" -o $(TESTDIR)/join-1 2>&1 | if [ `fgrep ' produced a table with 4 rows' - | wc -l` -eq 1 ] ; then echo Passed $@ case 3; else echo Did NOT pass $@ case 3; fi
-	@if [ -f $(TESTDIR)/join-1 -a -f vault/join-1 -a `diff -w $(TESTDIR)/join-1 vault/join-1 | wc -l` -eq 0 ]; then echo Passed $@ case 4; else echo Did NOT pass $@ case 4; fi
+	@if [ -f $(TESTDIR)/join-1 -a -f $(srcdir)/vault/join-1 -a `diff -w $(TESTDIR)/join-1 $(srcdir)/vault/join-1 | wc -l` -eq 0 ]; then echo Passed $@ case 4; else echo Did NOT pass $@ case 4; fi
 	@$(IBISEXE) -d $(TESTDIR)/t2/t2a -d $(TESTDIR)/t2/t2b -q "select s.a from t2a as s, t2b as t where s.a = t.a and s.a < 10 and t.b > 5" -o $(TESTDIR)/join-2 2>&1 | if [ `fgrep ' produced a table with 8 rows' - | wc -l` -eq 1 ] ; then echo Passed $@ case 5; else echo Did NOT pass $@ case 5; fi
-	@if [ -f $(TESTDIR)/join-2 -a -f vault/join-2 -a `diff -w $(TESTDIR)/join-2 vault/join-2 | wc -l` -eq 0 ]; then echo Passed $@ case 6; else echo Did NOT pass $@ case 6; fi
+	@if [ -f $(TESTDIR)/join-2 -a -f $(srcdir)/vault/join-2 -a `diff -w $(TESTDIR)/join-2 $(srcdir)/vault/join-2 | wc -l` -eq 0 ]; then echo Passed $@ case 6; else echo Did NOT pass $@ case 6; fi
 	@$(IBISEXE) -d $(TESTDIR)/t2/t2a -d $(TESTDIR)/t2/t2c -q "select s.a, t.b+s.c/4 from t2a as s, t2c as t where s.a = t.a and s.a < 10 and t.b < 5" -o $(TESTDIR)/join-3 2>&1 | if [ `fgrep ' produced a table with 20 rows' - | wc -l` -eq 1 ] ; then echo Passed $@ case 7; else echo Did NOT pass $@ case 7; fi
-	@if [ -f $(TESTDIR)/join-3 -a -f vault/join-3 -a `diff -w $(TESTDIR)/join-3 vault/join-3 | wc -l` -eq 0 ]; then echo Passed $@ case 8; else echo Did NOT pass $@ case 8; fi
+	@if [ -f $(TESTDIR)/join-3 -a -f $(srcdir)/vault/join-3 -a `diff -w $(TESTDIR)/join-3 $(srcdir)/vault/join-3 | wc -l` -eq 0 ]; then echo Passed $@ case 8; else echo Did NOT pass $@ case 8; fi
 	@$(IBISEXE) -d $(TESTDIR)/t2/t2a -d $(TESTDIR)/t2/t2c -q "select floor(t.b+s.c/4), avg(t.b), count(*) from t2a as s, t2c as t where s.a = t.a and s.a < 10 and t.b < 5" -o $(TESTDIR)/join-4 2>&1 | if [ `fgrep ' produced a table with 4 rows' - | wc -l` -eq 1 ] ; then echo Passed $@ case 9; else echo Did NOT pass $@ case 9; fi
-	@if [ -f $(TESTDIR)/join-4 -a -f vault/join-4 -a `diff -w $(TESTDIR)/join-4 vault/join-4 | wc -l` -eq 0 ]; then echo Passed $@ case 10; else echo Did NOT pass $@ case 10; fi
+	@if [ -f $(TESTDIR)/join-4 -a -f $(srcdir)/vault/join-4 -a `diff -w $(TESTDIR)/join-4 $(srcdir)/vault/join-4 | wc -l` -eq 0 ]; then echo Passed $@ case 10; else echo Did NOT pass $@ case 10; fi
 	@$(IBISEXE) -d $(TESTDIR)/t2/t2a -q "select s.a, t2a.a from t2a as s where s.a - t2a.a between 0 and 1 and s.a < 10 and t2a.b > 5" -o $(TESTDIR)/join-5 2>&1 | if [ `fgrep ' produced a table with 7 rows' - | wc -l` -eq 1 ] ; then echo Passed $@ case 11; else echo Did NOT pass $@ case 11; fi
-	@if [ -f $(TESTDIR)/join-5 -a -f vault/join-5 -a `diff -w $(TESTDIR)/join-5 vault/join-5 | wc -l` -eq 0 ]; then echo Passed $@ case 12; else echo Did NOT pass $@ case 12; fi
+	@if [ -f $(TESTDIR)/join-5 -a -f $(srcdir)/vault/join-5 -a `diff -w $(TESTDIR)/join-5 $(srcdir)/vault/join-5 | wc -l` -eq 0 ]; then echo Passed $@ case 12; else echo Did NOT pass $@ case 12; fi
 	@$(IBISEXE) -d $(TESTDIR)/t2/t2a -d $(TESTDIR)/t2/t2b -q "select s.a-t.a, countd(s.a)/count(s.a) from t2a as s, t2b as t where t.a - s.a between 0 and 1 and s.a < 10 and t.b > 5" -o $(TESTDIR)/join-6 2>&1 | if [ `fgrep ' produced a table with 2 rows' - | wc -l` -eq 1 ] ; then echo Passed $@ case 13; else echo Did NOT pass $@ case 13; fi
-	@if [ -f $(TESTDIR)/join-6 -a -f vault/join-6 -a `diff -w $(TESTDIR)/join-6 vault/join-6 | wc -l` -eq 0 ]; then echo Passed $@ case 14; else echo Did NOT pass $@ case 14; fi
+	@if [ -f $(TESTDIR)/join-6 -a -f $(srcdir)/vault/join-6 -a `diff -w $(TESTDIR)/join-6 $(srcdir)/vault/join-6 | wc -l` -eq 0 ]; then echo Passed $@ case 14; else echo Did NOT pass $@ case 14; fi
 	@$(IBISEXE) -d $(TESTDIR)/t2/t2a -d $(TESTDIR)/t2/t2c -q "select s.a, t.b+s.c/4 from t2a as s, t2c as t where s.a-0.1 < t.a < s.a+1.1 and s.a < 10 and t.b < 5" -o $(TESTDIR)/join-7 2>&1 | if [ `fgrep ' produced a table with 36 rows' - | wc -l` -eq 1 ] ; then echo Passed $@ case 15; else echo Did NOT pass $@ case 15; fi
-	@if [ -f $(TESTDIR)/join-7 -a -f vault/join-7 -a `diff -w $(TESTDIR)/join-7 vault/join-7 | wc -l` -eq 0 ]; then echo Passed $@ case 16; else echo Did NOT pass $@ case 16; fi
+	@if [ -f $(TESTDIR)/join-7 -a -f $(srcdir)/vault/join-7 -a `diff -w $(TESTDIR)/join-7 $(srcdir)/vault/join-7 | wc -l` -eq 0 ]; then echo Passed $@ case 16; else echo Did NOT pass $@ case 16; fi
 	@$(IBISEXE) -d $(TESTDIR)/t2/t2a -d $(TESTDIR)/t2/t2c -q "select floor(t.b+s.c/4), sum(t.b)+count(*) from t2a as s, t2c as t where s.a+0.5 <= t.a <= s.a+2.5 and s.a < 10 and t.b < 5" -o $(TESTDIR)/join-8 2>&1 | if [ `fgrep ' produced a table with 3 rows' - | wc -l` -eq 1 ] ; then echo Passed $@ case 17; else echo Did NOT pass $@ case 17; fi
-	@if [ -f $(TESTDIR)/join-8 -a -f vault/join-8 -a `diff -w $(TESTDIR)/join-8 vault/join-8 | wc -l` -eq 0 ]; then echo Passed $@ case 18; else echo Did NOT pass $@ case 18; fi
-	@if [ `scripts/printWarning.pl $(TESTDIR)/check-join.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/check-join.log; fi
+	@if [ -f $(TESTDIR)/join-8 -a -f $(srcdir)/vault/join-8 -a `diff -w $(TESTDIR)/join-8 $(srcdir)/vault/join-8 | wc -l` -eq 0 ]; then echo Passed $@ case 18; else echo Did NOT pass $@ case 18; fi
+	@if [ `$(srcdir)/scripts/printWarning.pl $(TESTDIR)/check-join.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/check-join.log; fi
 	@echo
 check-labeling: $(IBISEXE) $(TESTDIR)/m0/-part.txt $(TESTDIR)/m1/-part.txt
 	@$(IBISEXE) -d $(TESTDIR)/m0 -m -v -q "where a<10" >| $(TESTDIR)/check-labeling.log 2>&1
@@ -229,39 +229,39 @@ check-labeling: $(IBISEXE) $(TESTDIR)/m0
 	@if [ `fgrep " 35 connected components" $(TESTDIR)/check-labeling.log | wc -l` -eq 2 ]; then echo Passed $@ case 4; else echo Did NOT pass $@ case 4; fi
 	@$(IBISEXE) -d $(TESTDIR)/m1 -m -v -q "where a2<5 && b1>10" >> $(TESTDIR)/check-labeling.log 2>&1
 	@if [ `fgrep " 14 connected components" $(TESTDIR)/check-labeling.log | wc -l` -eq 2 ]; then echo Passed $@ case 5; else echo Did NOT pass $@ case 5; fi
-	@if [ `scripts/printWarning.pl $(TESTDIR)/check-labeling.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/check-labeling.log; fi
+	@if [ `$(srcdir)/scripts/printWarning.pl $(TESTDIR)/check-labeling.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/check-labeling.log; fi
 	@echo
 #
-$(TESTDIR)/t0/-part.txt: $(ARDEAEXE) test0.csv TESTDIR
-	@test -f $(TESTDIR)/t0/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/t0 -m "a:key, b:text, c:ulong" -t test0.csv >> $(TESTDIR)/std.log 2>&1
-$(TESTDIR)/t1/-part.txt: $(ARDEAEXE) test0.csv TESTDIR
+$(TESTDIR)/t0/-part.txt: $(ARDEAEXE) $(srcdir)/test0.csv TESTDIR
+	@test -f $(TESTDIR)/t0/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/t0 -m "a:key, b:text, c:ulong" -t $(srcdir)/test0.csv >> $(TESTDIR)/std.log 2>&1
+$(TESTDIR)/t1/-part.txt: $(ARDEAEXE) $(srcdir)/test0.csv TESTDIR
 	@if [ ! -f $(TESTDIR)/t1/-part.txt ] ; then \
-	$(ARDEAEXE) -d $(TESTDIR)/t1 -m "a:byte, b:float, c:ushort" -t test0.csv >> $(TESTDIR)/std.log 2>&1; \
-	$(ARDEAEXE) -d $(TESTDIR)/t1 -m "a:byte, b:float, c:ushort" -t test0.csv >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t1 -m "a:byte, b:float, c:ushort" -t $(srcdir)/test0.csv >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t1 -m "a:byte, b:float, c:ushort" -t $(srcdir)/test0.csv >> $(TESTDIR)/std.log 2>&1; \
 	fi
 $(TESTDIR)/rowlist: $(TESTDIR)/t1/-part.txt TESTDIR
 	@test -f $(TESTDIR)/rowlist || (echo 0 > $(TESTDIR)/rowlist; echo 99 >> $(TESTDIR)/rowlist;)
-$(TESTDIR)/t2/t2a/-part.txt: $(ARDEAEXE) test0.csv TESTDIR
-	@test -f $(TESTDIR)/t2/t2a/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/t2/t2a -m "a:byte, b:float, c:ubyte" -t test0.csv -tag "OA=1" >> $(TESTDIR)/std.log 2>&1
-$(TESTDIR)/t2/t2b/-part.txt: $(ARDEAEXE) test0.csv TESTDIR
+$(TESTDIR)/t2/t2a/-part.txt: $(ARDEAEXE) $(srcdir)/test0.csv TESTDIR
+	@test -f $(TESTDIR)/t2/t2a/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/t2/t2a -m "a:byte, b:float, c:ubyte" -t $(srcdir)/test0.csv -tag "OA=1" >> $(TESTDIR)/std.log 2>&1
+$(TESTDIR)/t2/t2b/-part.txt: $(ARDEAEXE) $(srcdir)/test0.csv TESTDIR
 	@if [ ! -f $(TESTDIR)/t2/t2b/-part.txt ] ; then \
-	$(ARDEAEXE) -d $(TESTDIR)/t2/t2b -m "a:byte, b:float, c:ubyte" -t test0.csv >> $(TESTDIR)/std.log 2>&1; \
-	$(ARDEAEXE) -d $(TESTDIR)/t2/t2b -m "a:byte, b:float, c:ubyte" -t test0.csv -tag "OA=2" >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t2/t2b -m "a:byte, b:float, c:ubyte" -t $(srcdir)/test0.csv >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t2/t2b -m "a:byte, b:float, c:ubyte" -t $(srcdir)/test0.csv -tag "OA=2" >> $(TESTDIR)/std.log 2>&1; \
 	fi
-$(TESTDIR)/t2/t2c/-part.txt: $(ARDEAEXE) test0.csv TESTDIR
+$(TESTDIR)/t2/t2c/-part.txt: $(ARDEAEXE) $(srcdir)/test0.csv TESTDIR
 	@if [ ! -f $(TESTDIR)/t2/t2c/-part.txt ] ; then \
-	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t test0.csv >> $(TESTDIR)/std.log 2>&1; \
-	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t test0.csv >> $(TESTDIR)/std.log 2>&1; \
-	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t test0.csv >> $(TESTDIR)/std.log 2>&1; \
-	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t test0.csv -tag "OA=3" >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t $(srcdir)/test0.csv >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t $(srcdir)/test0.csv >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t $(srcdir)/test0.csv >> $(TESTDIR)/std.log 2>&1; \
+	$(ARDEAEXE) -d $(TESTDIR)/t2/t2c -m "a:byte, b:float, c:ubyte" -t $(srcdir)/test0.csv -tag "OA=3" >> $(TESTDIR)/std.log 2>&1; \
 	fi
-$(TESTDIR)/acmpub1/-part.txt: $(ARDEAEXE) $(IBISEXE) acmpub.csv TESTDIR
+$(TESTDIR)/acmpub1/-part.txt: $(ARDEAEXE) $(IBISEXE) $(srcdir)/acmpub.csv TESTDIR
 	@rm -rf $(TESTDIR)/acmpub1
-	@$(ARDEAEXE) -d $(TESTDIR)/acmpub1 -m "id:u, t:t, a:t, v:k, y:u" -t acmpub.csv -k v acmpub.v.a >> $(TESTDIR)/std.log 2>&1
+	@$(ARDEAEXE) -d $(TESTDIR)/acmpub1 -m "id:u, t:t, a:t, v:k, y:u" -t $(srcdir)/acmpub.csv -k v $(srcdir)/acmpub.v.a >> $(TESTDIR)/std.log 2>&1
 	@$(IBISEXE) -d $(TESTDIR)/acmpub1 -b "a:keywords delimiters=','" -b "id:noindex" -b "<binning none>" -v >> $(TESTDIR)/std.log 2>&1
-$(TESTDIR)/acmpub2/-part.txt: $(ARDEAEXE) $(IBISEXE) acmpub.csv TESTDIR
+$(TESTDIR)/acmpub2/-part.txt: $(ARDEAEXE) $(IBISEXE) $(srcdir)/acmpub.csv TESTDIR
 	@rm -rf $(TESTDIR)/acmpub2
-	@$(ARDEAEXE) -d $(TESTDIR)/acmpub2 -m "id:u, t:t, a:t, v:k, y:u" -t acmpub.csv -k v acmpub.v.a >> $(TESTDIR)/std.log 2>&1
+	@$(ARDEAEXE) -d $(TESTDIR)/acmpub2 -m "id:u, t:t, a:t, v:k, y:u" -t $(srcdir)/acmpub.csv -k v $(srcdir)/acmpub.v.a >> $(TESTDIR)/std.log 2>&1
 	@$(IBISEXE) -d $(TESTDIR)/acmpub2 -b "a:keywords delimiters=','" -b "id:noindex" -b "<binning none>" -v >> $(TESTDIR)/std.log 2>&1
 # a simple internal sanity check
 sanity-check: TESTDIR $(IBISEXE) $(TESTDIR)/append.log
@@ -271,7 +271,7 @@ sanity-check: TESTDIR $(IBISEXE) $(TESTD
 	else \
 	$(IBISEXE) -c $(TESTDIR)/test.rc -v -t 5 > $(TESTDIR)/sanity-check.log 2>&1; \
 	fi
-	@if [ `fgrep 'self tests' $(TESTDIR)/sanity-check.log | fgrep 'found no error' | wc -l` -lt 2 -o `scripts/printWarning.pl $(TESTDIR)/sanity-check.log | wc -l` -gt 0 ]; then echo Did NOT pass $@.  Please look through $(TESTDIR)/sanity-check.log.; else echo Passed internal sanity checks.; fi
+	@if [ `fgrep 'self tests' $(TESTDIR)/sanity-check.log | fgrep 'found no error' | wc -l` -lt 2 -o `$(srcdir)/scripts/printWarning.pl $(TESTDIR)/sanity-check.log | wc -l` -gt 0 ]; then echo Did NOT pass $@.  Please look through $(TESTDIR)/sanity-check.log.; else echo Passed internal sanity checks.; fi
 	@echo
 # a test of append operations, 10 copies of data in test0 and test1
 append-test: $(TESTDIR)/append.log
@@ -334,21 +334,21 @@ large-sanity-check: $(IBISEXE) $(TESTDIR
 	else echo "  Did NOT complete case # $${jcase} of $@: $(IBISEXE) exited with $${test_status}"; fi \
 	done;
 	@numpasses=`fgrep 'self tests' $(TESTDIR)/large-sanity-check.log | fgrep 'found no error' | wc -l` && if [ $${numpasses} -lt 370 ]; then echo Did NOT pass $@: passed $${numpasses} out 370 cases..  Please look through $(TESTDIR)/large-sanity-check.log.; else echo Passed large internal sanity checks.; fi
-	@if [ `scripts/printWarning.pl $(TESTDIR)/large-sanity-check.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/large-sanity-check.log; fi
+	@if [ `$(srcdir)/scripts/printWarning.pl $(TESTDIR)/large-sanity-check.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/large-sanity-check.log; fi
 	@echo
 #
-match-counts: scripts/matchCounts.pl scripts/query-count.list $(IBISEXE) $(TESTDIR)/test.rc $(TESTDIR)/0/test0/-part.txt $(TESTDIR)/0/test1/-part.txt
+match-counts: $(srcdir)/scripts/matchCounts.pl $(srcdir)/scripts/query-count.list $(IBISEXE) $(TESTDIR)/test.rc $(TESTDIR)/0/test0/-part.txt $(TESTDIR)/0/test1/-part.txt
 	@ncases=0; npassed=0; for e in $(ENCODINGS) ; do \
 	for b in $(BINNINGS) ; do \
 	ncases=`expr 1 + $$ncases`; echo; echo "$@ case # $${ncases}"; echo "$@ case # $${ncases}" >> $(TESTDIR)/std.log 2>&1; \
 	$(IBISEXE) -c $(TESTDIR)/test.rc -b "<binning $$b> <encoding $$e>" -z -v >> $(TESTDIR)/std.log 2>&1; \
-	scripts/matchCounts.pl "$(IBISEXE) -c $(TESTDIR)/test.rc -v 2" scripts/query-count.list $(TESTDIR) && npassed=`expr 1 + $$npassed`; \
+	$(srcdir)/scripts/matchCounts.pl "$(IBISEXE) -c $(TESTDIR)/test.rc -v 2" $(srcdir)/scripts/query-count.list $(TESTDIR) && npassed=`expr 1 + $$npassed`; \
 	done; done; \
 	perl -pi -e "s/index = .*/index = none/" $(TESTDIR)/0/test?/-part.txt; \
 	rm -f $(TESTDIR)/0/test?/*.idx $(TESTDIR)/0/test?/*.bin; \
 	ncases=`expr 1 + $$ncases`; echo; echo "$@ case # $${ncases}"; echo "$@ case # $${ncases}" >> $(TESTDIR)/std.log 2>&1; \
 	$(IBISEXE) -c $(TESTDIR)/test.rc -b "none" -z >> $(TESTDIR)/std.log 2>&1; \
-	scripts/matchCounts.pl "$(IBISEXE) -c $(TESTDIR)/test.rc -v 2" scripts/query-count.list $(TESTDIR) && npassed=`expr 1 + $$npassed`; echo; \
+	$(srcdir)/scripts/matchCounts.pl "$(IBISEXE) -c $(TESTDIR)/test.rc -v 2" $(srcdir)/scripts/query-count.list $(TESTDIR) && npassed=`expr 1 + $$npassed`; echo; \
 	if [ $${npassed} -lt $${ncases} ]; then \
 	echo Did NOT pass `expr $${ncases} - $${npassed}` out of $${ncases} $@ test cases; \
 	else \
@@ -356,13 +356,13 @@ match-counts: scripts/matchCounts.pl scr
 	fi
 	@echo
 #
-multilevel: scripts/matchCounts.pl scripts/query-count.list $(IBISEXE) $(TESTDIR)/test.rc $(TESTDIR)/0/test0/-part.txt $(TESTDIR)/0/test1/-part.txt
+multilevel: $(srcdir)/scripts/matchCounts.pl $(srcdir)/scripts/query-count.list $(IBISEXE) $(TESTDIR)/test.rc $(TESTDIR)/0/test0/-part.txt $(TESTDIR)/0/test1/-part.txt
 	@for i in "range/range" "range/bin" "bin/range" "bin/bin" "binary" "bit-slice" "none" ; do \
 	perl -pi -e "s#index = .*#index = $$i#" $(TESTDIR)/0/test?/-part.txt; \
 	rm -f $(TESTDIR)/0/test?/*.idx $(TESTDIR)/0/test?/*.bin; \
 	echo; \
 	echo "index = $${i}"; \
-	scripts/matchCounts.pl "$(IBISEXE) -c $(TESTDIR)/test.rc -v 2" scripts/query-count.list $(TESTDIR); \
+	$(srcdir)/scripts/matchCounts.pl "$(IBISEXE) -c $(TESTDIR)/test.rc -v 2" $(srcdir)/scripts/query-count.list $(TESTDIR); \
 	done;
 	@echo
 # run a set of tests from Jon Strabala on functions dealing with unix time stamps
@@ -384,7 +384,7 @@ check-js2: $(IBISEXE) $(TESTDIR)/js2/-pa
 	@$(IBISEXE) -d $(TESTDIR)/js2 -v -q "select id, t, FORMAT_UNIXTIME_GMT(t,'%Y%m%d%H%M%S') as GMT_TIME_STR, FORMAT_UNIXTIME_LOCAL(t,'%Y%m%d%H%M%S') as LOCAL_TIME_STR,  FORMAT_UNIXTIME_GMT(t,'%Y-%m-%d') AS GMT_YYYYMMDD, FORMAT_UNIXTIME_LOCAL(t,'%Y-%m-%d') AS LOCAL_YYYYMMDD, FORMAT_UNIXTIME_LOCAL(t,'local offset %z') AS LOC_TZ_OFF where s > 0 and ( t between TO_UNIXTIME_GMT('2011/04/26 09:01','%Y/%m/%d %H:%M') and TO_UNIXTIME_GMT('201104260902','%Y%m%d%H%M') ) order by t ASC" -o $(TESTDIR)/js2-8 >> $(TESTDIR)/$@.log 2>&1
 	@if [ `diff -w $(TESTDIR)/js2-4 $(TESTDIR)/js2-8 | wc -l` -eq 0 ]; then echo Passed $@ case 8; else echo Did NOT pass $@ case 8; fi
 	@if [ ` $(IBISEXE) -d $(TESTDIR)/js2 -v -q "select id, t, FORMAT_UNIXTIME_GMT(t,'%Y%m%d%H%M%S') as GMT_TIME_STR, FORMAT_UNIXTIME_LOCAL(t,'%Y%m%d%H%M%S') as LOCAL_TIME_STR,  FORMAT_UNIXTIME_GMT(t,'%Y-%m-%d') AS GMT_YYYYMMDD, FORMAT_UNIXTIME_LOCAL(t,'%Y-%m-%d') AS LOCAL_YYYYMMDD, FORMAT_UNIXTIME_LOCAL(t,'local offset %z') AS LOC_TZ_OFF where s > 0 and t < TO_UNIXTIME_GMT('2011/04','%Y/%m') order by t ASC" 2>&1 | fgrep "produced a table with 1 row and 7 columns" - | wc -l` -eq 1 ]; then echo Passed $@ case 9; else echo Did NOT pass $@ case 9; fi
-	@if [ `scripts/printWarning.pl $(TESTDIR)/$@.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/$@.log; fi
+	@if [ `$(srcdir)/scripts/printWarning.pl $(TESTDIR)/$@.log | wc -l` -eq 0 ]; then echo Log file for $@ contains no warning; else echo Log file for $@ contains some warnings, please examine the file $(TESTDIR)/$@.log; fi
 	@echo
 # run a set of tests with 1.6 million rows split into three
 # subdirectories.  Tests may take half a hour or longer depending on
@@ -419,7 +419,7 @@ check-sq2: $(THULAEXE) $(TESTDIR)/sq2 $(
 	@$(THULAEXE) -c $(TESTDIR)/smallmem1.rc -d $(TESTDIR)/sq2 -v -t 100 >> $(TESTDIR)/$@.log 2>&1
 	@$(THULAEXE) -c $(TESTDIR)/smallmem2.rc -d $(TESTDIR)/sq2 -v -t 100 >> $(TESTDIR)/$@.log 2>&1
 	@$(THULAEXE) -c $(TESTDIR)/smallmem3.rc -d $(TESTDIR)/sq2 -v -t 100 >> $(TESTDIR)/$@.log 2>&1
-	@if [ `scripts/printWarning.pl $(TESTDIR)/$@.log | wc -l` -le 400 ]; then echo Log file for $@ contains the expected number of warnings; else echo Log file for $@ contains some extra warnings, please examine the file $(TESTDIR)/$@.log; fi
+	@if [ `$(srcdir)/scripts/printWarning.pl $(TESTDIR)/$@.log | wc -l` -le 400 ]; then echo Log file for $@ contains the expected number of warnings; else echo Log file for $@ contains some extra warnings, please examine the file $(TESTDIR)/$@.log; fi
 	@echo
 $(TESTDIR)/sq2: setqgen$(EXEEXT) TESTDIR
 	@test -d $(TESTDIR)/sq2 || ./setqgen$(EXEEXT) $(TESTDIR)/sq2 1e9 3e7 >| $(TESTDIR)/check-sq2.log 2>&1
@@ -432,22 +432,22 @@ $(TESTDIR)/1: $(TESTDIR)
 	@test -d $(TESTDIR)/1 || mkdir $(TESTDIR)/1
 $(TESTDIR)/2: $(TESTDIR)
 	@test -d $(TESTDIR)/2 || mkdir $(TESTDIR)/2
-$(TESTDIR)/marksdb/-part.txt: readcsv$(EXEEXT) marksdb.csv TESTDIR
-	@test -f $(TESTDIR)/marksdb/-part.txt || ./readcsv marksdb.csv $(TESTDIR)/marksdb >> $(TESTDIR)/std.log 2>&1
-$(TESTDIR)/maurel/-part.txt: $(ARDEAEXE) maurel.csv TESTDIR
-	@test -f $(TESTDIR)/maurel/-part.txt || $(ARDEAEXE) -t maurel.csv -d $(TESTDIR)/maurel -m "b:k, r:s, c:s, f:s, e:s, y:s, g:k, t:s, n:k, a:k, v:s, i:k, h:s, d:k, p:s, q:k, s:s, m:s, j:k" >> $(TESTDIR)/std.log 2>&1
+$(TESTDIR)/marksdb/-part.txt: readcsv$(EXEEXT) $(srcdir)/marksdb.csv TESTDIR
+	@test -f $(TESTDIR)/marksdb/-part.txt || ./readcsv $(srcdir)/marksdb.csv $(TESTDIR)/marksdb >> $(TESTDIR)/std.log 2>&1
+$(TESTDIR)/maurel/-part.txt: $(ARDEAEXE) $(srcdir)/maurel.csv TESTDIR
+	@test -f $(TESTDIR)/maurel/-part.txt || $(ARDEAEXE) -t $(srcdir)/maurel.csv -d $(TESTDIR)/maurel -m "b:k, r:s, c:s, f:s, e:s, y:s, g:k, t:s, n:k, a:k, v:s, i:k, h:s, d:k, p:s, q:k, s:s, m:s, j:k" >> $(TESTDIR)/std.log 2>&1
 $(TESTDIR)/jrf/-part.txt: jrf$(EXEEXT) TESTDIR
 	@test -f $(TESTDIR)/jrf/-part.txt || ./jrf$(EXEEXT) $(TESTDIR)/jrf 1e5 >> $(TESTDIR)/std.log 2>&1
-$(TESTDIR)/js2/-part.txt: $(ARDEAEXE) js2.csv TESTDIR
-	@test -f $(TESTDIR)/js2/-part.txt || $(ARDEAEXE) -t js2.csv -m "id:s, s:b, t:d" -d $(TESTDIR)/js2 >> $(TESTDIR)/std.log 2>&1
-$(TESTDIR)/0/test0/-part.txt: $(TESTDIR)/0 test0.csv $(ARDEAEXE) TESTDIR
-	@test -f $(TESTDIR)/0/test0/-part.txt || $(ARDEAEXE) -v -m "i0:ub, i1:f, i2:s" -t test0.csv -d $(TESTDIR)/0/test0 >> $(TESTDIR)/std.log 2>&1
-$(TESTDIR)/0/test1/-part.txt: $(TESTDIR)/0 test1.csv readcsv$(EXEEXT) TESTDIR
-	@test -f $(TESTDIR)/0/test1/-part.txt || ./readcsv test1.csv $(TESTDIR)/0/test1 >> $(TESTDIR)/std.log 2>&1
-$(TESTDIR)/m0/-part.txt: $(ARDEAEXE) test0.csv TESTDIR
-	@test -f $(TESTDIR)/m0/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/m0 -m "a:b, b:f, c:s" -t test0.csv -tag "meshShape=(20,5)" >> $(TESTDIR)/std.log 2>&1
-$(TESTDIR)/m1/-part.txt: $(ARDEAEXE) test1.csv TESTDIR
-	@test -f $(TESTDIR)/m1/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/m1 -m "a0:d, a1:b, a2:b, b0:f, b1:s, b2:s, c0:f, c1:i, c2:i" -t test1.csv -tag "meshShape=(10, 10, 10)" >> $(TESTDIR)/std.log 2>&1
+$(TESTDIR)/js2/-part.txt: $(ARDEAEXE) $(srcdir)/js2.csv TESTDIR
+	@test -f $(TESTDIR)/js2/-part.txt || $(ARDEAEXE) -t $(srcdir)/js2.csv -m "id:s, s:b, t:d" -d $(TESTDIR)/js2 >> $(TESTDIR)/std.log 2>&1
+$(TESTDIR)/0/test0/-part.txt: $(TESTDIR)/0 $(srcdir)/test0.csv $(ARDEAEXE) TESTDIR
+	@test -f $(TESTDIR)/0/test0/-part.txt || $(ARDEAEXE) -v -m "i0:ub, i1:f, i2:s" -t $(srcdir)/test0.csv -d $(TESTDIR)/0/test0 >> $(TESTDIR)/std.log 2>&1
+$(TESTDIR)/0/test1/-part.txt: $(TESTDIR)/0 $(srcdir)/test1.csv readcsv$(EXEEXT) TESTDIR
+	@test -f $(TESTDIR)/0/test1/-part.txt || ./readcsv $(srcdir)/test1.csv $(TESTDIR)/0/test1 >> $(TESTDIR)/std.log 2>&1
+$(TESTDIR)/m0/-part.txt: $(ARDEAEXE) $(srcdir)/test0.csv TESTDIR
+	@test -f $(TESTDIR)/m0/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/m0 -m "a:b, b:f, c:s" -t $(srcdir)/test0.csv -tag "meshShape=(20,5)" >> $(TESTDIR)/std.log 2>&1
+$(TESTDIR)/m1/-part.txt: $(ARDEAEXE) $(srcdir)/test1.csv TESTDIR
+	@test -f $(TESTDIR)/m1/-part.txt || $(ARDEAEXE) -d $(TESTDIR)/m1 -m "a0:d, a1:b, a2:b, b0:f, b1:s, b2:s, c0:f, c1:i, c2:i" -t $(srcdir)/test1.csv -tag "meshShape=(10, 10, 10)" >> $(TESTDIR)/std.log 2>&1
 # really small data partitions (wee == very small)
 $(TESTDIR)/w1/-part.txt: $(ARDEAEXE) TESTDIR
 	@test -f $@ || $(ARDEAEXE) -d $(TESTDIR)/w1 -m "c_1:s, c_2:d, c_3:k" -r "105, 1.1," >> $(TESTDIR)/std.log 2>&1
