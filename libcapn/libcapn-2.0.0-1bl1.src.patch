--- origsrc/libcapn-2.0.0/CMakeLists.txt	2016-06-21 07:26:07.000000000 +0900
+++ src/libcapn-2.0.0/CMakeLists.txt	2017-06-24 14:22:47.737000000 +0900
@@ -28,7 +28,11 @@ STRING(REPLACE "/" ";" CAPN_CC_LIST ${CM
 LIST(GET CAPN_CC_LIST -1 CAPN_CC)
 
 IF("${CMAKE_C_COMPILER_ID}" STREQUAL "Clang" OR "${CMAKE_C_COMPILER_ID}" STREQUAL "GNU")
-    SET(CMAKE_C_FLAGS "-std=c99 -D_POSIX_C_SOURCE=200112L -Wno-deprecated -Wall -Wextra -Wimplicit -fPIC -W -Wformat-security -pedantic -Wno-pointer-bool-conversion")
+    IF(CYGWIN)
+        SET(CMAKE_C_FLAGS "-std=c99 -D_POSIX_C_SOURCE=200112L -Wno-deprecated -Wall -Wextra -Wimplicit -W -Wformat-security -pedantic -Wno-pointer-bool-conversion")
+    ELSE()
+        SET(CMAKE_C_FLAGS "-std=c99 -D_POSIX_C_SOURCE=200112L -Wno-deprecated -Wall -Wextra -Wimplicit -fPIC -W -Wformat-security -pedantic -Wno-pointer-bool-conversion")
+    ENDIF()
     SET(CMAKE_C_FLAGS_DEBUGE "-g3 -O0 -DDEBUG")
     SET(CMAKE_C_FLAGS_RELEASE "-g2 -O3")
 ENDIF()
@@ -92,10 +96,12 @@ FOREACH(STRERROR_R_HEADER
 CAPN_TEST_STRERROR_R(${STRERROR_R_HEADER})
 ENDFOREACH(STRERROR_R_HEADER)
 
-INCLUDE(ExternalProject)
+IF(NOT CYGWIN)
+    INCLUDE(ExternalProject)
 
-INCLUDE_DIRECTORIES ("${CAPN_THIRD_PARTY_DIR}/jansson")
-INCLUDE_DIRECTORIES ("${CAPN_THIRD_PARTY_DIR}/jansson/include")
+    INCLUDE_DIRECTORIES ("${CAPN_THIRD_PARTY_DIR}/jansson")
+    INCLUDE_DIRECTORIES ("${CAPN_THIRD_PARTY_DIR}/jansson/include")
+ENDIF()
 
 CONFIGURE_FILE("${CAPN_SOURCE_LIB_DIR}/apn_platform.h.cmake" "${PROJECT_BINARY_DIR}/src/library/apn_platform.h")
 CONFIGURE_FILE("${CAPN_SOURCE_LIB_DIR}/apn_version.h.cmake" "${PROJECT_BINARY_DIR}/src/library/apn_version.h")
@@ -192,7 +198,7 @@ ELSE(WIN32)
         ENDIF()
 
         IF(NOT DEFINED CAPN_INSTALL_PATH_PKGCONFIG)
-            SET(CAPN_INSTALL_PATH_PKGCONFIG "${CMAKE_INSTALL_PREFIX}/share/pkgconfig"  CACHE PATH "")
+            SET(CAPN_INSTALL_PATH_PKGCONFIG "${CMAKE_INSTALL_PREFIX}/lib/pkgconfig"  CACHE PATH "")
         ENDIF()
 
         IF(LIB_SUFFIX)
@@ -205,15 +211,17 @@ ELSE(WIN32)
             ENDIF()
         ENDIF()
 
-        ExternalProject_Add(
-            jansson
-            SOURCE_DIR "${CAPN_THIRD_PARTY_DIR}/jansson"
-            BINARY_DIR "${CAPN_THIRD_PARTY_DIR}/jansson"
-            INSTALL_DIR "${CAPN_THIRD_PARTY_DIR}/jansson"
-            CMAKE_COMMAND cmake . -DCMAKE_C_FLAGS=-fPIC -DJANSSON_BUILD_DOCS=OFF
-            BUILD_COMMAND make
-            INSTALL_COMMAND ""
-        )
+        IF(NOT CYGWIN)
+            ExternalProject_Add(
+                jansson
+                SOURCE_DIR "${CAPN_THIRD_PARTY_DIR}/jansson"
+                BINARY_DIR "${CAPN_THIRD_PARTY_DIR}/jansson"
+                INSTALL_DIR "${CAPN_THIRD_PARTY_DIR}/jansson"
+                CMAKE_COMMAND cmake . -DCMAKE_C_FLAGS=-fPIC -DJANSSON_BUILD_DOCS=OFF
+                BUILD_COMMAND make
+                INSTALL_COMMAND ""
+            )
+        ENDIF()
 		
         SET(CAPN_INSTALL_PATH_LIB "${CAPN_INSTALL_PATH_LIB}/${CAPN_LIB_NAME}")
         SET(CAPN_PKGCONF_FILE_NAME "libcapn.pc")
@@ -254,7 +262,11 @@ IF(WIN32)
 	TARGET_LINK_LIBRARIES(${CAPN_LIB_NAME} ${OPENSSL_SSLEAY_LIBRARY})
 	TARGET_LINK_LIBRARIES(${CAPN_LIB_NAME} ${OPENSSL_LIBEAY_LIBRARY})
 ELSE()
-	TARGET_LINK_LIBRARIES(${CAPN_LIB_NAME} "${CAPN_THIRD_PARTY_DIR}/jansson/lib/libjansson.a")
+    IF(CYGWIN)
+        TARGET_LINK_LIBRARIES(${CAPN_LIB_NAME} jansson)
+    ELSE()
+    	TARGET_LINK_LIBRARIES(${CAPN_LIB_NAME} "${CAPN_THIRD_PARTY_DIR}/jansson/lib/libjansson.a")
+    ENDIF()
 	TARGET_LINK_LIBRARIES(${CAPN_LIB_NAME} ${OPENSSL_LIBRARIES})
 ENDIF()
 
@@ -263,7 +275,9 @@ SET_TARGET_PROPERTIES(${CAPN_LIB_NAME} P
     CLEAN_DIRECT_OUTPUT 1
 )
 
-ADD_DEPENDENCIES(${CAPN_LIB_NAME} jansson)
+IF(NOT CYGWIN)
+    ADD_DEPENDENCIES(${CAPN_LIB_NAME} jansson)
+ENDIF()
 
 INSTALL(TARGETS ${CAPN_LIB_NAME}
     RUNTIME DESTINATION ${CAPN_INSTALL_PATH_BIN}
--- origsrc/libcapn-2.0.0/src/library/apn_payload.c	2016-06-21 07:26:07.000000000 +0900
+++ src/libcapn-2.0.0/src/library/apn_payload.c	2017-06-24 14:24:17.267999800 +0900
@@ -24,7 +24,11 @@
 #include <errno.h>
 #include <assert.h>
 
+#if defined(__CYGWIN__)
+#include <jansson.h>
+#else
 #include "src/jansson.h"
+#endif
 #include "apn_strings.h"
 #include "apn_memory.h"
 #include "apn_private.h"
