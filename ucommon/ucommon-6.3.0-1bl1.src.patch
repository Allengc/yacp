--- origsrc/ucommon-6.3.0/commoncpp/udp.cpp	2014-08-31 19:51:41.000000000 +0900
+++ src/ucommon-6.3.0/commoncpp/udp.cpp	2014-12-29 15:01:00.160983600 +0900
@@ -316,7 +316,7 @@ Socket::Error UDPSocket::join(const ucom
 Socket::Error UDPSocket::getInterfaceIndex(const char *DeviceName,int& InterfaceIndex)
 {
 #ifndef _MSWINDOWS_
-#if defined(IP_ADD_MEMBERSHIP) && defined(SIOCGIFINDEX) && !defined(__FreeBSD__) && !defined(__FreeBSD_kernel__) && !defined(_OSF_SOURCE) && !defined(__hpux) && !defined(__GNU__)
+#if defined(IP_ADD_MEMBERSHIP) && defined(SIOCGIFINDEX) && !defined(__FreeBSD__) && !defined(__FreeBSD_kernel__) && !defined(_OSF_SOURCE) && !defined(__hpux) && !defined(__GNU__) && !defined(__CYGWIN__)
 
     struct ip_mreqn  mreqn;
     struct ifreq       m_ifreq;
--- origsrc/ucommon-6.3.0/configure.ac	2014-12-13 04:00:57.000000000 +0900
+++ src/ucommon-6.3.0/configure.ac	2014-12-29 15:05:15.661960100 +0900
@@ -58,6 +58,7 @@ have_gettext="no"
 socket_lib=""
 posix4_lib=""
 rt_lib=""
+intl_lib=""
 
 test -z "$localedir" && localedir='${datadir}/locale'
 
@@ -185,6 +186,47 @@ AC_CHECK_HEADER(regex.h, [
     ])
 ])
 
+if test "$host_os" = "cygwin"
+then
+    AC_CHECK_LIB(gcc, __modsi3, [
+        UCOMMON_LIBC="$UCOMMON_LIBC -lgcc"
+    ])
+    AC_CHECK_LIB($clib, socketpair, [
+        AC_DEFINE(HAVE_SOCKETPAIR, [1], [have socketpair])
+    ],[
+            AC_CHECK_LIB(socket, socketpair, [AC_DEFINE(HAVE_SOCKETPAIR, [1], [have socketpair])])
+    ])
+    AC_CHECK_LIB($clib, getaddrinfo, [
+        AC_DEFINE(HAVE_GETADDRINFO, [1], [have getaddrinfo])
+    ],[
+            AC_CHECK_LIB(socket, getaddrinfo, [AC_DEFINE(HAVE_GETADDRINFO, [1], [have getaddrinfo])])
+    ])
+    AC_CHECK_LIB($clib, gethostbyname2, [
+        AC_DEFINE(HAVE_GETHOSTBYNAME2, [1], [have gethostbyname2])
+    ],[
+            AC_CHECK_LIB(socket, gethostbyname2, [AC_DEFINE(HAVE_GETHOSTBYNAME2, [1], [have gethostbyname2])])
+    ])
+
+    AC_CHECK_LIB($clib, inet_ntop, [
+        AC_DEFINE(HAVE_INET_NTOP, [1], [have inet ntop])
+    ],[
+        AC_CHECK_LIB(socket, inet_ntop, [
+            AC_DEFINE(HAVE_INET_NTOP, [1], [have inet ntop])
+        ],[
+            AC_CHECK_LIB(nsl, inet_ntop, [
+                AC_DEFINE(HAVE_INET_NTOP, [1], [have inet_ntop])
+                socket_lib="$socket_lib -lnsl"
+            ])
+        ])
+    ])
+
+    AC_CHECK_LIB(socket, socket,[
+        AC_CHECK_LIB(socket, socketpair,[
+            AC_DEFINE(HAVE_SOCKETPAIR, [1], [have socketpair in libsocket])
+        ])
+        socket_lib="-lsocket"
+    ])
+else
 AC_CHECK_LIB(msvcrt, fopen, [
     threading="msw"
     clib="msvcrt"
@@ -233,6 +275,7 @@ AC_CHECK_LIB(msvcrt, fopen, [
         socket_lib="-lsocket"
     ])
 ])
+fi
 
 AC_ARG_ENABLE(socks,
     AC_HELP_STRING([--enable-socks],
@@ -392,6 +435,11 @@ for func in ftok shm_open nanosleep cloc
                 if test ! -z "$tlib" ; then
                     AC_CHECK_LIB($tlib, $func, [
                         found=$func
+                    ],[
+                        AC_CHECK_LIB(intl, $func, [
+                            found=$func
+                            intl_lib="-lintl"
+                        ])
                     ])
                 fi
             ])
@@ -468,8 +516,8 @@ for func in ftok shm_open nanosleep cloc
     esac
 done
 
-UCOMMON_LINKED="$socket_lib $posix4_lib $rt_lib $UCOMMON_LIBS"
-UCOMMON_LIBS="$socket_lib $posix4_lib $rt_lib $UCOMMON_LIBS $UCOMMON_LIBC"
+UCOMMON_LINKED="$socket_lib $posix4_lib $rt_lib $intl_lib $UCOMMON_LIBS"
+UCOMMON_LIBS="$socket_lib $posix4_lib $rt_lib $intl_lib $UCOMMON_LIBS $UCOMMON_LIBC"
 
 if test "$UCOMMON_MODEL" = "CC" ; then
     AC_CHECK_LIB(Systemstubs, printf, [
@@ -570,6 +618,9 @@ AC_ARG_WITH(pkg-config,
         AC_CHECK_HEADERS(openssl/fips.h)
     ])
     PKG_CHECK_MODULES(GNUTLS, [gnutls >= 3.0.0], [], [GNUTLS_LIBS=""])
+    AC_CHECK_LIB(gnutls, gnutls_init, [
+        GNUTLS_LIBS="$GNUTLS_LIBS -lgcrypt"
+    ])
 ],[
     AC_CHECK_HEADERS(openssl/ssl.h, [
         OPENSSL_LIBS="-lssl -lcrypto -lz $OPENSSL_LINK"
