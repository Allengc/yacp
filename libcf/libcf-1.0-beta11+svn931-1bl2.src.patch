--- origsrc/libcf/Makefile.am	2012-07-11 06:13:22.000000000 +0900
+++ src/libcf/Makefile.am	2016-03-13 15:03:13.234725600 +0900
@@ -26,6 +26,7 @@ gridspec_api/coord/libnccf_coord.la
 gridspec_api/axis/libnccf_axis.la					\
 gridspec_api/global/libnccf_global.la                                   \
 src/libcf_src.la -lnetcdf
+libcf_la_LDFLAGS = -no-undefined
 
 # What needs to go in the binary dist?
 BINFILES = README_BINARIES.txt include/libcf.h lib/libcf.a
--- origsrc/libcf/configure.ac	2012-07-11 06:13:22.000000000 +0900
+++ src/libcf/configure.ac	2016-03-13 15:03:13.234725600 +0900
@@ -173,7 +173,7 @@ if test "x$enable_regrid" != "xno"; then
 fi
 
 # Do we want to build the fortran API? Check for --disable-f90
-nc_build_f90=no
+nc_build_f90=yes
 AC_MSG_CHECKING([whether Fortran 90 API is desired])
 AC_ARG_ENABLE([f90],
               [AS_HELP_STRING([--disable-f90],
@@ -380,8 +380,7 @@ fi
 AM_CONDITIONAL([HAVE_FORTRAN_2003], [test x$fortran_2003 = xyes])
 
 # Python (not required but nice to have)
-PYTHON=""
-AC_CHECK_PROGS([PYTHON],[python python2])
+AM_PATH_PYTHON
 AM_CONDITIONAL(HAVE_PYTHON, test "x$PYTHON" != "x")
 
 AC_MSG_NOTICE([generating header files and makefiles])
--- origsrc/libcf/pycf/Makefile.am	2012-07-11 06:13:22.000000000 +0900
+++ src/libcf/pycf/Makefile.am	2016-03-13 15:03:13.234725600 +0900
@@ -2,7 +2,7 @@
 # $Id: Makefile.am 930 2012-07-10 21:13:22Z pletzer $
 #
 
-libcfpydir = $(exec_prefix)/pycf
+libcfpydir = $(pythondir)/pycf
 
 if HAVE_PYTHON
 libCFConfig.py: $(top_builddir)/config.log
--- origsrc/libcf/src/Makefile.am	2011-12-29 13:56:48.000000000 +0900
+++ src/libcf/src/Makefile.am	2016-03-13 15:10:10.307532600 +0900
@@ -11,10 +11,11 @@ LDADD += -lnetcdf
 # Initalize these.
 AM_CPPFLAGS = -I$(top_srcdir)/include
 AM_LDFLAGS =
+AM_FCFLAGS = -I/usr/include
 
 include_HEADERS =          \
 nccf_find_next_indices.h   \
-nccf_keyvalue.h            
+nccf_keyvalue.h
 
 # This is our output, the NetCDF CF Library.
 lib_LTLIBRARIES = libcf_src.la
@@ -23,7 +24,7 @@ lib_LTLIBRARIES = libcf_src.la
 LDADD += -lm
 
 # These linker flags specify libtool version info.
-libcf_src_la_LDFLAGS = -version-info 0:0:0
+libcf_src_la_LDFLAGS = -version-info 0:0:0 -no-undefined
 
 check_PROGRAMS = tst_coords tst_files tst_vars tst_cvars tst_vert	\
 tst_subsets tst_princeton tst_listitem tst_nccf_get_flat_index		\
@@ -38,18 +39,19 @@ tst_nccf_get_tripolar_grid tst_nccf_gene
 tst_nccf_get_tripolar_halfgrid tst_nccf_get_cubedsphere_grid		\
 tst_nccf_find_adjacent tst_nccf_linear_interp_mask tst_nccf_keyvalue
 
-#noinst_PROGRAMS = tst_nccf_get_flat_index tst_nccf_index2vector		
+#noinst_PROGRAMS = tst_nccf_get_flat_index tst_nccf_index2vector
 
 if BUILD_F90
 lib_LTLIBRARIES += libcff_src.la
 libcff_src_la_DEPENDENCIES = libcf_api.f90
 EXTRA_DIST = libcf_api.f90
 libcff_src_la_SOURCES = cffcvars.f90
+libcff_src_la_LDFLAGS = -no-undefined
 # if USE_NETCDF4
 # check_PROGRAMS += tst_f03_file
 # tst_f03_file_SOURCES = tst_f03_file.f90
 # endif # USE_NETCDF4
-LDADD += libcf_src.la
+libcff_src_la_LIBADD = libcf_src.la
 endif # BUILD_F90
 
 # This is the coordinate systems stuff.
@@ -73,7 +75,7 @@ nccf_find_next_adjcnt_index.c nccf_find_
 nccf_find_indices.h nccf_find_indices.c nccf_add_id_to_files.c		\
 nccf_keyvalue.h nccf_keyvalue.c                                         \
 nccf_get_distance_in_coord.c nccf_get_distance_in_coord.h               \
-nccf_linear_interp_mod.h nccf_linear_interp_mod.c			
+nccf_linear_interp_mod.h nccf_linear_interp_mod.c
 
 # These files are created by the tests.
 CLEANFILES = tst_*.nc libcf.mod
@@ -94,6 +96,3 @@ tst_f03_file.o: tst_f03_file.f90
 	$(FC) -c $(AM_FCFLAGS) $(FCFLAGS) -c $? -o $@
 
 TESTS = $(check_PROGRAMS)
-
-
-
