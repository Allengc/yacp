--- origsrc/libindicator-12.10.1/tests/Makefile.am	2012-09-20 00:38:05.526125500 +0900
+++ src/libindicator-12.10.1/tests/Makefile.am	2013-01-16 18:32:45.069914100 +0900
@@ -99,7 +99,7 @@ libdummy_indicator_blank_la_LIBADD = \
 	-L$(top_builddir)/libindicator/.libs \
 	$(INDICATOR_LIB)
 
-libdummy_indicator_blank_la_LDFLAGS = \
+libdummy_indicator_blank_la_LDFLAGS = -no-undefined \
 	-module \
 	-avoid-version
 
@@ -119,7 +119,7 @@ libdummy_indicator_null_la_LIBADD = \
 	-L$(top_builddir)/libindicator/.libs \
 	$(INDICATOR_LIB)
 
-libdummy_indicator_null_la_LDFLAGS = \
+libdummy_indicator_null_la_LDFLAGS = -no-undefined \
 	-module \
 	-avoid-version
 
@@ -139,7 +139,7 @@ libdummy_indicator_signaler_la_LIBADD =
 	-L$(top_builddir)/libindicator/.libs \
 	$(INDICATOR_LIB)
 
-libdummy_indicator_signaler_la_LDFLAGS = \
+libdummy_indicator_signaler_la_LDFLAGS = -no-undefined \
 	-module \
 	-avoid-version
 
@@ -159,7 +159,7 @@ libdummy_indicator_simple_la_LIBADD = \
 	-L$(top_builddir)/libindicator/.libs \
 	$(INDICATOR_LIB)
 
-libdummy_indicator_simple_la_LDFLAGS = \
+libdummy_indicator_simple_la_LDFLAGS = -no-undefined \
 	-module \
 	-avoid-version
 
@@ -180,7 +180,7 @@ libdummy_indicator_entry_func_la_LIBADD
 	-L$(top_builddir)/libindicator/.libs \
 	$(INDICATOR_LIB)
 
-libdummy_indicator_entry_func_la_LDFLAGS = \
+libdummy_indicator_entry_func_la_LDFLAGS = -no-undefined \
 	-module \
 	-avoid-version
 
@@ -200,7 +200,7 @@ libdummy_indicator_visible_la_LIBADD = \
 	-L$(top_builddir)/libindicator/.libs \
 	$(INDICATOR_LIB)
 
-libdummy_indicator_visible_la_LDFLAGS = \
+libdummy_indicator_visible_la_LDFLAGS = -no-undefined \
 	-module \
 	-avoid-version
 
--- origsrc/libindicator-12.10.1/tests/test-loader.c	2012-09-20 00:38:05.526125500 +0900
+++ src/libindicator-12.10.1/tests/test-loader.c	2013-01-16 17:40:05.038477600 +0900
@@ -47,7 +47,7 @@ entry_func_swap (IndicatorObject * io)
 void
 test_loader_entry_func_window (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-entry-func.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/libdummy-indicator-entry-func");
 	g_assert(object != NULL);
 
 	DummyIndicatorEntryFunc * entryfunc = (DummyIndicatorEntryFunc *)(object);
@@ -72,7 +72,7 @@ test_loader_entry_func_window (void)
 void
 test_loader_entry_funcs (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-entry-func.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/libdummy-indicator-entry-func");
 	g_assert(object != NULL);
 
 	DummyIndicatorEntryFunc * entryfunc = (DummyIndicatorEntryFunc *)(object);
@@ -115,7 +115,7 @@ entry_move_cb (IndicatorObject * io, Ind
 void
 test_loader_filename_dummy_signaler (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-signaler.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/libdummy-indicator-signaler");
 	g_assert(object != NULL);
 
 	IndicatorObjectEntry *added_entry, *moved_entry, *removed_entry;
@@ -180,7 +180,7 @@ void
 test_loader_filename_dummy_visible (void)
 {
 	const GQuark is_hidden_quark = g_quark_from_static_string ("is-hidden");
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-visible.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/libdummy-indicator-visible");
 	g_assert(object != NULL);
 
 	// create our local parent widgetry
@@ -245,7 +245,7 @@ test_loader_filename_dummy_visible (void
 void
 test_loader_filename_dummy_simple_location (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-simple.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/libdummy-indicator-simple");
 	g_assert(object != NULL);
 
 	GList * entries = indicator_object_get_entries(object);
@@ -266,7 +266,7 @@ test_loader_filename_dummy_simple_locati
 void
 test_loader_filename_dummy_simple_accessors (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-simple.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/libdummy-indicator-simple");
 	g_assert(object != NULL);
 
 	g_assert(indicator_object_get_entries(object) != NULL);
@@ -279,7 +279,7 @@ test_loader_filename_dummy_simple_access
 void
 test_loader_filename_dummy_simple (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-simple.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/libdummy-indicator-simple");
 	g_assert(object != NULL);
 
 	gboolean unreffed = FALSE;
@@ -294,7 +294,7 @@ test_loader_filename_dummy_simple (void)
 void
 test_loader_filename_dummy_blank (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-blank.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/libdummy-indicator-blank");
 	g_assert(object == NULL);
 	return;
 }
@@ -302,7 +302,7 @@ test_loader_filename_dummy_blank (void)
 void
 test_loader_filename_dummy_null (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-null.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/libdummy-indicator-null");
 	g_assert(object != NULL);
 	g_assert(indicator_object_get_entries(object) == NULL);
 	g_object_unref(G_OBJECT(object));
