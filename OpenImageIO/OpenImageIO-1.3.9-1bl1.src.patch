--- origsrc/oiio-Release-1.3.9/src/cmake/externalpackages.cmake	2013-12-03 10:54:59.000000000 +0900
+++ src/oiio-Release-1.3.9/src/cmake/externalpackages.cmake	2013-12-09 08:20:54.606233300 +0900
@@ -285,7 +285,7 @@ if (USE_FIELD3D)
     endif ()
     if (VERBOSE)
         message (STATUS "HDF5_FOUND=${HDF5_FOUND}")
-        message (STATUS "HDF5_LIBRARY=${HDF5_LIBRARY}")
+        message (STATUS "HDF5_LIBRARIES=${HDF5_LIBRARIES}")
     endif ()
 endif ()
 if (USE_FIELD3D AND HDF5_FOUND)
@@ -309,6 +309,7 @@ if (USE_FIELD3D AND HDF5_FOUND)
     if (FIELD3D_INCLUDES AND FIELD3D_LIBRARY)
         set (FIELD3D_FOUND TRUE)
         if (VERBOSE)
+            message (STATUS "FIELD3D_FOUND = ${FIELD3D_FOUND}")
             message (STATUS "Field3D includes = ${FIELD3D_INCLUDES}")
             message (STATUS "Field3D library = ${FIELD3D_LIBRARY}")
         endif ()
--- origsrc/oiio-Release-1.3.9/src/dpx.imageio/CMakeLists.txt	2013-12-03 10:54:59.000000000 +0900
+++ src/oiio-Release-1.3.9/src/dpx.imageio/CMakeLists.txt	2013-12-09 08:41:24.279961300 +0900
@@ -1,4 +1,5 @@
 add_oiio_plugin (dpxinput.cpp dpxoutput.cpp
   libdpx/DPX.cpp libdpx/OutStream.cpp libdpx/RunLengthEncoding.cpp
   libdpx/Codec.cpp libdpx/Reader.cpp libdpx/Writer.cpp libdpx/DPXHeader.cpp
-  libdpx/ElementReadStream.cpp libdpx/InStream.cpp libdpx/DPXColorConverter.cpp)
+  libdpx/ElementReadStream.cpp libdpx/InStream.cpp libdpx/DPXColorConverter.cpp
+  LINK_LIBRARIES ${OPENEXR_ILMIMF_LIBRARY})
--- origsrc/oiio-Release-1.3.9/src/field3d.imageio/CMakeLists.txt	2013-12-03 10:54:59.000000000 +0900
+++ src/oiio-Release-1.3.9/src/field3d.imageio/CMakeLists.txt	2013-12-09 08:42:13.996758200 +0900
@@ -1,9 +1,9 @@
 if (USE_FIELD3D)
-  if (FIELD3D_FOUND and HDF5_FOUND)
+  if (FIELD3D_FOUND AND HDF5_FOUND)
     include_directories (${FIELD3D_INCLUDES})
     add_oiio_plugin (field3dinput.cpp field3doutput.cpp
                      LINK_LIBRARIES ${FIELD3D_LIBRARY}
-                                    ${HDF5_LIBRARY}
+                                    ${HDF5_LIBRARIES}
                      )
   else()
     message (STATUS "Field3D not found: field3d plugin will not be built")
--- origsrc/oiio-Release-1.3.9/src/libtexture/texture_pvt.h	2013-12-03 10:54:59.000000000 +0900
+++ src/oiio-Release-1.3.9/src/libtexture/texture_pvt.h	2013-12-09 07:55:06.205831400 +0900
@@ -56,7 +56,9 @@ class ImageCacheTile;
 class ImageCacheTileRef;
 #endif
 
-
+#if defined(__CYGWIN__) && defined(_P)
+#undef _P
+#endif
 
 /// Working implementation of the abstract TextureSystem class.
 ///
--- origsrc/oiio-Release-1.3.9/src/libutil/plugin.cpp	2013-12-03 10:54:59.000000000 +0900
+++ src/oiio-Release-1.3.9/src/libutil/plugin.cpp	2013-12-09 07:55:31.655050200 +0900
@@ -58,7 +58,7 @@ static std::string last_error;
 const char *
 Plugin::plugin_extension (void)
 {
-#if defined(_WIN32)
+#if defined(_WIN32) || defined(__CYGWIN__)
     return "dll";
 #elif defined(__APPLE__)
     return "dylib";
--- origsrc/oiio-Release-1.3.9/src/libutil/sysutil.cpp	2013-12-03 10:54:59.000000000 +0900
+++ src/oiio-Release-1.3.9/src/libutil/sysutil.cpp	2013-12-09 07:58:47.545675200 +0900
@@ -34,7 +34,7 @@
 #include <iostream>
 #include <ctime>
 
-#ifdef __linux__
+#if defined(__linux__ ) || defined(__CYGWIN__)
 # include <sys/sysinfo.h>
 # include <unistd.h>
 # include <sys/ioctl.h>
@@ -83,7 +83,7 @@ using namespace Sysutil;
 size_t
 Sysutil::memory_used (bool resident)
 {
-#if defined(__linux__)
+#if defined(__linux__) || defined(__CYGWIN__)
 #if 0
     // doesn't seem to work?
     struct rusage ru;
@@ -141,7 +141,7 @@ Sysutil::memory_used (bool resident)
 size_t
 Sysutil::physical_memory ()
 {
-#if defined(__linux__)
+#if defined(__linux__) || defined(__CYGWIN__)
     size_t size = 0;
     FILE *file = fopen ("/proc/meminfo", "r");
     if (file) {
@@ -221,7 +221,7 @@ Sysutil::this_program_path ()
     char filename[10240];
     filename[0] = 0;
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__CYGWIN__)
     unsigned int size = sizeof(filename);
     int r = readlink ("/proc/self/exe", filename, size);
     ASSERT(r < int(size)); // user won't get the right answer if the filename is too long to store
@@ -276,7 +276,7 @@ Sysutil::terminal_columns ()
 {
     int columns = 80;   // a decent guess, if we have nothing more to go on
 
-#if defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__GNU__)
+#if defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__GNU__) || defined(__CYGWIN__)
     struct winsize w;
     ioctl (0, TIOCGWINSZ, &w);
     columns = w.ws_col;
@@ -312,7 +312,7 @@ Sysutil::put_in_background (int, char* [
     // But it suffers from the same problem on OS X, and seems to just be
     // a wrapper for fork.
 
-#if defined(__linux__) || defined(__GLIBC__)
+#if defined(__linux__) || defined(__GLIBC__) || defined(__CYGWIN__)
     // Simplest case:
     // daemon returns 0 if successful, thus return true if successful
     return daemon (1, 1) == 0;
--- origsrc/oiio-Release-1.3.9/src/ptex.imageio/CMakeLists.txt	2013-12-03 10:54:59.000000000 +0900
+++ src/oiio-Release-1.3.9/src/ptex.imageio/CMakeLists.txt	2013-12-09 07:59:52.366964200 +0900
@@ -1,10 +1,24 @@
 find_package (ZLIB)
 
+find_path(PTEX_INCLUDE_DIRS PtexHalf.h PATHS /usr/include/ptex)
+find_library(PTEX_LIBRARIES Ptex)
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(PTEX PTEX_INCLUDE_DIRS PTEX_LIBRARIES)
+
+message(STATUS "Ptex Found        = ${PTEX_FOUND}")
+message(STATUS "Ptex include dirs = ${PTEX_INCLUDE_DIRS}")
+message(STATUS "Ptex libraries    = ${PTEX_LIBRARIES}")
+
 if (ZLIB_FOUND)
     if (WIN32)
         add_definitions ("-DPTEX_EXPORTS")
     endif()
     include_directories (${ZLIB_INCLUDE_DIR})
+    if (PTEX_FOUND)
+        include_directories (${PTEX_INCLUDE_DIRS})
+        add_oiio_plugin (ptexinput.cpp ptexoutput.cpp
+                         LINK_LIBRARIES ${ZLIB_LIBRARIES} ${PTEX_LIBRARIES})
+    else (PTEX_FOUND)
     add_oiio_plugin (ptexinput.cpp ptexoutput.cpp
                  ptex/PtexCache.cpp
                  ptex/PtexFilters.cpp
@@ -17,5 +31,6 @@ if (ZLIB_FOUND)
                  ptex/PtexUtils.cpp
                  ptex/PtexWriter.cpp
                  LINK_LIBRARIES ${ZLIB_LIBRARIES} )
+    endif (PTEX_FOUND)
 endif ()
 
