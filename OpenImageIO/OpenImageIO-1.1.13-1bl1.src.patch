--- origsrc/oiio/src/CMakeLists.txt	2013-06-26 06:38:02.000000000 +0900
+++ src/oiio/src/CMakeLists.txt	2013-06-26 06:38:13.822866500 +0900
@@ -249,7 +249,9 @@ add_subdirectory (igrep)
 add_subdirectory (iinfo)
 add_subdirectory (maketx)
 add_subdirectory (oiiotool)
+if (NOT CYGWIN)
 add_subdirectory (testtex)
+endif (NOT CYGWIN)
 add_subdirectory (iv)
 # Add IO plugin directories
 if (NOT EMBEDPLUGINS)
--- origsrc/oiio/src/libtexture/texture_pvt.h	2013-06-26 06:38:03.000000000 +0900
+++ src/oiio/src/libtexture/texture_pvt.h	2013-06-26 06:38:13.822866500 +0900
@@ -56,7 +56,9 @@ class ImageCacheTile;
 class ImageCacheTileRef;
 #endif
 
-
+#if defined(__CYGWIN__) && defined(_P)
+#undef _P
+#endif
 
 /// Working implementation of the abstract TextureSystem class.
 ///
--- origsrc/oiio/src/libutil/plugin.cpp	2013-06-26 06:38:03.000000000 +0900
+++ src/oiio/src/libutil/plugin.cpp	2013-06-26 06:38:13.832955900 +0900
@@ -58,7 +58,7 @@ static std::string last_error;
 const char *
 Plugin::plugin_extension (void)
 {
-#if defined(_WIN32)
+#if defined(_WIN32) || defined(__CYGWIN__)
     return "dll";
 #elif defined(__APPLE__)
     return "dylib";
--- origsrc/oiio/src/libutil/sysutil.cpp	2013-06-26 06:38:03.000000000 +0900
+++ src/oiio/src/libutil/sysutil.cpp	2013-06-26 06:38:13.832955900 +0900
@@ -150,7 +150,7 @@ Sysutil::this_program_path ()
     filename[0] = 0;
     unsigned int size = sizeof(filename);
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__CYGWIN__)
     int r = readlink ("/proc/self/exe", filename, size);
     ASSERT(r < int(size)); // user won't get the right answer if the filename is too long to store
     if (r > 0) filename[r] = 0; // readlink does not fill in the 0 byte
--- origsrc/oiio/src/ptex.imageio/CMakeLists.txt	2013-06-26 06:38:03.000000000 +0900
+++ src/oiio/src/ptex.imageio/CMakeLists.txt	2013-06-26 06:38:13.832955900 +0900
@@ -1,10 +1,24 @@
 find_package (ZLIB)
 
+find_path(PTEX_INCLUDE_DIRS PtexHalf.h PATHS /usr/include/ptex)
+find_library(PTEX_LIBRARIES Ptex)
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(PTEX PTEX_INCLUDE_DIRS PTEX_LIBRARIES)
+
+message(STATUS "Ptex Found        = ${PTEX_FOUND}")
+message(STATUS "Ptex include dirs = ${PTEX_INCLUDE_DIRS}")
+message(STATUS "Ptex libraries    = ${PTEX_LIBRARIES}")
+
 if (ZLIB_FOUND)
 	if (WIN32)
         add_definitions ("-DPTEX_EXPORTS")
 	endif()
     include_directories (${ZLIB_INCLUDE_DIR})
+    if (PTEX_FOUND)
+        include_directories (${PTEX_INCLUDE_DIRS})
+        add_oiio_plugin (ptexinput.cpp ptexoutput.cpp
+                         LINK_LIBRARIES ${ZLIB_LIBRARIES} ${PTEX_LIBRARIES})
+    else (PTEX_FOUND)
 	add_oiio_plugin (ptexinput.cpp ptexoutput.cpp
                  ptex/PtexCache.cpp
                  ptex/PtexFilters.cpp
@@ -17,5 +31,6 @@ if (ZLIB_FOUND)
                  ptex/PtexUtils.cpp
                  ptex/PtexWriter.cpp
                  LINK_LIBRARIES ${ZLIB_LIBRARIES} )
+    endif (PTEX_FOUND)
 endif ()
 
