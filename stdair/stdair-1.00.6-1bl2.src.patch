diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x x86_64-pc-cygwin -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/stdair-stdair-1.00.6/config/project_config_embeddable.cmake src/stdair-stdair-1.00.6/config/project_config_embeddable.cmake
--- origsrc/stdair-stdair-1.00.6/config/project_config_embeddable.cmake	2017-08-07 04:17:48.000000000 +0900
+++ src/stdair-stdair-1.00.6/config/project_config_embeddable.cmake	2018-04-18 19:14:10.251261800 +0900
@@ -1472,7 +1472,11 @@ endmacro (module_set_name)
 macro (add_modules)
   set (_embedded_components ${ARGV})
   set (LIB_DEPENDENCY_EXPORT ${PROJECT_NAME}-library-depends)
+  if (CYGWIN)
+    set (LIB_DEPENDENCY_EXPORT_PATH "${INSTALL_LIB_DIR}/cmake/${PROJECT_NAME}")
+  else()
   set (LIB_DEPENDENCY_EXPORT_PATH "${INSTALL_DATA_DIR}/${PROJECT_NAME}/CMake")
+  endif()
   #
   foreach (_embedded_comp ${_embedded_components})
     #
@@ -1751,7 +1755,8 @@ macro (module_library_add_specific
 	# Install the library in the standard location
 	install (TARGETS ${_lib_target}
       EXPORT ${LIB_DEPENDENCY_EXPORT}
-      LIBRARY DESTINATION "${INSTALL_LIB_DIR}" COMPONENT runtime)
+      RUNTIME DESTINATION "${INSTALL_BIN_DIR}"
+      ARCHIVE DESTINATION "${INSTALL_LIB_DIR}")
   endif ("${_lib_prefix}" STREQUAL "py")
   
   # Register, for reporting purpose, the list of libraries to be built
@@ -1947,8 +1952,13 @@ endmacro (module_script_add)
 # Installation of the CMake import helper, so that third party projects
 # can refer to it (for libraries, header files and binaries)
 macro (module_export_install)
+  if (CYGWIN)
+  install (EXPORT ${LIB_DEPENDENCY_EXPORT}
+    DESTINATION "${INSTALL_LIB_DIR}/cmake" COMPONENT devel)
+  else()
   install (EXPORT ${LIB_DEPENDENCY_EXPORT}
     DESTINATION "${INSTALL_DATA_DIR}/${PACKAGE}/CMake" COMPONENT devel)
+  endif()
 endmacro (module_export_install)
 
 
