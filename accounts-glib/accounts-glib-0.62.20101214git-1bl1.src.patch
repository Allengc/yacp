--- origsrc/accounts-glib/configure.ac	2011-01-06 01:44:51.000000000 +0900
+++ src/accounts-glib/configure.ac	2011-01-06 01:52:03.069874700 +0900
@@ -22,7 +22,7 @@ AC_ISC_POSIX
 AC_PROG_CC
 AM_PROG_CC_STDC
 AC_HEADER_STDC
-AC_PROG_LIBTOOL
+LT_INIT(win32-dll)
 
 GTK_DOC_CHECK([1.3])
 
--- origsrc/accounts-glib/libaccounts-glib/Makefile.am	2011-01-06 01:44:51.000000000 +0900
+++ src/accounts-glib/libaccounts-glib/Makefile.am	2011-01-06 02:01:40.196888800 +0900
@@ -1,10 +1,10 @@
 lib_LTLIBRARIES = \
 	libaccounts-glib.la
 
-libaccounts_glib_la_CFLAGS = $(LIBACCOUNTS_CFLAGS) -Wall -Werror
-libaccounts_glib_la_LIBADD = $(LIBACCOUNTS_LIBS) -lrt
+libaccounts_glib_la_CFLAGS = $(LIBACCOUNTS_CFLAGS) -Wall
+libaccounts_glib_la_LIBADD = $(LIBACCOUNTS_LIBS)
 libaccounts_glib_la_LDFLAGS = \
-	-version-info 1:3:1 \
+	-version-info 1:3:1 -no-undefined \
 	-export-symbols-regex '^ag_'
 
 BUILT_SOURCES = \
@@ -50,3 +50,4 @@ libaccounts_glib_include_HEADERS = \
 
 EXTRA_DIST = ag-marshal.list
 
+INCLUDES = -I$(top_srcdir)
--- origsrc/accounts-glib/tests/check_ag.c	2011-01-06 01:44:52.000000000 +0900
+++ src/accounts-glib/tests/check_ag.c	2011-01-06 02:11:22.717902000 +0900
@@ -1089,7 +1089,7 @@ START_TEST(test_concurrency)
                       G_CALLBACK (on_account_created), &account_id);
 
     account_id = 0;
-    system ("test-process create myprovider MyAccountName");
+    system ("./test-process create myprovider MyAccountName");
 
     main_loop = g_main_loop_new (NULL, FALSE);
     source_id = g_timeout_add_seconds (2, concurrency_test_failed, NULL);
@@ -1115,7 +1115,7 @@ START_TEST(test_concurrency)
     /* check deletion */
     g_signal_connect (manager, "account-deleted",
                       G_CALLBACK (on_account_deleted), &account_id);
-    sprintf (command, "test-process delete %d", account_id);
+    sprintf (command, "./test-process delete %d", account_id);
     system (command);
 
     source_id = g_timeout_add_seconds (2, concurrency_test_failed, NULL);
@@ -1126,7 +1126,7 @@ START_TEST(test_concurrency)
     fail_unless (account_id == 0, "Account still alive");
 
     /* check a more complex creation */
-    system ("test-process create2 myprovider MyAccountName");
+    system ("./test-process create2 myprovider MyAccountName");
 
     source_id = g_timeout_add_seconds (2, concurrency_test_failed, NULL);
     g_main_loop_run (main_loop);
@@ -1199,7 +1199,7 @@ START_TEST(test_concurrency)
     memset (&ecd, 0, sizeof (ecd));
 
     /* make changes remotely */
-    sprintf (command, "test-process change %d", account_id);
+    sprintf (command, "./test-process change %d", account_id);
     system (command);
 
     source_id = g_timeout_add_seconds (2, concurrency_test_failed, NULL);
@@ -1389,7 +1389,7 @@ START_TEST(test_blocking)
 
     timeout_ms = MAX_SQLITE_BUSY_LOOP_TIME_MS;
 
-    sprintf (command, "test-process lock_db %d %s &",
+    sprintf (command, "./test-process lock_db %d %s &",
              timeout_ms, lock_filename);
     system (command);
 
@@ -1778,7 +1778,7 @@ START_TEST(test_manager_enabled_event)
                       G_CALLBACK (on_enabled_event), &account_id);
 
     /* this command will enable MyService (which is of type e-mail) */
-    sprintf (command, "test-process enabled_event %d", account->id);
+    sprintf (command, "./test-process enabled_event %d", account->id);
     system (command);
 
     source_id = g_timeout_add_seconds (2, enabled_event_test_failed, NULL);
@@ -1791,7 +1791,7 @@ START_TEST(test_manager_enabled_event)
     account_id = 0;
 
     /* now disable the account. This also should trigger the enabled-event. */
-    sprintf (command, "test-process enabled_event2 %d", account->id);
+    sprintf (command, "./test-process enabled_event2 %d", account->id);
     system (command);
 
     source_id = g_timeout_add_seconds (2, enabled_event_test_failed, NULL);
@@ -2013,7 +2013,7 @@ START_TEST(test_open_locked)
     timeout_ms =
         MAX_SQLITE_BUSY_LOOP_TIME_MS + MAX_SQLITE_BUSY_LOOP_TIME_MS / 2;
 
-    sprintf (command, "test-process lock_db %d %s &",
+    sprintf (command, "./test-process lock_db %d %s &",
              timeout_ms, lock_filename);
     system (command);
 
@@ -2078,7 +2078,7 @@ START_TEST(test_read_locked)
     timeout_ms =
         MAX_SQLITE_BUSY_LOOP_TIME_MS + MAX_SQLITE_BUSY_LOOP_TIME_MS / 2;
 
-    sprintf (command, "test-process lock_db %d %s &",
+    sprintf (command, "./test-process lock_db %d %s &",
              timeout_ms, lock_filename);
     system (command);
 
@@ -2208,10 +2208,10 @@ START_TEST(test_db_access)
                       G_CALLBACK (on_account_created_with_db_locked), NULL);
 
     /* create an account with the e-mail service type enabled */
-    system ("test-process create3 myprovider MyAccountName");
+    system ("./test-process create3 myprovider MyAccountName");
 
     /* lock the DB for the specified timeout */
-    sprintf (command, "test-process lock_db %d %s &",
+    sprintf (command, "./test-process lock_db %d %s &",
              timeout_ms, lock_filename);
     system (command);
 
