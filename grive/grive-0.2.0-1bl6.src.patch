--- origsrc/grive-0.2.0/CMakeLists.txt	2012-07-08 00:43:18.000000000 +0900
+++ src/grive-0.2.0/CMakeLists.txt	2015-05-23 09:42:40.152981600 +0900
@@ -1,6 +1,16 @@
+project(grive)
+
 cmake_minimum_required(VERSION 2.8)
 
 set( GRIVE_VERSION "0.2.0" )
 
 add_subdirectory( libgrive )
 add_subdirectory( grive )
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+SET(VERSION "0")
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/${PROJECT_NAME}.pc.in ${CMAKE_BINARY_DIR}/${PROJECT_NAME}.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/${PROJECT_NAME}.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/grive-0.2.0/cmake/Modules/FindJSONC.cmake	2012-07-08 00:43:18.000000000 +0900
+++ src/grive-0.2.0/cmake/Modules/FindJSONC.cmake	2015-05-23 09:39:18.391262900 +0900
@@ -6,8 +6,8 @@
 #  JSONC_INCLUDE_DIR - The JSON-C include directory.
 #  JSONC_LIBRARY     - The JSON-C library to link against.
 
-FIND_PATH(JSONC_INCLUDE_DIR json/json.h)
-FIND_LIBRARY(JSONC_LIBRARY NAMES json)
+FIND_PATH(JSONC_INCLUDE_DIR json-c/json.h)
+FIND_LIBRARY(JSONC_LIBRARY NAMES json-c)
 
 IF (JSONC_INCLUDE_DIR AND JSONC_LIBRARY)
    SET(JSONC_FOUND TRUE)
--- origsrc/grive-0.2.0/grive.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/grive-0.2.0/grive.pc.in	2015-05-23 09:42:00.902981600 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: grive
+Description: Open source Linux client for Google Drive
+Version: @VERSION@
+Libs: -L${libdir} -lgrive
+Cflags: -I${includedir}
--- origsrc/grive-0.2.0/libgrive/CMakeLists.txt	2012-07-08 00:43:18.000000000 +0900
+++ src/grive-0.2.0/libgrive/CMakeLists.txt	2015-05-23 09:39:18.391262900 +0900
@@ -1,5 +1,7 @@
 project(libgrive)
 
+set(CMAKE_CXX_FLAGS "-mcmodel=large")
+
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")
 
 find_package(LibGcrypt REQUIRED)
@@ -9,7 +11,9 @@ find_package(EXPAT REQUIRED)
 find_package(Boost 1.40.0 COMPONENTS filesystem system REQUIRED)
 find_package(BFD)
 find_package(CppUnit)
+if ( NOT CYGWIN )
 find_package(Iberty)
+endif ( NOT CYGWIN )
 find_package(ZLIB)
 
 # additional headers if build unit tests
@@ -18,14 +22,14 @@ IF ( CPPUNIT_FOUND )
 ENDIF ( CPPUNIT_FOUND )
 
 # build bfd classes if libbfd is found
-if ( BFD_FOUND )
+if ( BFD_FOUND AND NOT CYGWIN)
 	set( OPT_LIBS	${DL_LIBRARY} ${BFD_LIBRARY} )
 	file( GLOB OPT_SRC
 		src/bfd/*.cc
 	)
 	add_definitions( -DHAVE_BFD )
 	
-endif ( BFD_FOUND )
+endif ( BFD_FOUND AND NOT CYGWIN )
 
 if ( IBERTY_FOUND )
 	set( OPT_LIBS	${OPT_LIBS}	${IBERTY_LIBRARY} )
@@ -73,8 +77,7 @@ add_definitions(
 	-DSRC_DIR="${libgrive_SOURCE_DIR}/src"
 )
 
-#add_library( grive SHARED ${LIBGRIVE_SRC} ${OPT_SRC} )
-add_library( grive STATIC ${LIBGRIVE_SRC} ${OPT_SRC} )
+add_library( grive SHARED ${LIBGRIVE_SRC} ${OPT_SRC} )
 
 target_link_libraries( grive
 	${CURL_LIBRARIES}
@@ -87,9 +90,9 @@ target_link_libraries( grive
 	${OPT_LIBS}
 )
 
-#set_target_properties(grive PROPERTIES
-#    SOVERSION 0 VERSION ${GRIVE_VERSION}
-#)
+set_target_properties(grive PROPERTIES
+    SOVERSION 0 VERSION ${GRIVE_VERSION}
+)
 
 #set_target_properties(grive grive-static PROPERTIES OUTPUT_NAME grive)
 
@@ -98,13 +101,12 @@ else()
 	set ( LIB_INSTALL_DIR ${CMAKE_INSTALL_PREFIX}/lib )
 endif()
 
-# don't install libgrive for now
-#install(TARGETS grive LIBRARY DESTINATION ${LIB_INSTALL_DIR} )
-#install(TARGETS grive ARCHIVE DESTINATION ${LIB_INSTALL_DIR} )
-#install(FILES ${DRIVE_HEADERS} DESTINATION include/grive/drive)
-#install(FILES ${PROTOCOL_HEADERS} DESTINATION include/grive/protocol)
-#install(FILES ${UTIL_HEADERS} DESTINATION include/grive/util)
-#install(FILES ${XML_HEADERS} DESTINATION include/grive/xml)
+install(TARGETS grive RUNTIME DESTINATION bin )
+install(TARGETS grive ARCHIVE DESTINATION ${LIB_INSTALL_DIR} )
+install(FILES ${DRIVE_HEADERS} DESTINATION include/grive/drive)
+install(FILES ${PROTOCOL_HEADERS} DESTINATION include/grive/protocol)
+install(FILES ${UTIL_HEADERS} DESTINATION include/grive/util)
+install(FILES ${XML_HEADERS} DESTINATION include/grive/xml)
 
 IF ( CPPUNIT_FOUND )
 	message("-- Building unitary tests along with the library and the binary")
--- origsrc/grive-0.2.0/libgrive/src/protocol/Json.cc	2012-07-08 00:43:18.000000000 +0900
+++ src/grive-0.2.0/libgrive/src/protocol/Json.cc	2015-05-23 09:39:18.391262900 +0900
@@ -21,8 +21,8 @@
 
 #include "util/StdioFile.hh"
 
-#include <json/json_tokener.h>
-#include <json/linkhash.h>
+#include <json-c/json_tokener.h>
+#include <json-c/linkhash.h>
 
 #include <cassert>
 #include <cstring>
