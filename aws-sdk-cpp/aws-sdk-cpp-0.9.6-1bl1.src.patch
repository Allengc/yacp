diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/CMakeLists.txt src/aws-sdk-cpp-0.9.6/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/CMakeLists.txt	2016-03-08 16:26:25.000000000 +0900
@@ -702,7 +702,7 @@ set(CMAKE_CONFIGURATION_TYPES
 add_definitions(-DJSON_USE_EXCEPTION=0)
 
 if(NOT PLATFORM_WINDOWS AND NOT PLATFORM_DURANGO)
-    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
+    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")
     SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-exceptions")
     if(NOT BUILD_SHARED_LIBS)
         SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-access-management/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-access-management/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-access-management/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-access-management/CMakeLists.txt	2016-03-08 21:39:31.000000000 +0900
@@ -40,10 +40,11 @@ endif()
 
 add_library(aws-cpp-sdk-access-management ${LIBTYPE} ${ACCESS_MANAGEMENT_SRC})
 target_link_libraries(aws-cpp-sdk-access-management aws-cpp-sdk-cognito-identity aws-cpp-sdk-iam)
+set_target_properties(aws-cpp-sdk-access-management PROPERTIES SOVERSION 0)
 
 install (TARGETS aws-cpp-sdk-access-management 
-         ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-         LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-         RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+         ARCHIVE DESTINATION lib
+         LIBRARY DESTINATION lib
+         RUNTIME DESTINATION bin)
 
 install (FILES ${AWS_ACCESS_MANAGEMENT_HEADERS} DESTINATION include/aws/access-management)
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-autoscaling/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-autoscaling/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-autoscaling/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-autoscaling/CMakeLists.txt	2016-03-08 21:40:12.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-autoscaling)
 
   add_library(aws-cpp-sdk-autoscaling ${LIBTYPE} ${AUTOSCALING_SRC})
   target_link_libraries(aws-cpp-sdk-autoscaling aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-autoscaling PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-autoscaling)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-autoscaling
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_AUTOSCALING_HEADERS} DESTINATION include/aws/autoscaling)
   install (FILES ${AWS_AUTOSCALING_MODEL_HEADERS} DESTINATION include/aws/autoscaling/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cloudformation/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cloudformation/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cloudformation/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cloudformation/CMakeLists.txt	2016-03-08 21:40:43.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-cloudformation)
 
   add_library(aws-cpp-sdk-cloudformation ${LIBTYPE} ${CLOUDFORMATION_SRC})
   target_link_libraries(aws-cpp-sdk-cloudformation aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-cloudformation PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-cloudformation)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-cloudformation
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_CLOUDFORMATION_HEADERS} DESTINATION include/aws/cloudformation)
   install (FILES ${AWS_CLOUDFORMATION_MODEL_HEADERS} DESTINATION include/aws/cloudformation/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cloudfront/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cloudfront/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cloudfront/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cloudfront/CMakeLists.txt	2016-03-08 21:41:08.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-cloudfront)
 
   add_library(aws-cpp-sdk-cloudfront ${LIBTYPE} ${CLOUDFRONT_SRC})
   target_link_libraries(aws-cpp-sdk-cloudfront aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-cloudfront PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-cloudfront)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-cloudfront
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_CLOUDFRONT_HEADERS} DESTINATION include/aws/cloudfront)
   install (FILES ${AWS_CLOUDFRONT_MODEL_HEADERS} DESTINATION include/aws/cloudfront/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-codedeploy/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-codedeploy/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-codedeploy/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-codedeploy/CMakeLists.txt	2016-03-08 21:41:36.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-codedeploy)
 
   add_library(aws-cpp-sdk-codedeploy ${LIBTYPE} ${CODEDEPLOY_SRC})
   target_link_libraries(aws-cpp-sdk-codedeploy aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-codedeploy PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-codedeploy)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-codedeploy
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_CODEDEPLOY_HEADERS} DESTINATION include/aws/codedeploy)
   install (FILES ${AWS_CODEDEPLOY_MODEL_HEADERS} DESTINATION include/aws/codedeploy/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cognito-identity/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cognito-identity/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cognito-identity/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cognito-identity/CMakeLists.txt	2016-03-08 21:41:57.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-cognito-identity)
 
   add_library(aws-cpp-sdk-cognito-identity ${LIBTYPE} ${COGNITO-IDENTITY_SRC})
   target_link_libraries(aws-cpp-sdk-cognito-identity aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-cognito-identity PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-cognito-identity)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-cognito-identity
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_COGNITO-IDENTITY_HEADERS} DESTINATION include/aws/cognito-identity)
   install (FILES ${AWS_COGNITO-IDENTITY_MODEL_HEADERS} DESTINATION include/aws/cognito-identity/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cognito-sync/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cognito-sync/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cognito-sync/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-cognito-sync/CMakeLists.txt	2016-03-08 21:42:19.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-cognito-sync)
 
   add_library(aws-cpp-sdk-cognito-sync ${LIBTYPE} ${COGNITO-SYNC_SRC})
   target_link_libraries(aws-cpp-sdk-cognito-sync aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-cognito-sync PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-cognito-sync)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-cognito-sync
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_COGNITO-SYNC_HEADERS} DESTINATION include/aws/cognito-sync)
   install (FILES ${AWS_COGNITO-SYNC_MODEL_HEADERS} DESTINATION include/aws/cognito-sync/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-core/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-core/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-core/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-core/CMakeLists.txt	2016-03-08 21:42:28.000000000 +0900
@@ -317,10 +317,11 @@ if(PLATFORM_ANDROID)
 endif()
 
 target_link_libraries(aws-cpp-sdk-core ${PLATFORM_DEP_LIBS} ${CRYPTO_LIBS} ${CLIENT_LIBS})
+set_target_properties(aws-cpp-sdk-core PROPERTIES SOVERSION 0)
 
-install (TARGETS aws-cpp-sdk-core ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-                                  LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-				                  RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+install (TARGETS aws-cpp-sdk-core ARCHIVE DESTINATION lib
+                                  LIBRARY DESTINATION lib
+				                  RUNTIME DESTINATION bin)
 
 install (FILES ${AWS_HEADERS} DESTINATION include/aws/core)
 install (FILES ${AWS_AUTH_HEADERS} DESTINATION include/aws/core/auth)
@@ -365,4 +366,3 @@ elseif(ENABLE_COMMONCRYPTO_ENCRYPTION)
 elseif(ENABLE_ORBIS_ENCRYPTION)
   install (FILES ${UTILS_CRYPTO_ORBIS_HEADERS} DESTINATION include/aws/core/utils/crypto/orbis)
 endif()
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-core/source/utils/OSVersionInfo.cpp src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-core/source/utils/OSVersionInfo.cpp
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-core/source/utils/OSVersionInfo.cpp	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-core/source/utils/OSVersionInfo.cpp	2016-03-08 16:26:46.000000000 +0900
@@ -78,7 +78,7 @@ Aws::String OSVersionInfo::ComputeOSVers
 
     return Aws::String("Android/Unknown");
 
-#elif __linux__ || __APPLE__
+#elif __linux__ || __APPLE__ || __CYGWIN__
     Aws::String kernelName = getSysCommandOutput("uname -s 2>&1");
     Aws::String releaseAndMachineName = getSysCommandOutput("uname -rm 2>&1");
 
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-datapipeline/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-datapipeline/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-datapipeline/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-datapipeline/CMakeLists.txt	2016-03-08 21:42:52.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-datapipeline)
 
   add_library(aws-cpp-sdk-datapipeline ${LIBTYPE} ${DATAPIPELINE_SRC})
   target_link_libraries(aws-cpp-sdk-datapipeline aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-datapipeline PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-datapipeline)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-datapipeline
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_DATAPIPELINE_HEADERS} DESTINATION include/aws/datapipeline)
   install (FILES ${AWS_DATAPIPELINE_MODEL_HEADERS} DESTINATION include/aws/datapipeline/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-dynamodb/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-dynamodb/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-dynamodb/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-dynamodb/CMakeLists.txt	2016-03-08 21:43:13.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-dynamodb)
 
   add_library(aws-cpp-sdk-dynamodb ${LIBTYPE} ${DYNAMODB_SRC})
   target_link_libraries(aws-cpp-sdk-dynamodb aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-dynamodb PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-dynamodb)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-dynamodb
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_DYNAMODB_HEADERS} DESTINATION include/aws/dynamodb)
   install (FILES ${AWS_DYNAMODB_MODEL_HEADERS} DESTINATION include/aws/dynamodb/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-ec2/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-ec2/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-ec2/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-ec2/CMakeLists.txt	2016-03-08 21:43:33.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-ec2)
 
   add_library(aws-cpp-sdk-ec2 ${LIBTYPE} ${EC2_SRC})
   target_link_libraries(aws-cpp-sdk-ec2 aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-ec2 PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-ec2)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-ec2
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_EC2_HEADERS} DESTINATION include/aws/ec2)
   install (FILES ${AWS_EC2_MODEL_HEADERS} DESTINATION include/aws/ec2/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-ecs/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-ecs/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-ecs/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-ecs/CMakeLists.txt	2016-03-08 21:43:52.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-ecs)
 
   add_library(aws-cpp-sdk-ecs ${LIBTYPE} ${ECS_SRC})
   target_link_libraries(aws-cpp-sdk-ecs aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-ecs PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-ecs)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-ecs
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_ECS_HEADERS} DESTINATION include/aws/ecs)
   install (FILES ${AWS_ECS_MODEL_HEADERS} DESTINATION include/aws/ecs/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticache/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticache/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticache/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticache/CMakeLists.txt	2016-03-08 21:44:15.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-elasticache)
 
   add_library(aws-cpp-sdk-elasticache ${LIBTYPE} ${ELASTICACHE_SRC})
   target_link_libraries(aws-cpp-sdk-elasticache aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-elasticache PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-elasticache)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-elasticache
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_ELASTICACHE_HEADERS} DESTINATION include/aws/elasticache)
   install (FILES ${AWS_ELASTICACHE_MODEL_HEADERS} DESTINATION include/aws/elasticache/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticbeanstalk/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticbeanstalk/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticbeanstalk/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticbeanstalk/CMakeLists.txt	2016-03-08 21:44:39.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-elasticbeanstalk)
 
   add_library(aws-cpp-sdk-elasticbeanstalk ${LIBTYPE} ${ELASTICBEANSTALK_SRC})
   target_link_libraries(aws-cpp-sdk-elasticbeanstalk aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-elasticbeanstalk PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-elasticbeanstalk)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-elasticbeanstalk
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_ELASTICBEANSTALK_HEADERS} DESTINATION include/aws/elasticbeanstalk)
   install (FILES ${AWS_ELASTICBEANSTALK_MODEL_HEADERS} DESTINATION include/aws/elasticbeanstalk/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticfilesystem/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticfilesystem/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticfilesystem/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticfilesystem/CMakeLists.txt	2016-03-08 21:45:06.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-elasticfilesystem)
 
   add_library(aws-cpp-sdk-elasticfilesystem ${LIBTYPE} ${ELASTICFILESYSTEM_SRC})
   target_link_libraries(aws-cpp-sdk-elasticfilesystem aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-elasticfilesystem PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-elasticfilesystem)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-elasticfilesystem
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_ELASTICFILESYSTEM_HEADERS} DESTINATION include/aws/elasticfilesystem)
   install (FILES ${AWS_ELASTICFILESYSTEM_MODEL_HEADERS} DESTINATION include/aws/elasticfilesystem/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticloadbalancing/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticloadbalancing/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticloadbalancing/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticloadbalancing/CMakeLists.txt	2016-03-08 21:45:26.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-elasticloadbalancing
 
   add_library(aws-cpp-sdk-elasticloadbalancing ${LIBTYPE} ${ELASTICLOADBALANCING_SRC})
   target_link_libraries(aws-cpp-sdk-elasticloadbalancing aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-elasticloadbalancing PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-elasticloadbalancing
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-elasticloadbalancing
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_ELASTICLOADBALANCING_HEADERS} DESTINATION include/aws/elasticloadbalancing)
   install (FILES ${AWS_ELASTICLOADBALANCING_MODEL_HEADERS} DESTINATION include/aws/elasticloadbalancing/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticmapreduce/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticmapreduce/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticmapreduce/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elasticmapreduce/CMakeLists.txt	2016-03-08 21:45:46.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-elasticmapreduce)
 
   add_library(aws-cpp-sdk-elasticmapreduce ${LIBTYPE} ${ELASTICMAPREDUCE_SRC})
   target_link_libraries(aws-cpp-sdk-elasticmapreduce aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-elasticmapreduce PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-elasticmapreduce)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-elasticmapreduce
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_ELASTICMAPREDUCE_HEADERS} DESTINATION include/aws/elasticmapreduce)
   install (FILES ${AWS_ELASTICMAPREDUCE_MODEL_HEADERS} DESTINATION include/aws/elasticmapreduce/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elastictranscoder/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elastictranscoder/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elastictranscoder/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-elastictranscoder/CMakeLists.txt	2016-03-08 21:46:08.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-elastictranscoder)
 
   add_library(aws-cpp-sdk-elastictranscoder ${LIBTYPE} ${ELASTICTRANSCODER_SRC})
   target_link_libraries(aws-cpp-sdk-elastictranscoder aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-elastictranscoder PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-elastictranscoder)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-elastictranscoder
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_ELASTICTRANSCODER_HEADERS} DESTINATION include/aws/elastictranscoder)
   install (FILES ${AWS_ELASTICTRANSCODER_MODEL_HEADERS} DESTINATION include/aws/elastictranscoder/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-email/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-email/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-email/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-email/CMakeLists.txt	2016-03-08 21:46:28.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-email)
 
   add_library(aws-cpp-sdk-email ${LIBTYPE} ${EMAIL_SRC})
   target_link_libraries(aws-cpp-sdk-email aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-email PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-email)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-email
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_EMAIL_HEADERS} DESTINATION include/aws/email)
   install (FILES ${AWS_EMAIL_MODEL_HEADERS} DESTINATION include/aws/email/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-glacier/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-glacier/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-glacier/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-glacier/CMakeLists.txt	2016-03-08 21:46:47.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-glacier)
 
   add_library(aws-cpp-sdk-glacier ${LIBTYPE} ${GLACIER_SRC})
   target_link_libraries(aws-cpp-sdk-glacier aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-glacier PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-glacier)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-glacier
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_GLACIER_HEADERS} DESTINATION include/aws/glacier)
   install (FILES ${AWS_GLACIER_MODEL_HEADERS} DESTINATION include/aws/glacier/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-iam/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-iam/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-iam/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-iam/CMakeLists.txt	2016-03-08 21:47:09.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-iam)
 
   add_library(aws-cpp-sdk-iam ${LIBTYPE} ${IAM_SRC})
   target_link_libraries(aws-cpp-sdk-iam aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-iam PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-iam)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-iam
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_IAM_HEADERS} DESTINATION include/aws/iam)
   install (FILES ${AWS_IAM_MODEL_HEADERS} DESTINATION include/aws/iam/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-identity-management/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-identity-management/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-identity-management/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-identity-management/CMakeLists.txt	2016-03-08 21:47:32.000000000 +0900
@@ -44,11 +44,12 @@ endif()
 
 add_library(aws-cpp-sdk-identity-management ${LIBTYPE} ${IDENTITY_MGMT_SRC})
 target_link_libraries(aws-cpp-sdk-identity-management aws-cpp-sdk-cognito-identity)
+set_target_properties(aws-cpp-sdk-identity-management PROPERTIES SOVERSION 0)
 
 install (TARGETS aws-cpp-sdk-identity-management 
-         ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-         LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-         RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+         ARCHIVE DESTINATION lib
+         LIBRARY DESTINATION lib
+         RUNTIME DESTINATION bin)
 
 install (FILES ${AWS_IDENTITY_HEADERS} DESTINATION include/aws/identity-management)
 install (FILES ${AWS_IDENTITY_PROVIDER_HEADERS} DESTINATION include/aws/identity-management/auth)
\ No newline at end of file
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-kinesis/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-kinesis/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-kinesis/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-kinesis/CMakeLists.txt	2016-03-08 21:47:53.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-kinesis)
 
   add_library(aws-cpp-sdk-kinesis ${LIBTYPE} ${KINESIS_SRC})
   target_link_libraries(aws-cpp-sdk-kinesis aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-kinesis PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-kinesis)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-kinesis
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_KINESIS_HEADERS} DESTINATION include/aws/kinesis)
   install (FILES ${AWS_KINESIS_MODEL_HEADERS} DESTINATION include/aws/kinesis/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-kms/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-kms/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-kms/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-kms/CMakeLists.txt	2016-03-08 21:48:13.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-kms)
 
   add_library(aws-cpp-sdk-kms ${LIBTYPE} ${KMS_SRC})
   target_link_libraries(aws-cpp-sdk-kms aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-kms PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-kms)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-kms
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_KMS_HEADERS} DESTINATION include/aws/kms)
   install (FILES ${AWS_KMS_MODEL_HEADERS} DESTINATION include/aws/kms/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-lambda/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-lambda/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-lambda/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-lambda/CMakeLists.txt	2016-03-08 21:48:31.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-lambda)
 
   add_library(aws-cpp-sdk-lambda ${LIBTYPE} ${LAMBDA_SRC})
   target_link_libraries(aws-cpp-sdk-lambda aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-lambda PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-lambda)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-lambda
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_LAMBDA_HEADERS} DESTINATION include/aws/lambda)
   install (FILES ${AWS_LAMBDA_MODEL_HEADERS} DESTINATION include/aws/lambda/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-logs/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-logs/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-logs/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-logs/CMakeLists.txt	2016-03-08 21:48:51.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-logs)
 
   add_library(aws-cpp-sdk-logs ${LIBTYPE} ${LOGS_SRC})
   target_link_libraries(aws-cpp-sdk-logs aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-logs PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-logs)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-logs
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_LOGS_HEADERS} DESTINATION include/aws/logs)
   install (FILES ${AWS_LOGS_MODEL_HEADERS} DESTINATION include/aws/logs/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-mobileanalytics/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-mobileanalytics/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-mobileanalytics/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-mobileanalytics/CMakeLists.txt	2016-03-08 21:49:10.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-mobileanalytics)
 
   add_library(aws-cpp-sdk-mobileanalytics ${LIBTYPE} ${MOBILEANALYTICS_SRC})
   target_link_libraries(aws-cpp-sdk-mobileanalytics aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-mobileanalytics PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-mobileanalytics)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-mobileanalytics
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_MOBILEANALYTICS_HEADERS} DESTINATION include/aws/mobileanalytics)
   install (FILES ${AWS_MOBILEANALYTICS_MODEL_HEADERS} DESTINATION include/aws/mobileanalytics/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-monitoring/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-monitoring/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-monitoring/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-monitoring/CMakeLists.txt	2016-03-08 21:49:30.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-monitoring)
 
   add_library(aws-cpp-sdk-monitoring ${LIBTYPE} ${MONITORING_SRC})
   target_link_libraries(aws-cpp-sdk-monitoring aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-monitoring PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-monitoring)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-monitoring
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_MONITORING_HEADERS} DESTINATION include/aws/monitoring)
   install (FILES ${AWS_MONITORING_MODEL_HEADERS} DESTINATION include/aws/monitoring/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-opsworks/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-opsworks/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-opsworks/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-opsworks/CMakeLists.txt	2016-03-08 21:49:49.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-opsworks)
 
   add_library(aws-cpp-sdk-opsworks ${LIBTYPE} ${OPSWORKS_SRC})
   target_link_libraries(aws-cpp-sdk-opsworks aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-opsworks PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-opsworks)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-opsworks
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_OPSWORKS_HEADERS} DESTINATION include/aws/opsworks)
   install (FILES ${AWS_OPSWORKS_MODEL_HEADERS} DESTINATION include/aws/opsworks/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-queues/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-queues/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-queues/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-queues/CMakeLists.txt	2016-03-08 21:50:09.000000000 +0900
@@ -44,11 +44,12 @@ endif()
 
 add_library(aws-cpp-sdk-queues ${LIBTYPE} ${QUEUES_SRC})
 target_link_libraries(aws-cpp-sdk-queues aws-cpp-sdk-sqs)
+set_target_properties(aws-cpp-sdk-queues PROPERTIES SOVERSION 0)
 
 install (TARGETS aws-cpp-sdk-queues
-         ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-         LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-         RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+         ARCHIVE DESTINATION lib
+         LIBRARY DESTINATION lib
+         RUNTIME DESTINATION bin)
 
 install (FILES ${AWS_QUEUES_HEADERS} DESTINATION include/aws/queues)
 install (FILES ${AWS_SQS_QUEUES_HEADERS} DESTINATION include/aws/queues/sqs)
\ No newline at end of file
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-rds/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-rds/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-rds/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-rds/CMakeLists.txt	2016-03-08 21:50:40.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-rds)
 
   add_library(aws-cpp-sdk-rds ${LIBTYPE} ${RDS_SRC})
   target_link_libraries(aws-cpp-sdk-rds aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-rds PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-rds)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-rds
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_RDS_HEADERS} DESTINATION include/aws/rds)
   install (FILES ${AWS_RDS_MODEL_HEADERS} DESTINATION include/aws/rds/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-redshift/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-redshift/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-redshift/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-redshift/CMakeLists.txt	2016-03-08 21:51:00.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-redshift)
 
   add_library(aws-cpp-sdk-redshift ${LIBTYPE} ${REDSHIFT_SRC})
   target_link_libraries(aws-cpp-sdk-redshift aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-redshift PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-redshift)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-redshift
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_REDSHIFT_HEADERS} DESTINATION include/aws/redshift)
   install (FILES ${AWS_REDSHIFT_MODEL_HEADERS} DESTINATION include/aws/redshift/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-s3/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-s3/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-s3/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-s3/CMakeLists.txt	2016-03-08 21:51:18.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-s3)
 
   add_library(aws-cpp-sdk-s3 ${LIBTYPE} ${S3_SRC})
   target_link_libraries(aws-cpp-sdk-s3 aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-s3 PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-s3)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-s3
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_S3_HEADERS} DESTINATION include/aws/s3)
   install (FILES ${AWS_S3_MODEL_HEADERS} DESTINATION include/aws/s3/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sdb/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sdb/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sdb/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sdb/CMakeLists.txt	2016-03-08 21:51:37.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-sdb)
 
   add_library(aws-cpp-sdk-sdb ${LIBTYPE} ${SDB_SRC})
   target_link_libraries(aws-cpp-sdk-sdb aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-sdb PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-sdb)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-sdb
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_SDB_HEADERS} DESTINATION include/aws/sdb)
   install (FILES ${AWS_SDB_MODEL_HEADERS} DESTINATION include/aws/sdb/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sns/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sns/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sns/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sns/CMakeLists.txt	2016-03-08 21:51:55.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-sns)
 
   add_library(aws-cpp-sdk-sns ${LIBTYPE} ${SNS_SRC})
   target_link_libraries(aws-cpp-sdk-sns aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-sns PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-sns)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-sns
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_SNS_HEADERS} DESTINATION include/aws/sns)
   install (FILES ${AWS_SNS_MODEL_HEADERS} DESTINATION include/aws/sns/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sqs/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sqs/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sqs/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sqs/CMakeLists.txt	2016-03-08 21:52:15.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-sqs)
 
   add_library(aws-cpp-sdk-sqs ${LIBTYPE} ${SQS_SRC})
   target_link_libraries(aws-cpp-sdk-sqs aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-sqs PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-sqs)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-sqs
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_SQS_HEADERS} DESTINATION include/aws/sqs)
   install (FILES ${AWS_SQS_MODEL_HEADERS} DESTINATION include/aws/sqs/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sts/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sts/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sts/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-sts/CMakeLists.txt	2016-03-08 21:52:36.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-sts)
 
   add_library(aws-cpp-sdk-sts ${LIBTYPE} ${STS_SRC})
   target_link_libraries(aws-cpp-sdk-sts aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-sts PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-sts)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-sts
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_STS_HEADERS} DESTINATION include/aws/sts)
   install (FILES ${AWS_STS_MODEL_HEADERS} DESTINATION include/aws/sts/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-swf/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-swf/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-swf/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-swf/CMakeLists.txt	2016-03-08 21:52:55.000000000 +0900
@@ -47,6 +47,7 @@ project(aws-cpp-sdk-swf)
 
   add_library(aws-cpp-sdk-swf ${LIBTYPE} ${SWF_SRC})
   target_link_libraries(aws-cpp-sdk-swf aws-cpp-sdk-core)
+  set_target_properties(aws-cpp-sdk-swf PROPERTIES SOVERSION 0)
 
   if(NOT MSVC)
     add_definitions(-std=c++11)
@@ -56,10 +57,9 @@ project(aws-cpp-sdk-swf)
   #add_test(run${metadata.namespace}Tests run${metadata.namespace}Tests)
 
   install (TARGETS aws-cpp-sdk-swf
-           ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-           RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+           ARCHIVE DESTINATION lib
+           LIBRARY DESTINATION lib
+           RUNTIME DESTINATION bin)
 
   install (FILES ${AWS_SWF_HEADERS} DESTINATION include/aws/swf)
   install (FILES ${AWS_SWF_MODEL_HEADERS} DESTINATION include/aws/swf/model)
-
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-transfer/CMakeLists.txt src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-transfer/CMakeLists.txt
--- origsrc/aws-sdk-cpp-0.9.6/aws-cpp-sdk-transfer/CMakeLists.txt	2016-02-05 08:20:00.000000000 +0900
+++ src/aws-sdk-cpp-0.9.6/aws-cpp-sdk-transfer/CMakeLists.txt	2016-03-08 21:53:15.000000000 +0900
@@ -41,10 +41,11 @@ endif()
 
 add_library(aws-cpp-sdk-transfer ${LIBTYPE} ${ALL_TRANSFER})
 target_link_libraries(aws-cpp-sdk-transfer aws-cpp-sdk-s3)
+set_target_properties(aws-cpp-sdk-transfer PROPERTIES SOVERSION 0)
 
 install (TARGETS aws-cpp-sdk-transfer
-         ARCHIVE DESTINATION ${ARCHIVE_DIRECTORY}/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-         LIBRARY DESTINATION lib/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME}
-         RUNTIME DESTINATION bin/${SDK_INSTALL_BINARY_PREFIX}/\${CMAKE_INSTALL_CONFIG_NAME})
+         ARCHIVE DESTINATION lib
+         LIBRARY DESTINATION lib
+         RUNTIME DESTINATION bin)
 
 install (FILES ${ALL_TRANSFER_HEADERS} DESTINATION include/aws/transfer)
