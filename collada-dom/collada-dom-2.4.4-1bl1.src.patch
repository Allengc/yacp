diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/collada-dom-2.4.4/CMakeLists.txt src/collada-dom-2.4.4/CMakeLists.txt
--- origsrc/collada-dom-2.4.4/CMakeLists.txt	2015-07-01 09:26:22.000000000 +0900
+++ src/collada-dom-2.4.4/CMakeLists.txt	2015-11-14 12:03:05.996822900 +0900
@@ -127,7 +127,7 @@ else()
   set(STDC_LIBRARY)
 endif()
 
-if( APPLE OR ${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
+if( CYGWIN OR APPLE OR ${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
   # apple doesn't have 64bit versions of file opening functions, so add them
   add_definitions("-Dfopen64=fopen")
   add_definitions("-Dfseeko64=fseeko")
@@ -181,7 +181,7 @@ foreach(ldir ${Boost_LIBRARY_DIRS})
   set(COLLADA_DOM_BOOST_LIB_DIRS "${COLLADA_DOM_BOOST_LIB_DIRS} -L${ldir}")
 endforeach()
 
-if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
+if((CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX) AND NOT CYGWIN)
   set(EXTRA_COMPILE_FLAGS "${COLLADA_DOM_EXTERNAL_FLAGS} -DCOLLADA_DOM_NAMESPACE -fPIC")
 else()
   set(EXTRA_COMPILE_FLAGS "${COLLADA_DOM_EXTERNAL_FLAGS} -DCOLLADA_DOM_NAMESPACE")
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/collada-dom-2.4.4/dom/CMakeLists.txt src/collada-dom-2.4.4/dom/CMakeLists.txt
--- origsrc/collada-dom-2.4.4/dom/CMakeLists.txt	2015-07-01 09:26:22.000000000 +0900
+++ src/collada-dom-2.4.4/dom/CMakeLists.txt	2015-11-14 12:03:06.012447900 +0900
@@ -37,7 +37,7 @@ set_target_properties(collada-dom PROPER
   CLEAN_DIRECT_OUTPUT 1
   SOVERSION 0 # always have it 0 since we're including the soversion as part of the library name
   VERSION ${COLLADA_DOM_VERSION})
-if( MSVC )
+if( MSVC OR CYGWIN )
   install(TARGETS collada-dom EXPORT collada-dom-targets RUNTIME DESTINATION bin COMPONENT ${COMPONENT_PREFIX}-base LIBRARY DESTINATION bin COMPONENT ${COMPONENT_PREFIX}-base ARCHIVE DESTINATION lib${LIB_SUFFIX} COMPONENT ${COMPONENT_PREFIX}-base)
 else()
   install(TARGETS collada-dom EXPORT collada-dom-targets DESTINATION lib${LIB_SUFFIX} COMPONENT ${COMPONENT_PREFIX}-base )
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/collada-dom-2.4.4/dom/src/dae/daeUtils.cpp src/collada-dom-2.4.4/dom/src/dae/daeUtils.cpp
--- origsrc/collada-dom-2.4.4/dom/src/dae/daeUtils.cpp	2015-07-01 09:26:22.000000000 +0900
+++ src/collada-dom-2.4.4/dom/src/dae/daeUtils.cpp	2015-11-14 12:03:06.012447900 +0900
@@ -152,7 +152,7 @@ char cdom::getFileSeparator() {
 const string& cdom::getSystemTmpDir() {
 #ifdef WIN32
     static string tmpDir = string(getenv("TMP")) + getFileSeparator();
-#elif defined(__linux__) || defined(__linux)
+#elif defined(__linux__) || defined(__linux) || defined(__CYGWIN__)
     static string tmpDir = "/tmp/";
 #elif defined __APPLE_CC__
 static string tmpDir = string(getenv("TMPDIR"));
@@ -171,7 +171,7 @@ string cdom::getRandomFileName() {
     std::string tmp(tmpnam(&tmpbuffer[0]));
 #ifdef WIN32
     randomSegment = tmp.substr(tmp.find_last_of('\\')+1);
-#elif defined(__linux__) || defined(__linux)
+#elif defined(__linux__) || defined(__linux) || defined(__CYGWIN__)
     randomSegment = tmp.substr(tmp.find_last_of('/')+1);
 #elif defined __APPLE_CC__
 	randomSegment = tmp.substr(tmp.find_last_of('/')+1);
