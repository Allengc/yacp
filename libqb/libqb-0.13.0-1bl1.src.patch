--- origsrc/libqb-0.13.0/configure.ac	2012-05-10 10:47:04.000000000 +0900
+++ src/libqb-0.13.0/configure.ac	2012-05-19 14:50:07.708382800 +0900
@@ -236,6 +236,11 @@ supports_sysv_mq="yes"
 supports_posix_mq="yes"
 AC_MSG_CHECKING([for os in ${host_os}])
 case "$host_os" in
+	*cygwin*)
+		AC_DEFINE_UNQUOTED([QB_CYGWIN], [1],
+				   [Compiling for Cygwin platform])
+		AC_MSG_RESULT([Cygwin])
+	;;
 	*linux*)
 		AC_DEFINE_UNQUOTED([QB_LINUX], [1],
 				   [Compiling for Linux platform])
--- origsrc/libqb-0.13.0/lib/Makefile.am	2012-05-10 19:47:12.000000000 +0900
+++ src/libqb-0.13.0/lib/Makefile.am	2012-05-19 22:59:45.021148500 +0900
@@ -59,7 +59,7 @@ lib_LTLIBRARIES		= libqb.la
 #    it as -version-info 2:0:0. This release has a new, but backwards
 #    incompatible interface.
 #
-libqb_la_LDFLAGS	= -version-info 13:0:13
+libqb_la_LDFLAGS	= -version-info 13:0:13 -no-undefined
 
 source_to_lint		= util.c hdb.c ringbuffer.c ringbuffer_helper.c \
 			  array.c loop.c loop_poll.c loop_job.c \
--- origsrc/libqb-0.13.0/lib/log.c	2012-03-07 19:09:15.000000000 +0900
+++ src/libqb-0.13.0/lib/log.c	2012-05-19 23:08:46.614898500 +0900
@@ -658,6 +658,7 @@ qb_log_filter_ctl(int32_t t, enum qb_log
 	return qb_log_filter_ctl2(t, c, type, text, LOG_EMERG, priority);
 }
 
+#if !defined(__CYGWIN__)
 #ifdef QB_HAVE_ATTRIBUTE_SECTION
 static int32_t
 _log_so_walk_callback(struct dl_phdr_info *info, size_t size, void *data)
@@ -698,6 +699,7 @@ done:
 	return 0;
 }
 #endif /* QB_HAVE_ATTRIBUTE_SECTION */
+#endif
 
 static void
 _log_target_state_set(struct qb_log_target *t, enum qb_log_target_state s)
@@ -740,7 +742,9 @@ qb_log_init(const char *name, int32_t fa
 	qb_log_dcs_init();
 #ifdef QB_HAVE_ATTRIBUTE_SECTION
 	qb_log_callsites_register(__start___verbose, __stop___verbose);
+#if !defined(__CYGWIN__)
 	dl_iterate_phdr(_log_so_walk_callback, NULL);
+#endif
 #endif /* QB_HAVE_ATTRIBUTE_SECTION */
 
 	conf[QB_LOG_STDERR].state = QB_LOG_STATE_DISABLED;
