diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/json-fortran-4.3.0/CMakeLists.txt src/json-fortran-4.3.0/CMakeLists.txt
--- origsrc/json-fortran-4.3.0/CMakeLists.txt	2015-12-06 06:05:05.000000000 +0900
+++ src/json-fortran-4.3.0/CMakeLists.txt	2016-05-02 16:44:34.243209100 +0900
@@ -82,7 +82,7 @@ endif ()
 # Put package export CMake files where they can be found
 # use `find_package ( jsonfortran-${CMAKE_Fortran_COMPILER_ID} <version> REQUIRED )`
 if (USE_GNU_INSTALL_CONVENTION)
-  set ( EXPORT_INSTALL_DIR "${INSTALL_LIB_DIR}/cmake/${PACKAGE_VERSION}" )
+  set ( EXPORT_INSTALL_DIR "${INSTALL_LIB_DIR}/cmake/${PROJECT_NAME}" )
 else ()
   set ( EXPORT_INSTALL_DIR "${PACKAGE_VERSION}/cmake" )
 endif ()
@@ -122,6 +122,8 @@ endif ()
 
 set ( LIB_NAME ${CMAKE_PROJECT_NAME} )
 add_library ( ${LIB_NAME}        SHARED ${JF_LIB_SRCS} )
+option ( ENABLE_STATIC "enable static" OFF)
+if ( ENABLE_STATIC )
 add_library ( ${LIB_NAME}-static STATIC ${JF_LIB_SRCS} )
 set_target_properties ( ${LIB_NAME}-static
   PROPERTIES
@@ -130,10 +132,10 @@ set_target_properties ( ${LIB_NAME}-stat
   VERSION ${VERSION}
   ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib
   Fortran_MODULE_DIRECTORY ${MODULE_DIR} )
+endif ()
 set_target_properties ( ${LIB_NAME}
   PROPERTIES
   OUTPUT_NAME ${LIB_NAME}
-  PREFIX lib
   SOVERSION ${VERSION_MAJOR}.${VERSION_MINOR}
   VERSION ${VERSION}
   LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib
@@ -323,16 +325,22 @@ endif ()
 # Perform the installation
 #-------------------------
 
-install ( TARGETS ${LIB_NAME} ${LIB_NAME}-static
+install ( TARGETS ${LIB_NAME}
+  EXPORT ${PACKAGE_NAME}-targets
+  RUNTIME DESTINATION bin
+  LIBRARY DESTINATION "${INSTALL_LIB_DIR}"
+  ARCHIVE DESTINATION "${INSTALL_LIB_DIR}" )
+if ( ENABLE_STATIC )
+install ( TARGETS ${LIB_NAME}-static
   EXPORT ${PACKAGE_NAME}-targets
+  RUNTIME DESTINATION bin
   LIBRARY DESTINATION "${INSTALL_LIB_DIR}"
   ARCHIVE DESTINATION "${INSTALL_LIB_DIR}" )
+endif()
 
 # Code to  fix the dylib install name on Mac.
 include ( cmake/fixupInstallNameDir.cmake )
 
-install ( DIRECTORY "${MODULE_DIR}/" DESTINATION  "${INSTALL_MOD_DIR}" )
-
 #------------------------------------------
 # Add portable unistall command to makefile
 #------------------------------------------
@@ -372,7 +380,10 @@ install ( FILES
 #----------------------------------------------
 # Make build tree targets accessible for import
 #----------------------------------------------
-export ( TARGETS ${LIB_NAME} ${LIB_NAME}-static FILE ${PACKAGE_NAME}-targets.cmake )
+export ( TARGETS ${LIB_NAME} FILE ${PACKAGE_NAME}-targets.cmake )
+if ( ENABLE_STAIC )
+  export ( TARGETS ${LIB_NAME}-static FILE ${PACKAGE_NAME}-targets.cmake )
+endif ()
 
 # build tree package config file, NOT installed
 configure_file (
@@ -385,3 +396,11 @@ set ( ENABLE_BUILD_TREE_EXPORT FALSE CAC
 if ( ENABLE_BUILD_TREE_EXPORT )
   export ( PACKAGE ${PACKAGE_NAME} )
 endif ()
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+SET(VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/${PROJECT_NAME}.pc.in ${CMAKE_BINARY_DIR}/${PROJECT_NAME}.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/${PROJECT_NAME}.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
diff -buprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/json-fortran-4.3.0/jsonfortran.pc.in src/json-fortran-4.3.0/jsonfortran.pc.in
--- origsrc/json-fortran-4.3.0/jsonfortran.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/json-fortran-4.3.0/jsonfortran.pc.in	2016-05-02 16:43:03.432093000 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: json-fortran
+Description: Fortran 2008 JSON API
+Version: @VERSION@
+Libs: -L${libdir} -ljsonfortran
+Cflags: -I${includedir}
