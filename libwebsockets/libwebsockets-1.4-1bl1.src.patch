diff -wuprN -x CYGWIN-PATCHES -x aclocal.m4~ -x aclocal.m4t -x autom4te.cache -x config.cache -x config.guess -x config.log -x config.status -x config.sub -x '*SlackBuild*' -x '*.egg-info' -x '*.dll' -x '*.exe' -x '*.o' -x '*.gch' -x '*.gem' -x .gitignore -x '*.jpg' -x '*.png' -x '*.qm' -x '*.svgz' -x '*.tif' -x '*.class' -x '*.jlc' -x '*.pyc' -x '*.pyo' -x '*.mo' -x '*.gmo' -x '*.orig' -x '*.rej' -x '*.spec' -x '*.temp' -x '*~' -x '*.stackdump' -x omf.make -x xmldocs.make -x gnome-doc-utils.make -x gnome-doc-utils.m4 -x mate-doc-utils.make -x mate-doc-utils.m4 origsrc/libwebsockets-1.4-chrome43-firefox-36/CMakeLists.txt src/libwebsockets-1.4-chrome43-firefox-36/CMakeLists.txt
--- origsrc/libwebsockets-1.4-chrome43-firefox-36/CMakeLists.txt	2015-03-28 12:35:40.000000000 +0900
+++ src/libwebsockets-1.4-chrome43-firefox-36/CMakeLists.txt	2015-05-31 11:23:40.192052400 +0900
@@ -366,11 +366,11 @@ if (CMAKE_COMPILER_IS_GNUCC OR CMAKE_COM
     if (HAVE_VISIBILITY)
                 set(VISIBILITY_FLAG -fvisibility=hidden)
     endif()
-    if (UNIX)
+    if (UNIX AND NOT CYGWIN)
 		set( CMAKE_C_FLAGS "-Wall -Werror -O3 ${VISIBILITY_FLAG} ${CMAKE_C_FLAGS}" )
-    else(UNIX)
+    else(UNIX AND NOT CYGWIN)
 		set( CMAKE_C_FLAGS "-Wall -O3 ${VISIBILITY_FLAG} ${CMAKE_C_FLAGS}" )
-    endif(UNIX)
+    endif(UNIX AND NOT CYGWIN)
 endif ()
 
 source_group("Headers Private"  FILES ${HDR_PRIVATE})
@@ -521,6 +521,8 @@ if (LWS_WITH_SSL)
 endif(LWS_WITH_SSL)
 
 if (LWS_WITH_LIBEV)
+	pkg_check_modules(LIBEV REQUIRED libev)
+	include_directories("${LIBEV_INCLUDEDIR}")
 	list(APPEND LIB_LIST "ev")
 endif(LWS_WITH_LIBEV)
 
@@ -851,12 +853,22 @@ set_target_properties(websockets websock
 #
 
 # Install libs and headers.
+option(ENABLE_STATIC "Enable static" OFF)
+if(ENABLE_STATIC)
 install(TARGETS websockets websockets_shared
 		EXPORT LibwebsocketsTargets
 		LIBRARY DESTINATION "${LWS_INSTALL_LIB_DIR}${LIB_SUFFIX}" COMPONENT libraries
 		ARCHIVE DESTINATION "${LWS_INSTALL_LIB_DIR}${LIB_SUFFIX}" COMPONENT libraries
 		RUNTIME DESTINATION "${LWS_INSTALL_BIN_DIR}" COMPONENT libraries # Windows DLLs
 		PUBLIC_HEADER DESTINATION "${LWS_INSTALL_INCLUDE_DIR}" COMPONENT dev)
+else()
+install(TARGETS websockets_shared
+		EXPORT LibwebsocketsTargets
+		LIBRARY DESTINATION "${LWS_INSTALL_LIB_DIR}${LIB_SUFFIX}" COMPONENT libraries
+		ARCHIVE DESTINATION "${LWS_INSTALL_LIB_DIR}${LIB_SUFFIX}" COMPONENT libraries
+		RUNTIME DESTINATION "${LWS_INSTALL_BIN_DIR}" COMPONENT libraries # Windows DLLs
+		PUBLIC_HEADER DESTINATION "${LWS_INSTALL_INCLUDE_DIR}" COMPONENT dev)
+endif()
 set(CPACK_COMPONENT_LIBRARIES_DISPLAY_NAME "Libraries")
 set(CPACK_COMPONENT_DEV_DISPLAY_NAME "Development files")
 
