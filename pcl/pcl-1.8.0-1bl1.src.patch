--- origsrc/pcl-pcl-1.8.0/cmake/pcl_utils.cmake	2016-06-15 00:51:26.000000000 +0900
+++ src/pcl-pcl-1.8.0/cmake/pcl_utils.cmake	2017-01-30 00:28:43.355090600 +0900
@@ -110,6 +110,8 @@ macro(SET_INSTALL_DIRS)
     set(PKGCFG_INSTALL_DIR "${LIB_INSTALL_DIR}/pkgconfig")
     if(WIN32 AND NOT MINGW)
         set(PCLCONFIG_INSTALL_DIR "cmake")
+      elseif(CYGWIN)
+        set(PCLCONFIG_INSTALL_DIR "lib/cmake/${PROJECT_NAME}")
       else(WIN32 AND NOT MINGW)
         set(PCLCONFIG_INSTALL_DIR "share/${PROJECT_NAME_LOWER}-${PCL_MAJOR_VERSION}.${PCL_MINOR_VERSION}")
       endif(WIN32 AND NOT MINGW)
@@ -199,8 +201,8 @@ endmacro(GET_IN_MAP)
 # See accompanying file LICENSE_1_0.txt or copy at                       #
 #   http://www.boost.org/LICENSE_1_0.txt                                 #
 ##########################################################################
-# Perform a reverse topological sort on the given LIST. 
-#   
+# Perform a reverse topological sort on the given LIST.
+#
 #   topological_sort(my_list "MY_" "_EDGES")
 #
 # LIST is the name of a variable containing a list of elements to be
@@ -222,7 +224,7 @@ endmacro(GET_IN_MAP)
 # using the following variables:
 #
 #     MY_A_EDGES     b
-#     MY_B_EDGES     
+#     MY_B_EDGES
 #     MY_C_EDGES     a b
 #
 #  With the involcation of topological_sort shown above and these
@@ -244,7 +246,7 @@ macro(topological_sort LIST PREFIX SUFFI
         # search from where.
         if (NOT FOUND_${UPPER_VERTEX})
             # Push this vertex onto the stack with all of its outgoing edges
-            string(REPLACE ";" " " NEW_ELEMENT 
+            string(REPLACE ";" " " NEW_ELEMENT
                 "${VERTEX};${${PREFIX}${UPPER_VERTEX}${SUFFIX}}")
             list(APPEND STACK ${NEW_ELEMENT})
 
@@ -282,14 +284,14 @@ macro(topological_sort LIST PREFIX SUFFI
 
                         # Push the remaining edges for the current vertex onto the
                         # stack
-                        string(REPLACE ";" " " NEW_ELEMENT 
+                        string(REPLACE ";" " " NEW_ELEMENT
                             "${SOURCE};${OUT_EDGES}")
                         list(APPEND STACK ${NEW_ELEMENT})
 
                         # Setup the new source and outgoing edges
                         set(SOURCE ${TARGET})
                         string(TOUPPER ${SOURCE} UPPER_SOURCE)
-                        set(OUT_EDGES 
+                        set(OUT_EDGES
                             ${${PREFIX}${UPPER_SOURCE}${SUFFIX}})
                     endif(NOT FOUND_${UPPER_TARGET})
 
@@ -328,7 +330,7 @@ macro(swap_elements _list _pos1 _pos2)
       set(pos2 ${${_pos1}})
     else(${_pos1} GREATER ${_pos2})
       set(pos1 ${${_pos1}})
-      set(pos2 ${${_pos2}})   
+      set(pos2 ${${_pos2}})
     endif(${_pos1} GREATER ${_pos2})
 
     list(GET ${_list} ${pos1} element1)
@@ -378,7 +380,7 @@ endmacro(set_in_list)
 
 ###
 # Sorts list B the same way list A was sorted by fetching the indices
-# _list [IN] original list A 
+# _list [IN] original list A
 # _sorted_list [IN] list A after sorting
 # _to_sort_relative [IN/OUT] list B
 ##
@@ -444,4 +446,3 @@ function(find_python_module module)
   endif(NOT PY_${module_upper})
   find_package_handle_standard_args(PY_${module} DEFAULT_MSG PY_${module_upper})
 endfunction(find_python_module)
-
--- origsrc/pcl-pcl-1.8.0/test/CMakeLists.txt	2016-06-15 00:51:26.000000000 +0900
+++ src/pcl-pcl-1.8.0/test/CMakeLists.txt	2017-01-28 18:02:53.233480700 +0900
@@ -16,11 +16,15 @@ PCL_SUBSYS_DEPEND(build "${SUBSYS_NAME}"
 
 if(build)
 
-    find_package(Gtest REQUIRED)
-    include_directories(SYSTEM ${GTEST_INCLUDE_DIRS} ${GTEST_SRC_DIR})
+    if(CYGWIN)
+        add_library(pcl_gtest INTERFACE)
+        target_link_libraries(pcl_gtest INTERFACE gtest gtest_main)
+    else()
+        find_package(Gtest REQUIRED)
+        include_directories(SYSTEM ${GTEST_INCLUDE_DIRS} ${GTEST_SRC_DIR})
 
-    add_library(pcl_gtest STATIC ${GTEST_SRC_DIR}/src/gtest-all.cc)
-	
+        add_library(pcl_gtest STATIC ${GTEST_SRC_DIR}/src/gtest-all.cc)
+    endif()
     if( MSVC11 ) # VS2012 doesn't correctly support variadic templates yet
         add_definitions("-D_VARIADIC_MAX=10")
     endif()
@@ -60,15 +64,15 @@ if(build)
                  FILES test_transforms.cpp
                  LINK_WITH pcl_gtest pcl_io
                  ARGUMENTS "${PCL_SOURCE_DIR}/test/bun0.pcd")
-    
+
     PCL_ADD_TEST(a_segmentation_test test_segmentation
                  FILES test_segmentation.cpp
                  LINK_WITH pcl_gtest pcl_io pcl_segmentation pcl_features pcl_kdtree pcl_search pcl_common
                  ARGUMENTS "${PCL_SOURCE_DIR}/test/bun0.pcd" "${PCL_SOURCE_DIR}/test/car6.pcd" "${PCL_SOURCE_DIR}/test/colored_cloud.pcd")
-    
+
     PCL_ADD_TEST(test_non_linear test_non_linear
                  FILES test_non_linear.cpp
-                 LINK_WITH pcl_gtest pcl_common pcl_io pcl_sample_consensus pcl_segmentation pcl_kdtree pcl_search 
+                 LINK_WITH pcl_gtest pcl_common pcl_io pcl_sample_consensus pcl_segmentation pcl_kdtree pcl_search
                  ARGUMENTS "${PCL_SOURCE_DIR}/test/noisy_slice_displaced.pcd")
 
     PCL_ADD_TEST(a_recognition_cg_test test_recognition_cg
