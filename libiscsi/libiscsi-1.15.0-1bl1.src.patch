--- origsrc/libiscsi-1.15.0/configure.ac	2015-06-22 00:50:50.000000000 +0900
+++ src/libiscsi-1.15.0/configure.ac	2016-03-11 18:03:49.477400500 +0900
@@ -3,7 +3,7 @@ AC_INIT(libiscsi, m4_esyscmd([grep 'Vers
 AC_CONFIG_SRCDIR([lib/init.c])
 AC_CONFIG_MACRO_DIR([m4])
 
-AM_INIT_AUTOMAKE([-Wall -Werror subdir-objects])
+AM_INIT_AUTOMAKE([-Wall subdir-objects])
 m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES])
 m4_ifdef([AM_PROG_AR], [AM_PROG_AR])
 AC_PROG_LIBTOOL
--- origsrc/libiscsi-1.15.0/examples/Makefile.am	2015-06-22 00:50:50.000000000 +0900
+++ src/libiscsi-1.15.0/examples/Makefile.am	2016-03-11 17:32:34.950128700 +0900
@@ -3,7 +3,7 @@ AM_CPPFLAGS=-I. -I${srcdir}/../include "
 AM_CFLAGS=$(WARN_CFLAGS)
 LDADD = ../lib/libiscsi.la
 
-noinst_PROGRAMS = iscsiclient iscsi-dd
+bin_PROGRAMS = iscsiclient iscsi-dd
 
 
 #
@@ -33,8 +33,7 @@ ld_iscsi.o: ld_iscsi-ld_iscsi.o lib/libi
 	$(LIBTOOL) --mode=link $(CC) -o $@ $^
 
 # 3) Manually create the .so file.
-bin_SCRIPTS = ld_iscsi.so
+# bin_SCRIPTS = ld_iscsi.so
 ld_iscsi.so: ld_iscsi.o
 	$(CC) -shared -o ld_iscsi.so ld_iscsi.o -ldl
 endif
-
--- origsrc/libiscsi-1.15.0/test-tool/Makefile.am	2015-06-22 00:50:50.000000000 +0900
+++ src/libiscsi-1.15.0/test-tool/Makefile.am	2016-03-11 18:01:54.518219800 +0900
@@ -204,6 +204,3 @@ iscsi_test_cu_SOURCES = iscsi-test-cu.c
 	test_multipathio_simple.c
 
 endif
-
-
-
--- origsrc/libiscsi-1.15.0/test-tool/iscsi-multipath.c	2015-06-22 00:50:50.000000000 +0900
+++ src/libiscsi-1.15.0/test-tool/iscsi-multipath.c	2016-03-11 18:08:43.354686900 +0900
@@ -21,7 +21,9 @@
 
 #define _GNU_SOURCE
 #include <assert.h>
+#if !defined(__CYGWIN__)
 #include <sys/syscall.h>
+#endif
 #include <dlfcn.h>
 #include <sys/types.h>
 #include <stdio.h>
--- origsrc/libiscsi-1.15.0/test-tool/iscsi-support.c	2015-06-22 00:50:50.000000000 +0900
+++ src/libiscsi-1.15.0/test-tool/iscsi-support.c	2016-03-11 18:00:52.467241800 +0900
@@ -22,7 +22,9 @@
 
 #define _GNU_SOURCE
 #include <assert.h>
+#if !defined(__CYGWIN__)
 #include <sys/syscall.h>
+#endif
 #include <dlfcn.h>
 #include <sys/types.h>
 #include <stdio.h>
--- origsrc/libiscsi-1.15.0/test-tool/iscsi-test-cu.c	2015-06-22 00:50:50.000000000 +0900
+++ src/libiscsi-1.15.0/test-tool/iscsi-test-cu.c	2016-03-11 18:03:13.507642300 +0900
@@ -20,7 +20,9 @@
 #include "config.h"
 
 #define _GNU_SOURCE
+#if !defined(__CYGWIN__)
 #include <sys/syscall.h>
+#endif
 #include <dlfcn.h>
 #include <sys/types.h>
 #include <stdio.h>
@@ -869,7 +871,7 @@ static void parse_and_add_test(const cha
 					t[len] = 0;
 					continue;
 				}
-				break;	
+				break;
 			}
 			parse_and_add_tests(t);
 		}
@@ -1081,7 +1083,9 @@ main(int argc, char *argv[])
 	 * This allows such tests to do their mutates and then call out
 	 * to the real queueing function once they have modified the data.
 	 */
+#if !defined(__CYGWIN__)
 	real_iscsi_queue_pdu = dlsym(RTLD_NEXT, "iscsi_queue_pdu");
+#endif
 
 	if ((mp_num_sds == 0) || (mp_sds[0]->iscsi_url == NULL
 					&& mp_sds[0]->sgio_dev == NULL)) {
--- origsrc/libiscsi-1.15.0/tests/Makefile.am	2015-06-22 00:50:50.000000000 +0900
+++ src/libiscsi-1.15.0/tests/Makefile.am	2016-03-11 18:11:25.313538700 +0900
@@ -1,4 +1,4 @@
-AM_CPPFLAGS = -I../include "-D_U_=__attribute__((unused))" \
+AM_CPPFLAGS = -I$(top_srcdir)/include "-D_U_=__attribute__((unused))" \
 	"-D_R_(A,B)=__attribute__((format(printf,A,B)))"
 AM_CFLAGS = $(WARN_CFLAGS)
 LDADD = ../lib/libiscsi.la
