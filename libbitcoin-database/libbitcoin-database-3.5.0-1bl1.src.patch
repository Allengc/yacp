--- origsrc/libbitcoin-database-3.5.0/Makefile.am	2018-01-21 23:48:25.000000000 +0900
+++ src/libbitcoin-database-3.5.0/Makefile.am	2018-04-05 16:56:11.412000000 +0900
@@ -57,6 +57,7 @@ src_libbitcoin_database_la_SOURCES = \
     src/primitives/slab_manager.cpp \
     src/result/block_result.cpp \
     src/result/transaction_result.cpp
+src_libbitcoin_database_la_LDFLAGS = -no-undefined
 
 # local: test/libbitcoin_database_test
 #------------------------------------------------------------------------------
--- origsrc/libbitcoin-database-3.5.0/configure.ac	2018-01-21 23:48:25.000000000 +0900
+++ src/libbitcoin-database-3.5.0/configure.ac	2018-04-05 15:55:22.665000000 +0900
@@ -206,18 +206,19 @@ AS_CASE([${CC}], [*],
     [AX_CHECK_LINK_FLAG([-fstack-protector-all],
         [LDFLAGS="$LDFLAGS -fstack-protector-all"])])
 
-# Hide internal functions from external libs. Enabled in gcc only.
-#------------------------------------------------------------------------------
-AS_CASE([${CC}], [*gcc*],
-    [AX_CHECK_COMPILE_FLAG([-fvisibility-hidden],
-        [CXXFLAGS="$CXXFLAGS -fvisibility-hidden"])])
-
-# Hide inlines from external libs. Enabled in gcc only.
-#------------------------------------------------------------------------------
-AS_CASE([${CC}], [*gcc*],
-    [AX_CHECK_COMPILE_FLAG([-fvisibility-inlines-hidden],
-        [CXXFLAGS="$CXXFLAGS -fvisibility-inlines-hidden"])])
+if test "$host_os" != "cygwin"; then
+    # Hide internal functions from external libs. Enabled in gcc only.
+    #------------------------------------------------------------------------------
+    AS_CASE([${CC}], [*gcc*],
+        [AX_CHECK_COMPILE_FLAG([-fvisibility-hidden],
+            [CXXFLAGS="$CXXFLAGS -fvisibility-hidden"])])
 
+    # Hide inlines from external libs. Enabled in gcc only.
+    #------------------------------------------------------------------------------
+    AS_CASE([${CC}], [*gcc*],
+        [AX_CHECK_COMPILE_FLAG([-fvisibility-inlines-hidden],
+            [CXXFLAGS="$CXXFLAGS -fvisibility-inlines-hidden"])])
+fi
 
 # Process outputs into templates.
 #==============================================================================
