--- origsrc/Celero-1.0.9/CMakeLists.txt	2015-02-09 09:30:32.000000000 +0900
+++ src/Celero-1.0.9/CMakeLists.txt	2015-02-28 11:32:07.744195300 +0900
@@ -30,6 +30,8 @@ include(CheckFunctionExists)
 include(CheckCXXSourceCompiles)
 include(CheckIncludeFile)
 
+find_package(Boost)
+
 #
 # User Options
 #
@@ -48,12 +50,6 @@ endif()
 
 if(CELERO_ENABLE_TESTS)
 	set(CELERO_ENABLE_AUTO_RUN_TESTS ON CACHE BOOL "Enable Celero tests to automatically run after building")
-	set(GTEST_DIRECTORY test/gtest-1.7.0)
-	set(GTEST_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/${GTEST_DIRECTORY}/include)
-	set(GTEST_LIBRARY gtest)
-	set(GTEST_MAIN_LIBRARY gtest_main)
-	include_directories(${CMAKE_CURRENT_SOURCE_DIR}/${GTEST_DIRECTORY}/include ${CMAKE_CURRENT_SOURCE_DIR}/${GTEST_DIRECTORY}/src)
-	ADD_SUBDIRECTORY(${GTEST_DIRECTORY})
 endif()
 
 set_property(GLOBAL PROPERTY USE_FOLDERS ON)
@@ -91,7 +87,7 @@ endif()
  
 if(UNIX)
 	if(CMAKE_COMPILER_IS_GNUCXX) 
-	  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -std=gnu++11 -Wall -O3" CACHE STRING "Compiler Flags for All Builds" FORCE) 
+	  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -std=gnu++11 -Wall -O3 -fpermissive" CACHE STRING "Compiler Flags for All Builds" FORCE) 
 	  set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -pedantic" CACHE STRING "Compiler Flags for Debug Builds" FORCE) 
 	  set(CMAKE_CXX_FLAGS_RELEASE  "${CMAKE_CXX_FLAGS_RELEASE}" CACHE STRING "Compiler Flags for Release Builds" FORCE) 
 	else()
@@ -190,10 +186,13 @@ set(TARGET_SRC
 
 set(TARGET_LIBRARIES ${SYSLIBS})
 add_library(${PROJECT_NAME} ${CELERO_USER_DEFINED_SHARED_OR_STATIC} ${TARGET_SRC} ${TARGET_H})
+set_target_properties(${PROJECT_NAME} PROPERTIES SOVERSION 0)
 include_directories(${HEADER_PATH})
 
+install(FILES ${TARGET_H}
+        DESTINATION include/Celero)
 install(TARGETS ${PROJECT_NAME} 
-	LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/bin 
+	RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin 
 	ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
 
 # --------------------------------------------------------------------------- 
@@ -218,7 +217,7 @@ if(CELERO_ENABLE_TESTS)
 	include_directories(${GTEST_INCLUDE_DIR})
 
 	add_dependencies(${PROJECT_NAME} celero)
-	target_link_libraries(${PROJECT_NAME} ${GTEST_LIBRARY} ${GTEST_MAIN_LIBRARY} celero)
+	target_link_libraries(${PROJECT_NAME} gtest gtest_main celero)
 
 	if(CELERO_ENABLE_AUTO_RUN_TESTS)
 		add_test(${PROJECT_NAME} ${PROJECT_NAME})
@@ -238,4 +237,11 @@ if(CELERO_ENABLE_FOLDERS)
 	set_property(TARGET celero PROPERTY FOLDER "Celero")
 endif()
 
-ADD_SUBDIRECTORY(experiments)
\ No newline at end of file
+ADD_SUBDIRECTORY(experiments)
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/celero.pc.in ${CMAKE_BINARY_DIR}/celero.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/celero.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/Celero-1.0.9/celero.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/Celero-1.0.9/celero.pc.in	2015-02-28 11:31:47.388726600 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: Celero
+Description: C++ Benchmark Authoring Library/Framework
+Version: 1.0.9
+Libs: -L${libdir} -lcelero
+Cflags: -I${includedir}
--- origsrc/Celero-1.0.9/include/celero/Utilities.h	2015-02-09 09:30:32.000000000 +0900
+++ src/Celero-1.0.9/include/celero/Utilities.h	2015-02-28 11:05:47.590875000 +0900
@@ -28,6 +28,7 @@
 #include <cstdlib>
 #include <thread>
 #include <stdint.h>
+#include <cstdio>
 
 #include <celero/Export.h>
 
--- origsrc/Celero-1.0.9/src/Experiment.cpp	2015-02-09 09:30:32.000000000 +0900
+++ src/Celero-1.0.9/src/Experiment.cpp	2015-02-28 11:06:31.437554700 +0900
@@ -26,6 +26,8 @@
 #include <algorithm>
 #include <cassert>
 
+#include <boost/lexical_cast.hpp>
+
 using namespace celero;
 
 class Experiment::Impl
@@ -168,7 +170,7 @@ Experiment::operator std::string() const
 
 	if(this->getSamples() > 0)
 	{
-		output += " -- " + std::to_string(this->getSamples());
+		output += " -- " + boost::lexical_cast<std::string>(this->getSamples());
 
 		if(this->getSamples() == 1)
 		{
@@ -184,7 +186,7 @@ Experiment::operator std::string() const
 		output += " -- Auto Run, ";
 	}
 
-	output += std::to_string(this->getCalls());
+	output += boost::lexical_cast<std::string>(this->getCalls());
 
 	if(this->getCalls() == 1)
 	{
--- origsrc/Celero-1.0.9/src/Timer.cpp	2015-02-09 09:30:32.000000000 +0900
+++ src/Celero-1.0.9/src/Timer.cpp	2015-02-28 11:09:32.286187500 +0900
@@ -19,6 +19,8 @@
 #include <celero/Timer.h>
 #include <celero/Print.h>
 
+#include <boost/lexical_cast.hpp>
+
 #ifdef WIN32
 	#include <Windows.h>
 	LARGE_INTEGER QPCFrequency;
@@ -58,6 +60,6 @@ void celero::timer::CachePerformanceFreq
 			static_cast<double>(std::chrono::high_resolution_clock::period::den)) * 1000000.0;
 	#endif
 
-	ss << std::to_string(precision) << " us";
+	ss << boost::lexical_cast<std::string>(precision) << " us";
 	celero::print::Status(ss.str());
 }
--- origsrc/Celero-1.0.9/test/CMakeLists.txt	2015-02-09 09:30:32.000000000 +0900
+++ src/Celero-1.0.9/test/CMakeLists.txt	2015-02-28 11:07:55.424859400 +0900
@@ -1,15 +1,6 @@
 
-set(GTEST_DIRECTORY gtest-1.7.0)
-
-set(GTEST_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/${GTEST_DIRECTORY}/include)
+set(GTEST_INCLUDE_DIR /usr/include)
 set(GTEST_LIBRARY gtest)
 set(GTEST_MAIN_LIBRARY gtest_main)
 
-include_directories(${CMAKE_CURRENT_SOURCE_DIR}/${GTEST_DIRECTORY}/include ${CMAKE_CURRENT_SOURCE_DIR}/${GTEST_DIRECTORY}/src)
-
-FILE(GLOB _ALL_FILES ./ ./*)
-FOREACH(_FILE ${_ALL_FILES})
-  IF(IS_DIRECTORY ${_FILE})
-    ADD_SUBDIRECTORY(${_FILE})
-  ENDIF()
-ENDFOREACH()
+add_subdirecotry(Celero)
