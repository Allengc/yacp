--- origsrc/libbitcoin-3.4.0/Makefile.am	2017-12-14 12:40:58.000000000 +0900
+++ src/libbitcoin-3.4.0/Makefile.am	2017-12-18 09:00:18.495910100 +0900
@@ -33,7 +33,7 @@ doc_DATA = \
 #------------------------------------------------------------------------------
 lib_LTLIBRARIES = src/libbitcoin.la
 src_libbitcoin_la_CPPFLAGS = -I${srcdir}/include ${icu} ${png} ${qrencode} ${boost_CPPFLAGS} ${pthread_CPPFLAGS} ${icu_i18n_CPPFLAGS} ${png_CPPFLAGS} ${qrencode_CPPFLAGS} ${secp256k1_CPPFLAGS}
-src_libbitcoin_la_LDFLAGS = ${boost_LDFLAGS}
+src_libbitcoin_la_LDFLAGS = -no-undefined ${boost_LDFLAGS}
 src_libbitcoin_la_LIBADD = ${boost_chrono_LIBS} ${boost_date_time_LIBS} ${boost_filesystem_LIBS} ${boost_iostreams_LIBS} ${boost_locale_LIBS} ${boost_log_LIBS} ${boost_program_options_LIBS} ${boost_regex_LIBS} ${boost_system_LIBS} ${boost_thread_LIBS} ${pthread_LIBS} ${rt_LIBS} ${icu_i18n_LIBS} ${dl_LIBS} ${png_LIBS} ${qrencode_LIBS} ${secp256k1_LIBS}
 src_libbitcoin_la_SOURCES = \
     src/error.cpp \
--- origsrc/libbitcoin-3.4.0/include/bitcoin/bitcoin/chain/output.hpp	2017-12-14 12:40:58.000000000 +0900
+++ src/libbitcoin-3.4.0/include/bitcoin/bitcoin/chain/output.hpp	2017-12-18 09:00:18.495910100 +0900
@@ -45,7 +45,7 @@ public:
     static const uint64_t not_found;
 
     // THIS IS FOR LIBRARY USE ONLY, DO NOT CREATE A DEPENDENCY ON IT.
-    struct validation
+    struct BC_API validation
     {
         /// This is a non-consensus sentinel used to indicate an output is unspent.
         static const uint32_t not_spent;
--- origsrc/libbitcoin-3.4.0/include/bitcoin/bitcoin/wallet/dictionary.hpp	2017-12-14 12:40:58.000000000 +0900
+++ src/libbitcoin-3.4.0/include/bitcoin/bitcoin/wallet/dictionary.hpp	2017-12-19 12:13:32.832000000 +0900
@@ -21,7 +21,7 @@
 
 #include <array>
 #include <vector>
-#include <bitcoin/bitcoin/compat.hpp>
+#include <bitcoin/bitcoin/define.hpp>
 
 namespace libbitcoin {
 namespace wallet {
@@ -47,19 +47,19 @@ typedef std::vector<const dictionary*> d
 namespace language
 {
     // Individual built-in languages:
-    extern const dictionary en;
-    extern const dictionary es;
-    extern const dictionary ja;
-    extern const dictionary it;
-    extern const dictionary fr;
-    extern const dictionary cs;
-    extern const dictionary ru;
-    extern const dictionary uk;
-    extern const dictionary zh_Hans;
-    extern const dictionary zh_Hant;
+    BC_API extern const dictionary en;
+    BC_API extern const dictionary es;
+    BC_API extern const dictionary ja;
+    BC_API extern const dictionary it;
+    BC_API extern const dictionary fr;
+    BC_API extern const dictionary cs;
+    BC_API extern const dictionary ru;
+    BC_API extern const dictionary uk;
+    BC_API extern const dictionary zh_Hans;
+    BC_API extern const dictionary zh_Hant;
 
     // All built-in languages:
-    extern const dictionary_list all;
+    BC_API extern const dictionary_list all;
 }
 
 } // namespace wallet
--- origsrc/libbitcoin-3.4.0/src/chain/point_value.cpp	2017-12-14 12:40:58.000000000 +0900
+++ src/libbitcoin-3.4.0/src/chain/point_value.cpp	2017-12-19 13:09:54.486000000 +0900
@@ -74,6 +74,7 @@ bool point_value::operator!=(const point
     return !(*this == other);
 }
 
+BC_API
 // friend function, see: stackoverflow.com/a/5695855/1172329
 void swap(point_value& left, point_value& right)
 {
--- origsrc/libbitcoin-3.4.0/src/config/checkpoint.cpp	2017-12-14 12:40:58.000000000 +0900
+++ src/libbitcoin-3.4.0/src/config/checkpoint.cpp	2017-12-19 13:07:55.938999800 +0900
@@ -117,6 +117,7 @@ bool checkpoint::operator==(const checkp
     return height_ == other.height_ && hash_ == other.hash_;
 }
 
+BC_API
 std::istream& operator>>(std::istream& input, checkpoint& argument)
 {
     std::string value;
@@ -149,6 +150,7 @@ std::istream& operator>>(std::istream& i
     return input;
 }
 
+BC_API
 std::ostream& operator<<(std::ostream& output, const checkpoint& argument)
 {
     output << encode_hash(argument.hash()) << ":" << argument.height();
--- origsrc/libbitcoin-3.4.0/src/utility/binary.cpp	2017-12-14 12:40:58.000000000 +0900
+++ src/libbitcoin-3.4.0/src/utility/binary.cpp	2017-12-19 13:04:22.594000200 +0900
@@ -317,6 +317,7 @@ std::istream& operator>>(std::istream& i
     return in;
 }
 
+BC_API
 std::ostream& operator<<(std::ostream& out, const binary& of)
 {
     for (binary::size_type i = 0; i < of.size(); ++i)
--- origsrc/libbitcoin-3.4.0/src/wallet/payment_address.cpp	2017-12-14 12:40:58.000000000 +0900
+++ src/libbitcoin-3.4.0/src/wallet/payment_address.cpp	2017-12-19 10:53:26.823000000 +0900
@@ -225,6 +225,7 @@ std::istream& operator>>(std::istream& i
     return in;
 }
 
+BC_API
 std::ostream& operator<<(std::ostream& out, const payment_address& of)
 {
     out << of.encoded();
