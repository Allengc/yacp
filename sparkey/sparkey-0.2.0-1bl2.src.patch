--- origsrc/sparkey-sparkey-0.2.0/Makefile.am	2014-02-18 23:40:29.000000000 +0900
+++ src/sparkey-sparkey-0.2.0/Makefile.am	2017-07-15 20:52:25.953839600 +0900
@@ -1,6 +1,9 @@
 SUBDIRS = src
 dist_doc_DATA = README.md
 
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = sparkey.pc
+
 if HAVE_DOXYGEN
 
 doxyfile.stamp:
--- origsrc/sparkey-sparkey-0.2.0/configure.ac	2014-02-18 23:40:29.000000000 +0900
+++ src/sparkey-sparkey-0.2.0/configure.ac	2017-07-15 20:52:25.953839600 +0900
@@ -28,5 +28,6 @@ AM_COND_IF([NOT_APPLE], [
 AC_CONFIG_FILES([
  Makefile
  src/Makefile
+ sparkey.pc
 ])
 AC_OUTPUT
--- origsrc/sparkey-sparkey-0.2.0/sparkey.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/sparkey-sparkey-0.2.0/sparkey.pc.in	2017-07-15 20:52:25.969184400 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: sparkey
+Description: Simple constant key/value storage library, for read-heavy systems with infrequent large bulk inserts
+Version: 0.2.0
+Libs: -L${libdir} -lsparkey
+Cflags: -I${includedir}
--- origsrc/sparkey-sparkey-0.2.0/src/Makefile.am	2014-02-18 23:40:29.000000000 +0900
+++ src/sparkey-sparkey-0.2.0/src/Makefile.am	2017-07-15 20:52:25.969184400 +0900
@@ -7,12 +7,13 @@ logreader.c returncodes.c util.c buf.h h
 sparkey.h util.h endiantools.c \
 hashheader.c hashreader.c logheader.c logwriter.c MurmurHash3.c \
 sparkey-internal.h
+libsparkey_la_LDFLAGS = -no-undefined
 
 pkginclude_HEADERS = sparkey.h
 
-bin_PROGRAMS = sparkey bench
+bin_PROGRAMS = sparkey sparkey-bench
 sparkey_SOURCES = main.c
-bench_SOURCES = bench.c
+sparkey_bench_SOURCES = bench.c
 LDADD = libsparkey.la
 
 check_PROGRAMS = testvlq testhash testutil testsystem
--- origsrc/sparkey-sparkey-0.2.0/src/endiantools.c	2014-02-18 23:40:29.000000000 +0900
+++ src/sparkey-sparkey-0.2.0/src/endiantools.c	2017-07-15 20:52:25.969184400 +0900
@@ -13,7 +13,7 @@
 * License for the specific language governing permissions and limitations under
 * the License.
 */
-#if defined(__linux)
+#if defined(__linux) || defined(__CYGWIN__)
 #include <byteswap.h>
 #elif defined(__APPLE__)
 #include <libkern/OSByteOrder.h>
