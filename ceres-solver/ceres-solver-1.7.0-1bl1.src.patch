--- origsrc/ceres-solver-1.7.0/CMakeLists.txt	2013-09-04 06:32:26.000000000 +0900
+++ src/ceres-solver-1.7.0/CMakeLists.txt	2013-09-15 10:56:07.000000000 +0900
@@ -663,7 +663,7 @@ ENDIF (MSVC)
 IF (UNIX)
   # GCC is not strict enough by default, so enable most of the warnings.
   SET(CMAKE_CXX_FLAGS
-    "${CMAKE_CXX_FLAGS} -Werror -Wall -Wextra -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-missing-field-initializers")
+    "${CMAKE_CXX_FLAGS} -Wall -Wextra -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-missing-field-initializers")
 ENDIF (UNIX)
 
 # Use a larger inlining threshold for Clang, since it hobbles Eigen,
--- origsrc/ceres-solver-1.7.0/examples/libmv_bundle_adjuster.cc	2013-09-04 06:32:26.000000000 +0900
+++ src/ceres-solver-1.7.0/examples/libmv_bundle_adjuster.cc	2013-09-15 11:47:56.000000000 +0900
@@ -103,7 +103,9 @@ typedef unsigned __int32 uint32_t;
 
 // O_BINARY is not defined on unix like platforms, as there is no
 // difference between binary and text files.
+#if !defined(O_BINARY)
 #define O_BINARY 0
+#endif
 
 #endif
 
--- origsrc/ceres-solver-1.7.0/internal/ceres/CMakeLists.txt	2013-09-04 06:32:26.000000000 +0900
+++ src/ceres-solver-1.7.0/internal/ceres/CMakeLists.txt	2013-09-15 11:49:56.000000000 +0900
@@ -192,7 +192,7 @@ SET(CERES_LIBRARY_SOURCE
     ${CERES_INTERNAL_HDRS}
     ${CERES_INTERNAL_SCHUR_FILES})
 
-ADD_LIBRARY(ceres ${CERES_LIBRARY_SOURCE})
+ADD_LIBRARY(ceres SHARED ${CERES_LIBRARY_SOURCE})
 SET_TARGET_PROPERTIES(ceres PROPERTIES
   VERSION ${CERES_VERSION}
   SOVERSION ${CERES_VERSION_MAJOR}
