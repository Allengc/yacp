--- origsrc/apophenia-0.999c/Makefile.am	2014-12-10 01:42:40.000000000 +0900
+++ src/apophenia-0.999c/Makefile.am	2015-03-23 16:32:18.922377500 +0900
@@ -77,7 +77,7 @@ libapopkernel_la_CFLAGS = \
 	$(SQLITE3_CFLAGS) \
 	$(GSL_CFLAGS)
 
-libapophenia_la_LDFLAGS = \
+libapophenia_la_LDFLAGS = -no-undefined \
 	-version-info $(LIBAPOPHENIA_LT_VERSION) \
 	$(libapophenia_la_LD_VERSION_SCRIPT)
 
--- origsrc/apophenia-0.999c/model/apop_loess.c	2014-12-10 01:42:40.000000000 +0900
+++ src/apophenia-0.999c/model/apop_loess.c	2015-03-23 16:56:59.560658800 +0900
@@ -86,6 +86,8 @@ typedef long int integer;
 #define Calloc(n,t)	(t *)calloc((unsigned)(n),sizeof(t))   // From #include "S.h"
 #define Warning(msg) Apop_assert_c(0, , 0 , "%s", msg);
 
+#define tgammal(x) tgamma(x)
+
 static integer c__0 = 0;
 static integer c__1 = 1;
 static integer c__15 = 15;
--- origsrc/apophenia-0.999c/model/apop_ols.c	2014-12-10 01:42:40.000000000 +0900
+++ src/apophenia-0.999c/model/apop_ols.c	2015-03-23 16:58:11.623158800 +0900
@@ -50,6 +50,8 @@ int main(){ apop_model_show(apop_estimat
 
 #include "apop_internal.h"
 
+#define logl(x) log(x)
+
 static void ols_score(apop_data *d, gsl_vector *gradient, apop_model *p);
 apop_model *ols_param_models(apop_data *d, apop_model *m);
 apop_data *ols_predict(apop_data *in, apop_model *m);
--- origsrc/apophenia-0.999c/model/apop_probit.c	2014-12-10 01:42:40.000000000 +0900
+++ src/apophenia-0.999c/model/apop_probit.c	2015-03-23 16:59:09.888783800 +0900
@@ -28,6 +28,9 @@ replace that matrix column with a consta
 
 #include "apop_internal.h"
 
+#define logl(x) log(x)
+#define expl(x) exp(x)
+
 static void probit_dlog_likelihood(apop_data *d, gsl_vector *gradient, apop_model *p);
 
 static apop_data *get_category_table(apop_data *d){
--- origsrc/apophenia-0.999c/model/apop_zipf.c	2014-12-10 01:42:40.000000000 +0900
+++ src/apophenia-0.999c/model/apop_zipf.c	2015-03-23 17:00:30.466908800 +0900
@@ -21,6 +21,8 @@ See also \ref apop_data_rank_compress fo
 #include "apop_internal.h"
 #include <gsl/gsl_sf_zeta.h>
 
+#define powl(x,y) pow(x,y)
+
 static long double zipf_constraint(apop_data *returned_beta, apop_model *m){
     //constraint is 1 < beta_1
     Nullcheck_mp(m, GSL_NAN);
