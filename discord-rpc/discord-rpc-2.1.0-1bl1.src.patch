--- origsrc/discord-rpc-2.1.0/CMakeLists.txt	2017-12-02 07:41:20.000000000 +0900
+++ src/discord-rpc-2.1.0/CMakeLists.txt	2017-12-28 12:45:29.963000000 +0900
@@ -26,6 +26,7 @@ if (CLANG_FORMAT_CMD)
     )
 endif(CLANG_FORMAT_CMD)
 
+if (NOT CYGWIN)
 # thirdparty stuff
 execute_process(
     COMMAND mkdir ${CMAKE_SOURCE_DIR}/thirdparty
@@ -47,6 +48,7 @@ endif(NOT RAPIDJSONTEST)
 find_file(RAPIDJSON NAMES rapidjson rapidjson-1.1.0 PATHS ${CMAKE_SOURCE_DIR}/thirdparty CMAKE_FIND_ROOT_PATH_BOTH)
 
 add_library(rapidjson STATIC IMPORTED ${RAPIDJSON})
+endif()
 
 # add subdirs
 
@@ -54,3 +56,11 @@ add_subdirectory(src)
 if (BUILD_EXAMPLES)
     add_subdirectory(examples/send-presence)
 endif(BUILD_EXAMPLES)
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+SET(VERSION "2.1.0")
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/discord-rpc.pc.in ${CMAKE_BINARY_DIR}/discord-rpc.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/discord-rpc.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/discord-rpc-2.1.0/discord-rpc.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/discord-rpc-2.1.0/discord-rpc.pc.in	2017-12-28 12:45:27.514797900 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: discord-rpc
+Description: Library for interfacing your game with a locally running Discord desktop client
+Version: @VERSION@
+Libs: -L${libdir} -ldiscord-rpc
+Cflags: -I${includedir}
--- origsrc/discord-rpc-2.1.0/src/CMakeLists.txt	2017-12-02 07:41:20.000000000 +0900
+++ src/discord-rpc-2.1.0/src/CMakeLists.txt	2017-12-28 12:43:40.734000000 +0900
@@ -69,33 +69,39 @@ if(UNIX)
 
     add_library(discord-rpc ${BASE_RPC_SRC})
     target_link_libraries(discord-rpc PUBLIC pthread)
-    target_compile_options(discord-rpc PRIVATE
-        -g
-        -Wall
-        -Wextra
-        -Wpedantic
-        -Werror
-        -Wno-unknown-pragmas # pragma push thing doesn't work on clang
-        -Wno-old-style-cast # it's fine
-        -Wno-c++98-compat # that was almost 2 decades ago
-        -Wno-c++98-compat-pedantic
-        -Wno-missing-noreturn
-        -Wno-padded # structure padding
-        -Wno-covered-switch-default
-        -Wno-exit-time-destructors # not sure about these
-        -Wno-global-constructors
-    )
+    if (CYGWIN)
+        set_target_properties(discord-rpc PROPERTIES SOVERSION 0)
+    else ()
+        target_compile_options(discord-rpc PRIVATE
+            -g
+            -Wall
+            -Wextra
+            -Wpedantic
+            -Werror
+            -Wno-unknown-pragmas # pragma push thing doesn't work on clang
+            -Wno-old-style-cast # it's fine
+            -Wno-c++98-compat # that was almost 2 decades ago
+            -Wno-c++98-compat-pedantic
+            -Wno-missing-noreturn
+            -Wno-padded # structure padding
+            -Wno-covered-switch-default
+            -Wno-exit-time-destructors # not sure about these
+            -Wno-global-constructors
+        )
 
-    if (${BUILD_SHARED_LIBS})
-        target_compile_options(discord-rpc PRIVATE -fPIC)
-    endif (${BUILD_SHARED_LIBS})
+        if (${BUILD_SHARED_LIBS})
+            target_compile_options(discord-rpc PRIVATE -fPIC)
+        endif (${BUILD_SHARED_LIBS})
+    endif()
 
     if (APPLE)
         target_link_libraries(discord-rpc PRIVATE "-framework AppKit")
     endif (APPLE)
 endif(UNIX)
 
-target_include_directories(discord-rpc PRIVATE ${RAPIDJSON}/include)
+if (NOT CYGWIN)
+    target_include_directories(discord-rpc PRIVATE ${RAPIDJSON}/include)
+endif()
 
 if (NOT ${ENABLE_IO_THREAD})
     target_compile_definitions(discord-rpc PUBLIC -DDISCORD_DISABLE_IO_THREAD)
