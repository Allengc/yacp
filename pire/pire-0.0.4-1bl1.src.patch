--- origsrc/pire-release-0.0.4/pire/Makefile.am	2010-11-17 11:19:58.000000000 +0900
+++ src/pire-release-0.0.4/pire/Makefile.am	2013-10-05 21:36:35.770313300 +0900
@@ -60,6 +60,8 @@ libpire_la_SOURCES += \
 	extra/glyphs.h
 endif
 
+libpire_la_LDFLAGS = -no-undefined
+
 pire_hdrdir = $(includedir)/pire
 pire_hdr_HEADERS = \
 	align.h \
@@ -74,7 +76,7 @@ pire_hdr_HEADERS = \
 	partition.h \
 	pire.h \
 	re_lexer.h \
-	re_parser.h \
+	re_parser.hpp \
 	run.h \
 	static_assert.h \
 	sse.h \
@@ -115,3 +117,4 @@ CLEANFILES    = re_parser.h re_parser.cp
 
 AM_YFLAGS = -d
 
+re_parser.h: re_parser.ypp
--- origsrc/pire-release-0.0.4/pire/glue.cpp	2010-11-17 11:19:58.000000000 +0900
+++ src/pire-release-0.0.4/pire/glue.cpp	2013-10-05 21:35:16.533985200 +0900
@@ -60,7 +60,7 @@ public:
 		size_t finalTableSize = 0;
 		for (typename yvector<State>::const_iterator i = states.begin(), ie = states.end(); i != ie; ++i)
 			finalTableSize += RangeLen(Lhs().AcceptedRegexps(i->first)) + RangeLen(Rhs().AcceptedRegexps(i->second));
-		SetSc(new Scanner);
+		this->SetSc(new Scanner);
 		Sc().Init(states.size(), Letters(), finalTableSize, size_t(0), Lhs().RegexpsCount() + Rhs().RegexpsCount());
 				
 		for (size_t state = 0; state != states.size(); ++state) {
--- origsrc/pire-release-0.0.4/pire/re_lexer.cpp	2010-11-17 11:19:58.000000000 +0900
+++ src/pire-release-0.0.4/pire/re_lexer.cpp	2013-10-05 21:36:09.723438300 +0900
@@ -25,7 +25,7 @@
 #include "stub/utf8.h"
 #include "stub/singleton.h"
 #include <stdexcept>
-#include "re_parser.h"
+#include "re_parser.hpp"
 #include "re_lexer.h"
 #include "fsm.h"
 #include "stub/stl.h"
--- origsrc/pire-release-0.0.4/pire/stub/saveload.h	2010-11-17 11:19:58.000000000 +0900
+++ src/pire-release-0.0.4/pire/stub/saveload.h	2013-10-05 21:37:31.857227400 +0900
@@ -52,7 +52,7 @@ namespace Pire {
 				if (!Traits::eq_int_type(ret, Traits::eof())) {
 					m_ch = (Char) ret;
 					m_read += sizeof(Char);
-					setg(&m_ch, &m_ch, &m_ch+1);
+					this->setg(&m_ch, &m_ch, &m_ch+1);
 				}
 				return ret;
 			}
@@ -117,7 +117,7 @@ namespace Pire {
 			BasicAlignedOutput(std::basic_ostream<Char, Traits>* backend)
 				: m_streambuf(backend->rdbuf())
 			{
-				rdbuf(&m_streambuf);
+				this->rdbuf(&m_streambuf);
 			}
 
 			void Align(size_t divisor = sizeof(void*))
--- origsrc/pire-release-0.0.4/samples/pigrep/pigrep.cpp	2010-11-17 11:19:58.000000000 +0900
+++ src/pire-release-0.0.4/samples/pigrep/pigrep.cpp	2013-10-05 21:39:04.861133600 +0900
@@ -29,6 +29,7 @@
 
 #include <string.h>
 #include <stdlib.h>
+#include <getopt.h>
 #include <string>
 #include <stdexcept>
 #include <iostream>
--- origsrc/pire-release-0.0.4/tools/bench/bench.cpp	2010-11-17 11:19:58.000000000 +0900
+++ src/pire-release-0.0.4/tools/bench/bench.cpp	2013-10-05 21:41:24.773243000 +0900
@@ -23,6 +23,7 @@
 
 #include <fcntl.h>
 #include <errno.h>
+#include <unistd.h>
 #include <sys/stat.h>
 #include <sys/mman.h>
 #include <sys/time.h>
