--- origsrc/arprec-2.2.17/Makefile.am	2012-12-04 03:51:09.000000000 +0900
+++ src/arprec-2.2.17/Makefile.am	2015-02-13 00:47:54.591596500 +0900
@@ -4,6 +4,9 @@ SUBDIRS = src tests include fortran tool
 bin_SCRIPTS=arprec-config
 dist_doc_DATA = README doc/arprec.pdf
 
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = arprec.pc
+
 cpp-demo:
 	$(MAKE) -C tests demo
 
--- origsrc/arprec-2.2.17/arprec.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/arprec-2.2.17/arprec.pc.in	2015-02-13 00:47:13.162885600 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: arprec
+Description: C++/Fortran-90 arbitrary precision package
+Version: @VERSION@
+Libs: -L${libdir} -larprec
+Cflags: -I${includedir}
--- origsrc/arprec-2.2.17/configure.ac	2012-12-04 03:53:43.000000000 +0900
+++ src/arprec-2.2.17/configure.ac	2015-02-13 00:47:35.747846500 +0900
@@ -12,7 +12,7 @@
 #
 #
 # Process this file with autoconf to produce a configure script.
-define([ARPREC_PATCHLEVEL], 13)
+define([ARPREC_PATCHLEVEL], 17)
 AC_PREREQ(2.60)
 AC_INIT(arprec, 2.2.ARPREC_PATCHLEVEL, dhbailey@lbl.gov)
 AC_CONFIG_SRCDIR([src/init.cpp])
@@ -280,7 +280,7 @@ AC_SUBST(F77, $FC)
 AC_SUBST(FFLAGS, $FCFLAGS)
 
 AC_CONFIG_FILES([Makefile src/Makefile tests/Makefile include/Makefile
-                 fortran/Makefile toolkit/Makefile arprec-config 
+                 fortran/Makefile toolkit/Makefile arprec-config arprec.pc
                  fortran/second.f toolkit/second.f])
 
 AC_OUTPUT
--- origsrc/arprec-2.2.17/fortran/Makefile.am	2012-12-04 03:51:09.000000000 +0900
+++ src/arprec-2.2.17/fortran/Makefile.am	2015-02-12 23:35:09.391559700 +0900
@@ -2,8 +2,11 @@ if HAVE_FORTRAN
 AM_CPPFLAGS = -I$(top_builddir) -I$(top_builddir)/include -I$(top_srcdir)/include
 LDADD = libarprec_f_main.la libarprecmod.la $(top_builddir)/src/libarprec.la $(FCLIBS)
 
-lib_LTLIBRARIES = libarprecmod.la libarprec_f_main.la
+lib_LTLIBRARIES = libarprecmod.la
+noinst_LTLIBRARIES = libarprec_f_main.la
 libarprecmod_la_SOURCES = f_mp.cpp mp_mod.f mp_modm.f mp_modx.f
+libarprecmod_la_LDFLAGS = -no-undefined
+libarprecmod_la_LIBADD = -lgfortran $(top_builddir)/src/libarprec.la
 libarprec_f_main_la_SOURCES = main.cpp
 
 if UPCASE_MODULE
--- origsrc/arprec-2.2.17/src/Makefile.am	2012-12-04 03:51:10.000000000 +0900
+++ src/arprec-2.2.17/src/Makefile.am	2015-02-12 23:35:09.391559700 +0900
@@ -16,6 +16,7 @@ SRC = add.cpp agmx.cpp ang.cpp angx.cpp
 lib_LTLIBRARIES = libarprec.la
 
 libarprec_la_SOURCES = $(SRC)
+libarprec_la_LDFLAGS = -no-undefined
 
 AM_CPPFLAGS = -I$(top_builddir) -I$(top_builddir)/include -I$(top_srcdir)/include
 
--- origsrc/arprec-2.2.17/toolkit/mathinit.f	2012-12-04 03:51:10.000000000 +0900
+++ src/arprec-2.2.17/toolkit/mathinit.f	2015-02-12 23:35:09.391559700 +0900
@@ -24,7 +24,7 @@ subroutine f_main
 use mpmodule
 use globdata
 integer i, nq3, nquadopt
-parameter (nquadopt = 1)
+parameter (nquadopt = 3)
 real*8 second, tm0, tm1, tm2
 type (mp_real) catalan, eulergamma, t1, t2
 external catalan, eulergamma, second
--- origsrc/arprec-2.2.17/toolkit/mathtool.f	2012-12-04 03:51:10.000000000 +0900
+++ src/arprec-2.2.17/toolkit/mathtool.f	2015-02-12 23:35:09.391559700 +0900
@@ -516,18 +516,18 @@ nef2 = 68
 
 !   Read constants and quadrature arrays from files.
 
-open (11, file = 'const.dat', form = 'unformatted')
+open (11, file = '/usr/share/arprec/const.dat', form = 'unformatted')
 rewind (11)
 read (11) t1, t2
 rewind (11)
 close (11)
 
 if (nquadt == 1) then
-  open (11, file = 'quadgs.dat', form = 'unformatted')
+  open (11, file = '/usr/share/arprec/quadgs.dat', form = 'unformatted')
 elseif (nquadt == 2) then
-  open (11, file = 'quaderf.dat', form = 'unformatted')
+  open (11, file = '/usr/share/arprec/quaderf.dat', form = 'unformatted')
 elseif (nquadt == 3) then
-  open (11, file = 'quadts.dat', form = 'unformatted')
+  open (11, file = '/usr/share/arprec/quadts.dat', form = 'unformatted')
 endif
 rewind (11)
 read (11) nq3
@@ -1441,11 +1441,11 @@ elseif (ix == 6 .or. ix == 7) then
       if (ndebug > 0) write (6, 14) quadn(k1)
 14    format ('New quadrature type: ',a)
       if (k1 == 1) then
-        open (11, file = 'quadgs.dat', form = 'unformatted')
+        open (11, file = '/usr/share/arprec/quadgs.dat', form = 'unformatted')
       elseif (k1 == 2) then
-        open (11, file = 'quaderf.dat', form = 'unformatted')
+        open (11, file = '/usr/share/arprec/quaderf.dat', form = 'unformatted')
       elseif (k1 == 3) then
-        open (11, file = 'quadts.dat', form = 'unformatted')
+        open (11, file = '/usr/share/arprec/quadts.dat', form = 'unformatted')
       else
         write (6, 15)
 15      format ('oper: impossible case; please contact author.')
