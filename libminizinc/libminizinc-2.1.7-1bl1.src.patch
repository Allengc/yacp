--- origsrc/libminizinc-2.1.7/CMakeLists.txt	2018-01-10 12:54:54.000000000 +0900
+++ src/libminizinc-2.1.7/CMakeLists.txt	2018-03-05 11:39:25.749666000 +0900
@@ -86,6 +86,10 @@ endif()
 if ( (CMAKE_VERSION VERSION_GREATER 3.1.0) OR (CMAKE_VERSION VERSION_EQUAL 3.1.0) )
   set (CMAKE_CXX_STANDARD 11)
 else()
+  check_cxx_compiler_flag(-std=gnu++11 HAS_GNUCPP11)
+  if (HAS_GNUCPP11)
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")
+  else()
   check_cxx_compiler_flag(-std=c++11 HAS_STDCPP11)
   if (HAS_STDCPP11)
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
@@ -98,6 +102,7 @@ else()
     endif()
   endif()
 endif()
+endif()
 
 # -------------------------------------------------------------------------------------------------------------------
 if (USE_STDLIBCPP)
@@ -325,6 +330,7 @@ include/minizinc/stl_map_set.hh
 include/minizinc/thirdparty/SafeInt3.hpp
 ${parser_hh}
 )
+set_target_properties(minizinc PROPERTIES SOVERSION 0)
 
 # add the executable
 add_executable(mzn2fzn minizinc.cpp)    #mzn2fzn.cpp)
@@ -605,6 +611,7 @@ if(HAS_FZN)
 	add_library(minizinc_fzn
 		solvers/fzn/fzn_solverinstance.cpp
 	)
+  set_target_properties(minizinc_fzn PROPERTIES SOVERSION 0)
 	target_link_libraries(minizinc_fzn minizinc)
 	add_executable( mzn-fzn minizinc.cpp )
   target_compile_definitions( mzn-fzn PRIVATE HAS_FZN )
@@ -678,10 +685,10 @@ INSTALL(DIRECTORY include/minizinc
 
 # -------------------------------------------------------------------------------------------------------------------
 INSTALL(FILES ${PROJECT_BINARY_DIR}/minizinc/config.hh DESTINATION include/minizinc)
-INSTALL(FILES README.txt INSTALL.txt LICENSE.txt DESTINATION doc/..)
-INSTALL(DIRECTORY doc/pdf DESTINATION doc)
-INSTALL(DIRECTORY share/examples DESTINATION share)
-INSTALL(DIRECTORY lib/cached DESTINATION lib PATTERN md5_cached.cmake EXCLUDE)
+INSTALL(FILES README.txt INSTALL.txt LICENSE.txt DESTINATION share/doc/libminizinc)
+INSTALL(DIRECTORY doc/pdf DESTINATION share/doc/libminizinc)
+INSTALL(DIRECTORY share/examples DESTINATION share/minizinc)
+INSTALL(DIRECTORY lib/cached DESTINATION lib/libminizinc PATTERN md5_cached.cmake EXCLUDE)
 INSTALL(FILES ${parser_hh} DESTINATION include/minizinc)
 
 # -------------------------------------------------------------------------------------------------------------------
@@ -708,3 +715,11 @@ set(CPACK_SOURCE_IGNORE_FILES
   "${CMAKE_CURRENT_BINARY_DIR}/;/tests/;/.git/;/.gitignore;~$;${CPACK_SOURCE_IGNORE_FILES}")
 
 include(CPack)
+
+SET(prefix ${CMAKE_INSTALL_PREFIX})
+SET(exec_prefix ${CMAKE_INSTALL_PREFIX})
+SET(libdir ${CMAKE_INSTALL_PREFIX}/lib)
+SET(includedir ${CMAKE_INSTALL_PREFIX}/include)
+SET(VERSION "${libminizinc_VERSION_MAJOR}.${libminizinc_VERSION_MINOR}.${libminizinc_VERSION_PATCH}")
+CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/${PROJECT_NAME}.pc.in ${CMAKE_BINARY_DIR}/${PROJECT_NAME}.pc @ONLY)
+INSTALL(FILES ${CMAKE_BINARY_DIR}/${PROJECT_NAME}.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
--- origsrc/libminizinc-2.1.7/lib/file_utils.cpp	2018-01-10 12:54:54.000000000 +0900
+++ src/libminizinc-2.1.7/lib/file_utils.cpp	2018-03-05 11:39:25.749666000 +0900
@@ -22,7 +22,7 @@
 #include <string.h>
 #include <libproc.h>
 #include <unistd.h>
-#elif defined(HAS_GETMODULEFILENAME) || defined(HAS_GETFILEATTRIBUTES)
+#elif (defined(HAS_GETMODULEFILENAME) || defined(HAS_GETFILEATTRIBUTES)) && !defined(__CYGWIN__)
 #include <windows.h>
 #else
 #include <unistd.h>
@@ -52,7 +52,7 @@ namespace MiniZinc { namespace FileUtils
       return p;
     }
   }
-#elif defined(HAS_GETMODULEFILENAME)
+#elif defined(HAS_GETMODULEFILENAME) && !defined(__CYGWIN__)
   std::string progpath(void) {
     char path[MAX_PATH];
     int ret = GetModuleFileName(NULL, path, MAX_PATH);
@@ -87,7 +87,7 @@ namespace MiniZinc { namespace FileUtils
 #endif
   
   bool file_exists(const std::string& filename) {
-#if defined(HAS_GETFILEATTRIBUTES)
+#if defined(HAS_GETFILEATTRIBUTES) && !defined(__CYGWIN__)
     DWORD dwAttrib = GetFileAttributes(filename.c_str());
     
     return (dwAttrib != INVALID_FILE_ATTRIBUTES &&
@@ -99,7 +99,7 @@ namespace MiniZinc { namespace FileUtils
   }
   
   bool directory_exists(const std::string& dirname) {
-#if defined(HAS_GETFILEATTRIBUTES)
+#if defined(HAS_GETFILEATTRIBUTES) && !defined(__CYGWIN__)
     DWORD dwAttrib = GetFileAttributes(dirname.c_str());
       
     return (dwAttrib != INVALID_FILE_ATTRIBUTES &&
--- origsrc/libminizinc-2.1.7/libminizinc.pc.in	1970-01-01 09:00:00.000000000 +0900
+++ src/libminizinc-2.1.7/libminizinc.pc.in	2018-03-05 11:39:25.773340000 +0900
@@ -0,0 +1,10 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: libminizinc
+Description: Medium-level constraint modelling language
+Version: @VERSION@
+Libs: -L${libdir} -lminizinc
+Cflags: -I${includedir}
