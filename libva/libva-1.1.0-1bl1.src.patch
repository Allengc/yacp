--- origsrc/libva-1.1.0/test/v4l_h264/Makefile.am	2012-05-29 11:20:40.000000000 +0900
+++ src/libva-1.1.0/test/v4l_h264/Makefile.am	2012-06-16 16:39:19.077489300 +0900
@@ -20,4 +20,4 @@
 # OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE 
 # USE OR OTHER DEALINGS IN THE SOFTWARE.
 
-SUBDIRS = encode decode
+SUBDIRS = decode
--- origsrc/libva-1.1.0/va/Makefile.am	2012-05-29 11:20:40.000000000 +0900
+++ src/libva-1.1.0/va/Makefile.am	2012-06-16 16:27:22.283781000 +0900
@@ -70,7 +70,7 @@ libva_tpi_la_LIBADD		= $(libvacorelib) -
 SUBDIRS				+= x11
 lib_LTLIBRARIES			+= libva-x11.la
 libva_x11_la_SOURCES		= 
-libva_x11_la_LDFLAGS		= $(LDADD)
+libva_x11_la_LDFLAGS		= $(LDADD) -no-undefined
 libva_x11_la_DEPENDENCIES	= $(libvacorelib) x11/libva_x11.la
 libva_x11_la_LIBADD		= $(libvacorelib) x11/libva_x11.la \
 	$(LIBVA_LIBS) $(X11_LIBS) $(XEXT_LIBS) $(DRM_LIBS) $(XFIXES_LIBS) -ldl
@@ -79,7 +79,7 @@ if USE_GLX
 SUBDIRS				+= glx
 lib_LTLIBRARIES			+= libva-glx.la
 libva_glx_la_SOURCES		=
-libva_glx_la_LDFLAGS		= $(LDADD)
+libva_glx_la_LDFLAGS		= $(LDADD) -no-undefined
 libva_glx_la_DEPENDENCIES	= $(libvacorelib) glx/libva_glx.la libva-x11.la
 libva_glx_la_LIBADD		= $(libvacorelib) glx/libva_glx.la libva-x11.la \
 	$(GL_DEPS_LIBS) -ldl
@@ -89,7 +89,7 @@ if USE_EGL
 SUBDIRS				+= egl
 lib_LTLIBRARIES			+= libva-egl.la
 libva_egl_la_SOURCES		=
-libva_egl_la_LDFLAGS		= $(LDADD)
+libva_egl_la_LDFLAGS		= $(LDADD) -no-undefined
 libva_egl_la_DEPENDENCIES	= $(libvacorelib) egl/libva_egl.la libva-x11.la
 libva_egl_la_LIBADD		= $(libvacorelib) egl/libva_egl.la libva-x11.la \
 	$(EGL_DEPS_LIBS) -ldl
@@ -99,7 +99,7 @@ if BUILD_DUMMY_BACKEND
 SUBDIRS				+= dummy
 lib_LTLIBRARIES			+= libva-dummy.la
 libva_dummy_la_SOURCES		= 
-libva_dummy_la_LDFLAGS		= $(LDADD)
+libva_dummy_la_LDFLAGS		= $(LDADD) -no-undefined
 libva_dummy_la_DEPENDENCIES	= $(libvacorelib) dummy/libva_dummy.la
 libva_dummy_la_LIBADD		= $(libvacorelib) dummy/libva_dummy.la \
 	$(LIBVA_LIBS) $(DRM_LIBS)
--- origsrc/libva-1.1.0/va/va.c	2012-05-29 11:20:40.000000000 +0900
+++ src/libva-1.1.0/va/va.c	2012-06-16 16:28:47.021352200 +0900
@@ -37,7 +37,11 @@
 #include <dlfcn.h>
 #include <unistd.h>
 
+#if defined(__CYGWIN__)
+#define DRIVER_EXTENSION	"_drv_video.dll"
+#else
 #define DRIVER_EXTENSION	"_drv_video.so"
+#endif
 
 #define CTX(dpy) (((VADisplayContextP)dpy)->pDriverContext)
 #define CHECK_DISPLAY(dpy) if( !vaDisplayIsValid(dpy) ) { return VA_STATUS_ERROR_INVALID_DISPLAY; }
@@ -193,7 +197,7 @@ static VAStatus va_openDriver(VADisplay
         strncat( driver_path, DRIVER_EXTENSION, strlen(DRIVER_EXTENSION) );
         
         va_infoMessage("Trying to open %s\n", driver_path);
-#ifndef ANDROID
+#if !defined(ANDROID) && !defined(__CYGWIN__)
         handle = dlopen( driver_path, RTLD_NOW | RTLD_GLOBAL | RTLD_NODELETE );
 #else
         handle = dlopen( driver_path, RTLD_NOW| RTLD_GLOBAL);
--- origsrc/libva-1.1.0/va/va_backend.h	2012-05-29 11:20:40.000000000 +0900
+++ src/libva-1.1.0/va/va_backend.h	2012-06-16 16:34:56.864598600 +0900
@@ -30,7 +30,10 @@
 #define _VA_BACKEND_H_
 
 #include <va/va.h>
+
+#if defined(__linux__)
 #include <linux/videodev2.h>
+#endif
 
 typedef struct VADriverContext *VADriverContextP;
 typedef struct VADisplayContext *VADisplayContextP;
--- origsrc/libva-1.1.0/va/va_backend_tpi.h	2012-05-29 11:20:40.000000000 +0900
+++ src/libva-1.1.0/va/va_backend_tpi.h	2012-06-16 16:34:51.270848600 +0900
@@ -32,7 +32,9 @@
 #include <va/va.h>
 #include <va/va_backend.h>
 
+#if defined(__linux__)
 #include <linux/videodev2.h>
+#endif
 
 struct VADriverVTableTPI
 {
