--- origsrc/libva-1.2.1/configure.ac	2013-06-27 10:45:56.000000000 +0900
+++ src/libva-1.2.1/configure.ac	2013-06-29 14:09:42.031807600 +0900
@@ -114,7 +114,7 @@ LIBVA_LT_CURRENT=libva_lt_current
 LIBVA_LT_REV=libva_lt_revision
 LIBVA_LT_AGE=libva_lt_age
 LIBVA_LT_VERSION="$LIBVA_LT_CURRENT:$LIBVA_LT_REV:$LIBVA_LT_AGE"
-LIBVA_LT_LDFLAGS="-version-info $LIBVA_LT_VERSION"
+LIBVA_LT_LDFLAGS="-no-undefined -version-info $LIBVA_LT_VERSION"
 AC_SUBST(LIBVA_LT_VERSION)
 AC_SUBST(LIBVA_LT_LDFLAGS)
 
--- origsrc/libva-1.2.1/va/Makefile.am	2013-06-27 10:45:56.000000000 +0900
+++ src/libva-1.2.1/va/Makefile.am	2013-06-29 14:44:15.982979500 +0900
@@ -59,7 +59,7 @@ libva_source_h_priv = \
 
 libva_ldflags = \
 	$(LDADD) -no-undefined	\
-	-Wl,-version-script,libva.syms \
+	-Wl,-version-script,$(top_srcdir)/va/libva.syms \
 	$(NULL)
 
 lib_LTLIBRARIES			= libva.la
--- origsrc/libva-1.2.1/va/sysdeps.h	2013-06-27 10:45:56.000000000 +0900
+++ src/libva-1.2.1/va/sysdeps.h	2013-06-29 14:34:48.067940400 +0900
@@ -68,6 +68,14 @@
     } while (0)
 #endif
 
+#if defined(__CYGWIN__)
+#if !defined(DLL_HIDDEN)
+#define DLL_HIDDEN __attribute__((visibility("hidden")))
+#endif
+#if !defined(DLL_EXPORT)
+#define DLL_EXPORT __attribute__((visibility("default")))
+#endif
+#else
 #if defined __GNUC__ && defined HAVE_GNUC_VISIBILITY_ATTRIBUTE
 # define DLL_HIDDEN __attribute__((visibility("hidden")))
 # define DLL_EXPORT __attribute__((visibility("default")))
@@ -75,5 +83,6 @@
 # define DLL_HIDDEN
 # define DLL_EXPORT
 #endif
+#endif
 
 #endif /* SYSDEPS_H */
--- origsrc/libva-1.2.1/va/va.c	2013-06-27 10:45:56.000000000 +0900
+++ src/libva-1.2.1/va/va.c	2013-06-29 14:18:32.027901400 +0900
@@ -38,7 +38,11 @@
 #include <dlfcn.h>
 #include <unistd.h>
 
+#if defined(__CYGWIN__)
+#define DRIVER_EXTENSION	"_drv_video.dll"
+#else
 #define DRIVER_EXTENSION	"_drv_video.so"
+#endif
 
 #define CTX(dpy) (((VADisplayContextP)dpy)->pDriverContext)
 #define CHECK_DISPLAY(dpy) if( !vaDisplayIsValid(dpy) ) { return VA_STATUS_ERROR_INVALID_DISPLAY; }
@@ -227,7 +231,7 @@ static VAStatus va_openDriver(VADisplay
         strncat( driver_path, DRIVER_EXTENSION, strlen(DRIVER_EXTENSION) );
         
         va_infoMessage("Trying to open %s\n", driver_path);
-#ifndef ANDROID
+#if !defined(ANDROID) && !defined(__CYGWIN__)
         handle = dlopen( driver_path, RTLD_NOW | RTLD_GLOBAL | RTLD_NODELETE );
 #else
         handle = dlopen( driver_path, RTLD_NOW| RTLD_GLOBAL);
--- origsrc/libva-1.2.1/va/va_backend.h	2013-06-27 10:45:56.000000000 +0900
+++ src/libva-1.2.1/va/va_backend.h	2013-06-29 14:11:10.094307600 +0900
@@ -30,7 +30,9 @@
 #define _VA_BACKEND_H_
 
 #include <va/va.h>
+#if defined(__linux__)
 #include <linux/videodev2.h>
+#endif
 
 typedef struct VADriverContext *VADriverContextP;
 typedef struct VADisplayContext *VADisplayContextP;
--- origsrc/libva-1.2.1/va/va_compat.c	2013-06-27 10:45:56.000000000 +0900
+++ src/libva-1.2.1/va/va_compat.c	2013-06-29 14:39:41.045479500 +0900
@@ -40,4 +40,6 @@ vaCreateSurfaces_0_32_0(
     return vaCreateSurfaces(dpy, format, width, height, surfaces, num_surfaces,
                             NULL, 0);
 }
+#if !defined(__CYGWIN__)
 VA_CPP_HELPER_ALIAS(vaCreateSurfaces, 0,32,0);
+#endif
